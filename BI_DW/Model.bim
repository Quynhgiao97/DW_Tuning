{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/192 168 3 31;PNJ_ROLAP",
        "maxConnections": 4,
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.3.31",
            "database": "PNJ_ROLAP"
          },
          "authentication": null,
          "query": null
        },
        "options": {},
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.3.31;PNJ_ROLAP",
          "Username": "Biread",
          "EncryptConnection": false
        }
      },
      {
        "type": "structured",
        "name": "SQL/192 168 3 31;DW_RAW",
        "maxConnections": 4,
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.2.19",
            "database": "DW_RAW"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.2.19;DW_RAW",
          "Username": "biread",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "Dim - Authoring",
        "isHidden": true,
        "columns": [
          {
            "name": "Plant_Wid",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "Report",
            "dataType": "string",
            "sourceColumn": "Report"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_SYS_AUTHOR_D = Source{[Schema=\"dbo\",Item=\"W_VW_SYS_AUTHOR_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_SYS_AUTHOR_D,{{\"Plant_code\", \"Plant Code\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"Roles\", \"FullName\", \"Cum\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Company",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Company",
            "dataType": "string",
            "sourceColumn": "Company"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "Short Name",
            "dataType": "string",
            "sourceColumn": "Short Name"
          },
          {
            "name": "Company Name",
            "dataType": "string",
            "sourceColumn": "Company Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_INT_ORG_D = Source{[Schema=\"dbo\",Item=\"W_VW_COMPANY_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_INT_ORG_D,{\"BU_FLG\", \"SALES_GROUP_FLG\", \"PRTNR_FLG\", \"INTERNAL_FLG\", \"BUSINESS_AREA_FLG\", \"CONTROL_AREA_FLG\", \"COMPANY_FLG\", \"LEGAL_ENTITY_FLG\", \"BUSINESS_GROUP_FLG\", \"INV_ORG_FLG\", \"HR_ORG_FLG\", \"ASSET_ORG_FLG\", \"PURCH_ORG_FLG\", \"SALES_ORG_FLG\", \"SERVICE_ORG_FLG\", \"COST_ORG_FLG\", \"BRANCH_FLG\", \"RETAIL_FLG\", \"MGR_NAME\", \"INT_ORG_ATTR1_CHAR\", \"INT_ORG_ATTR2_CHAR\", \"INT_ORG_ATTR3_CHAR\", \"INT_ORG_ATTR4_CHAR\", \"INT_ORG_ATTR5_CHAR\", \"INT_ORG_ATTR6_CHAR\", \"INT_ORG_ATTR7_CHAR\", \"INT_ORG_ATTR8_CHAR\", \"INT_ORG_ATTR1_DATE\", \"INT_ORG_ATTR2_DATE\", \"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"DELETE_FLG\", \"CURRENT_FLG\", \"X_CUSTOM\", \"ACTIVE_FLG\", \"LEDGER_WID\", \"COMPANY_WID\", \"TENANT_ID\", \"LAST_UPDATED_DT\", \"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"ORG_CODE\", \"Company\"}, {\"ORG_NAME\", \"Short Name\"}, {\"ORG_DESC\", \"Name\"}}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"Company\", \"Name\", \"Short Name\", \"ORG_TYPE_CODE\", \"LANGUAGE_CODE\", \"CURRENCY_CODE\", \"ST_ADDRESS1\", \"ST_ADDRESS2\", \"CITY_CODE\", \"ROW_WID\", \"POSTAL_CODE\", \"STATE_PROV_CODE\", \"REGION_CODE\", \"COUNTRY_CODE\", \"COUNTRY_NAME\", \"PHONE_NUM\", \"FAX_NUM\", \"EMAIL_ADDRESS\", \"WEB_ADDRESS\", \"FUNC_AREA_FLG\", \"OPERATING_UNIT_FLG\", \"REGISTRATION_NUM\"}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Reordered Columns\",{\"ORG_TYPE_CODE\", \"LANGUAGE_CODE\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"CURRENCY_CODE\", \"Currency\"}, {\"ST_ADDRESS1\", \"Address\"}, {\"ST_ADDRESS2\", \"Address 2\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"Address 2\", \"CITY_CODE\", \"POSTAL_CODE\", \"STATE_PROV_CODE\", \"REGION_CODE\", \"Name\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns2\",{{\"Short Name\", \"Company Name\"}}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"COUNTRY_CODE\", \"COUNTRY_NAME\", \"PHONE_NUM\", \"FAX_NUM\", \"EMAIL_ADDRESS\", \"WEB_ADDRESS\", \"FUNC_AREA_FLG\", \"REGISTRATION_NUM\", \"OPERATING_UNIT_FLG\", \"Currency\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Removed Columns3\",{{\"ORG_SHORT_NAME\", \"Short Name\"}})",
                "in",
                "    #\"Renamed Columns3\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Customer",
        "columns": [
          {
            "name": "BIRTHDAY",
            "dataType": "int64",
            "sourceColumn": "Birthday"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "REGION_WID",
            "dataType": "int64",
            "sourceColumn": "REGION_WID"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PROVINCE_EN",
            "dataType": "string",
            "sourceColumn": "PROVINCE_EN"
          },
          {
            "name": "LOYALTY_POINT",
            "dataType": "int64",
            "sourceColumn": "LOYALTY_POINT"
          },
          {
            "name": "CUST_CARD_DESC",
            "dataType": "string",
            "sourceColumn": "CUST_CARD_DESC"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT"
          },
          {
            "name": "CUST_CAT",
            "dataType": "int64",
            "sourceColumn": "CUST_CAT"
          },
          {
            "name": "PHONE_FLAG",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PHONE_FLAG"
          },
          {
            "name": "Customer Code",
            "dataType": "string",
            "sourceColumn": "Customer Code"
          },
          {
            "name": "Customer Group",
            "dataType": "string",
            "sourceColumn": "Customer Group"
          },
          {
            "name": "Create Date",
            "dataType": "dateTime",
            "sourceColumn": "Create Date",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Customer Parent Code",
            "dataType": "string",
            "sourceColumn": "Customer Parent Code"
          },
          {
            "type": "calculated",
            "name": "Age",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " year(today()) - LEFT('Dim - Customer'[Birthday], 4)"
          },
          {
            "type": "calculated",
            "name": "Number of month Not Buy",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('Dim - Customer'[Last Order Date], TODAY(),MONTH)"
          },
          {
            "type": "calculated",
            "name": "VL_Flag",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if((left('Dim - Customer'[Customer Code], 3) =\"VL_\")||'Dim - Customer'[Customer Code] in {\"KTG\",\"0000\", \"000\"},\"Y\",\"N\")"
          },
          {
            "name": "Customer Name",
            "dataType": "string",
            "sourceColumn": "Customer Name"
          },
          {
            "name": "Title",
            "dataType": "string",
            "sourceColumn": "Title"
          },
          {
            "name": "Last Order Date",
            "dataType": "dateTime",
            "sourceColumn": "Last Order Date"
          },
          {
            "name": "KOL_FLG",
            "dataType": "boolean",
            "sourceColumn": "KOL_FLG"
          },
          {
            "name": "CUSTOMER_KOL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CUSTOMER_KOL"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_CUSTOMER_D = Source{[Schema=\"dbo\",Item=\"W_VW_CUSTOMER_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_CUSTOMER_D,{{\"CUST_CODE\", \"Customer Code\"}, {\"CUST_NAME\", \"Customer Name\"}, {\"PARENT_CODE\", \"Customer Parent Code\"}, {\"XMAN_CODE\", \"XMAN Code\"}, {\"ADDRESS\", \"Address\"}, {\"STREET\", \"Street\"}, {\"BIRTHDAY\", \"Birthday\"}, {\"PHONE\", \"Phone\"}, {\"GENDER\", \"Gender\"}, {\"TITLE\", \"Title\"}, {\"DISTRICT\", \"District\"}, {\"ACCNT_GRP\", \"Account Group\"}, {\"CUST_GRP\", \"Customer Group\"}, {\"COUNTRY\", \"Country\"}, {\"CUSTOMER_TYPE\", \"Customer Type\"}, {\"PROVINCE\", \"Province\"}, {\"REGION_DESC\", \"Region Description\"}, {\"SUB_REGION\", \"Sub Region\"}, {\"SUB_REGION_DESC\", \"Sub Region Description\"}, {\"CITY\", \"City\"}, {\"CAREER\", \"Career\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Customer Parent Code\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"PLANT\", \"INTEGRATION_ID\", \"X_CUSTOM\", \"LAST_UPDATED_DT\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"CUST_PAR_CODE\", \"Street\", \"Address\"}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Removed Columns\",{\"CUST_REF_CODE\", \"TENANT_ID\", \"DATASOURCE_NUM_ID\", \"Phone\", \"Career\", \"Sub Region Description\", \"Sub Region\", \"Region Description\", \"Province\", \"Customer Type\", \"Account Group\", \"District\", \"Country\", \"City\", \"UPD_STATUS\", \"LONGTITUDE\", \"LATITUDE\", \"CHANGED_ON_DT\"}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Removed Columns1\", \"CREATED_ON_DT\", \"CREATED_ON_DT - Copy\"),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Duplicated Column\",{{\"CREATED_ON_DT\", type date}, {\"LAST_ORDER_DT\", type text}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Changed Type1\",{{\"LAST_ORDER_DT\", type date}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Changed Type2\",{{\"CREATED_ON_DT\", \"Create Date\"}, {\"LAST_ORDER_DT\", \"Last Order Date\"}, {\"CREATED_ON_DT - Copy\", \"CREATED_ON_DT\"}, {\"REGISTER_BY\", \"Created By\"}}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"XMAN Code\", \"WARD\"})",
                "in",
                "    #\"Removed Columns3\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# Customer (Master)",
            "expression": " CALCULATE(DISTINCTCOUNT('Dim - Customer'[Customer Parent Code]))",
            "formatString": "#,0"
          },
          {
            "name": "# Customer (master) (create)",
            "expression": " CALCULATE('Dim - Customer'[# Customer (Master)], USERELATIONSHIP('Dim - Customer'[CREATED_ON_DT], 'Dim - Time'[ROW_WID]))",
            "formatString": "#,0"
          },
          {
            "name": "# Customer NOT Buy",
            "expression": " CALCULATE(DISTINCTCOUNT('Dim - Customer'[Customer Parent Code]),FILTER('Dim - Customer', ISBLANK('Dim - Customer'[Last Order Date]) =TRUE()),USERELATIONSHIP('Dim - Customer'[CREATED_ON_DT], 'Dim - Time'[ROW_WID]))",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Product",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PROD_CAT_WID",
            "dataType": "int64",
            "sourceColumn": "PROD_CAT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Product Code",
            "dataType": "string",
            "sourceColumn": "Product Code"
          },
          {
            "name": "Product Name",
            "dataType": "string",
            "sourceColumn": "Product Name"
          },
          {
            "name": "Product Type Name",
            "dataType": "string",
            "sourceColumn": "Product Type Name"
          },
          {
            "name": "Purity of Gold",
            "dataType": "double",
            "sourceColumn": "Purity of Gold",
            "summarizeBy": "none"
          },
          {
            "name": "Brand class",
            "dataType": "string",
            "sourceColumn": "Brand class"
          },
          {
            "name": "COLECTION_CODE",
            "dataType": "string",
            "sourceColumn": "COLECTION_CODE"
          },
          {
            "name": "Item Size",
            "dataType": "string",
            "sourceColumn": "Item Size"
          },
          {
            "name": "Product Group 4 Name",
            "dataType": "string",
            "sourceColumn": "Product Group 4 Name"
          },
          {
            "name": "SIZE",
            "dataType": "string",
            "sourceColumn": "Size"
          },
          {
            "name": "SC_PRODUCT_LV4",
            "dataType": "string",
            "sourceColumn": "SC_PRODUCT_LV4"
          },
          {
            "name": "RPT - Product Group 2 Code",
            "dataType": "string",
            "sourceColumn": "RPT - Product Group 2 Code"
          },
          {
            "name": "MKT_PRODUCT_GRP4_RPT",
            "dataType": "string",
            "sourceColumn": "MKT_PRODUCT_GRP4_RPT"
          },
          {
            "name": "Product Kind",
            "dataType": "string",
            "sourceColumn": "Product Kind"
          },
          {
            "name": "Gem Type",
            "dataType": "string",
            "sourceColumn": "Gem Type"
          },
          {
            "name": "Gem Main",
            "dataType": "string",
            "sourceColumn": "Gem Main"
          },
          {
            "name": "Gem Second",
            "dataType": "string",
            "sourceColumn": "Gem Second"
          },
          {
            "name": "Gem Group Size",
            "dataType": "string",
            "sourceColumn": "Gem Group Size"
          },
          {
            "name": "Gem Group Size (SAP)",
            "dataType": "string",
            "sourceColumn": "Gem Group Size (SAP)"
          },
          {
            "name": "Gem Group Size (MKT)",
            "dataType": "string",
            "sourceColumn": "Gem Group Size (MKT)"
          },
          {
            "name": "net_weight",
            "dataType": "double",
            "sourceColumn": "net_weight"
          },
          {
            "name": "Co-Operate Brand",
            "dataType": "string",
            "sourceColumn": "Co-Operate Brand"
          },
          {
            "name": "Colection Name",
            "dataType": "string",
            "sourceColumn": "Colection Name"
          },
          {
            "name": "RPT_Product Group 4 Name",
            "dataType": "string",
            "sourceColumn": "RPT_Product Group 4 Name"
          },
          {
            "name": "RPT_Product Group 2 Name",
            "dataType": "string",
            "sourceColumn": "RPT_Product Group 2 Name"
          },
          {
            "name": "RPT - Product Group 7 Name",
            "dataType": "string",
            "sourceColumn": "RPT - Product Group 7 Name"
          },
          {
            "name": "RPT_BASIC_MATERIAL",
            "dataType": "string",
            "sourceColumn": "RPT_BASIC_MATERIAL"
          },
          {
            "name": "Product Type Code",
            "dataType": "string",
            "sourceColumn": "Product Type Code"
          },
          {
            "name": "Base UOM Code",
            "dataType": "string",
            "sourceColumn": "Base UOM Code"
          },
          {
            "name": "SIZE_WID",
            "dataType": "int64",
            "sourceColumn": "SIZE_WID"
          },
          {
            "name": "BASIC_PRODUCT",
            "dataType": "string",
            "sourceColumn": "BASIC_PRODUCT"
          },
          {
            "name": "Product Group LV2",
            "dataType": "string",
            "sourceColumn": "Product Group LV2"
          },
          {
            "name": "Product Group Name LV2",
            "dataType": "string",
            "sourceColumn": "Product Group Name LV2"
          },
          {
            "name": "Product Group LV5",
            "dataType": "string",
            "sourceColumn": "Product Group LV5"
          },
          {
            "name": "Product Group Name LV5",
            "dataType": "string",
            "sourceColumn": "Product Group Name LV5"
          },
          {
            "name": "Product Group LV6",
            "dataType": "string",
            "sourceColumn": "Product Group LV6"
          },
          {
            "name": "Product Group Name LV6",
            "dataType": "string",
            "sourceColumn": "Product Group Name LV6"
          },
          {
            "name": "Product Group LV7",
            "dataType": "string",
            "sourceColumn": "Product Group LV7"
          },
          {
            "name": "Product Group Name LV7",
            "dataType": "string",
            "sourceColumn": "Product Group Name LV7"
          },
          {
            "name": "Product Group LV3",
            "dataType": "string",
            "sourceColumn": "Product Group LV3"
          },
          {
            "name": "Product Group Name LV3",
            "dataType": "string",
            "sourceColumn": "Product Group Name LV3"
          },
          {
            "name": "Product Group",
            "dataType": "string",
            "sourceColumn": "Product Group"
          },
          {
            "name": "IsGoldBar",
            "dataType": "string",
            "sourceColumn": "IsGoldBar"
          },
          {
            "name": "Standard Weight",
            "dataType": "double",
            "sourceColumn": "Standard Weight"
          },
          {
            "name": "THANTAI_GRP",
            "dataType": "string",
            "sourceColumn": "THANTAI_GRP"
          },
          {
            "name": "TT_NET_WEIGHT",
            "dataType": "string",
            "sourceColumn": "TT_NET_WEIGHT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT   [ROW_WID]",
                "--      ,[DATASOURCE_NUM_ID]",
                "      ,[PROD_NUM]",
                "      ,[PRODUCT_NAME]",
                "",
                "--      ,[XMAN_PROD_NUM]",
                "",
                "      ,[PRODUCT_TYPE_CODE]",
                "      ,[PRODUCT_TYPE_NAME]",
                "      ,[BASIC_PRODUCT]",
                "      ,[PROD_GRP]",
                "      ,[PROD_GRP_NAME]",
                "      ,[PROD_GRP1]",
                "      ,[PROD_GRP1_NAME]",
                "      ,[PROD_GRP2]",
                "      ,[PROD_GRP2_NAME]",
                "      ,[PROD_GRP3]",
                "      ,[PROD_GRP3_NAME]",
                "      ,[PROD_GRP4]",
                "      ,[PROD_GRP4_NAME]",
                "      ,[PROD_GRP5]",
                "      ,[PROD_GRP5_NAME]",
                "      ,[PROD_GRP6]",
                "      ,[PROD_GRP6_NAME]",
                "      ,[PROD_GRP7]",
                "      ,[PROD_GRP7_NAME]",
                "",
                "",
                "",
                "      ,[COLOR]",
                "",
                "      ,[ITEM_SIZE]",
                "",
                "",
                "",
                "",
                "      ,[BASE_UOM_CODE]",
                "      ,[PURITY_OF_GOLD]",
                "",
                "      ,[PROD_CAT_WID]",
                "      ,[COLECTION_CODE]",
                "      ,[COLECTION_NAME]",
                "      ,[PROD_CAT4_NAME]",
                "      ,[PROD_LV2_RPT]",
                "      ,[PROD_GRP_7_RPT]",
                "      ,[PROD_LV4_RPT]",
                "      ,[MKT_PRODUCT_GRP4_RPT]",
                "      ,[PROD_LV2_RPT_NAME]",
                "      ,[Brand class]",
                "      ,[PRODUCT_KIND]",
                "      ,[STONE_TYPE]",
                "      ,[STONE_MAIN]",
                "      ,[STONE_SECOND]",
                "      ,[SIZE]",
                "      ,[SIZE_WID]",
                "      ,[SIZE_STONE]",
                "      ,[SIZE_STONE_SAP]",
                "      ,[SIZE_STONE_MKT]",
                "      ,[SC_PRODUCT_LV4]",
                "      ,[net_weight]",
                "      ,[BRAND]",
                "      ,[RPT_BASIC_MATERIAL]",
                "      ,IsGoldBar",
                ",STANDARD_WEIGHT",
                ",THANTAI_GRP,",
                "TT_NET_WEIGHT",
                "  FROM [dbo].[W_VW_PRODUCT_D] with (nolock)\"),",
                "       #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PROD_NUM\", \"Product Number\"}, {\"PRODUCT_NAME\", \"Product Name\"}, {\"PRODUCT_TYPE_CODE\", \"Product Type Code\"}, {\"PRODUCT_TYPE_NAME\", \"Product Type Name\"}, {\"PROD_GRP\", \"Product Group\"}, {\"PROD_GRP_NAME\", \"Product Group Name\"}, {\"PROD_GRP1\", \"Product Group LV1\"}, {\"PROD_GRP1_NAME\", \"Product Group Name LV1\"}, {\"PROD_GRP2\", \"Product Group LV2\"}, {\"PROD_GRP2_NAME\", \"Product Group Name LV2\"}, {\"PROD_GRP3\", \"Product Group LV3\"}, {\"PROD_GRP3_NAME\", \"Product Group Name LV3\"}, {\"PROD_GRP4\", \"Product Group LV4\"}, {\"PROD_GRP4_NAME\", \"Product Group Name LV4\"}, {\"PROD_GRP5\", \"Product Group LV5\"}, {\"PROD_GRP5_NAME\", \"Product Group Name LV5\"}, {\"PROD_GRP6\", \"Product Group LV6\"}, {\"PROD_GRP6_NAME\", \"Product Group Name LV6\"}, {\"PROD_GRP7\", \"Product Group LV7\"}, {\"PROD_GRP7_NAME\", \"Product Group Name LV7\"}, {\"COLOR\", \"Color\"}, {\"ITEM_SIZE\", \"Item Size\"}, {\"BASE_UOM_CODE\", \"Base UOM Code\"}, {\"PURITY_OF_GOLD\", \"Purity of Gold\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns\",{\"Product Group Name\", \"Product Group LV1\", \"Product Group Name LV1\", \"Product Group LV4\", \"Product Group Name LV4\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns2\", {\"Product Number\"}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Removed Duplicates\",{\"Color\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns3\",{{\"Product Number\", \"Product Code\"} }),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"PROD_LV4_RPT\", \"RPT_Product Group 4 Name\"}, {\"PROD_LV2_RPT_NAME\", \"RPT_Product Group 2 Name\"}, {\"PROD_LV2_RPT\", \"RPT - Product Group 2 Code\"},   {\"PROD_CAT4_NAME\", \"Product Group 4 Name\"}, {\"COLECTION_NAME\", \"Colection Name\"}, {\"PROD_GRP_7_RPT\", \"RPT - Product Group 7 Name\"}, {\"STONE_TYPE\", \"Gem Type\"}, {\"STONE_MAIN\", \"Gem Main\"}, {\"STONE_SECOND\", \"Gem Second\"}, {\"PRODUCT_KIND\", \"Product Kind\"}, {\"SIZE\", \"Size\"},{\"STANDARD_WEIGHT\", \"Standard Weight\"} }),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"SIZE_STONE\", \"Gem Group Size\"}, {\"SIZE_STONE_SAP\", \"Gem Group Size (SAP)\"}, {\"SIZE_STONE_MKT\", \"Gem Group Size (MKT)\"}, {\"BRAND\", \"Co-Operate Brand\"} })",
                "in",
                "    #\"Renamed Columns3\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Time",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "WEEKEND_FLG",
            "dataType": "string",
            "sourceColumn": "WEEKEND_FLG"
          },
          {
            "name": "MONTH_AGO_WID",
            "dataType": "int64",
            "sourceColumn": "MONTH_AGO_WID"
          },
          {
            "name": "YEAR_AGO_WID",
            "dataType": "int64",
            "sourceColumn": "YEAR_AGO_WID"
          },
          {
            "name": "Year",
            "dataType": "string",
            "sourceColumn": "Year"
          },
          {
            "name": "Half Year",
            "dataType": "string",
            "sourceColumn": "Half Year"
          },
          {
            "name": "Quater",
            "dataType": "string",
            "sourceColumn": "Quater"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Week",
            "dataType": "string",
            "sourceColumn": "Week"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "Date",
            "formatString": "yyyy-MM-dd",
            "sortByColumn": "ROW_WID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Day Name",
            "dataType": "string",
            "sourceColumn": "Day Name",
            "sortByColumn": "Day of Week Num"
          },
          {
            "name": "Day of Month",
            "dataType": "int64",
            "sourceColumn": "Day of Month",
            "summarizeBy": "none"
          },
          {
            "name": "Day of Week Num",
            "dataType": "int64",
            "sourceColumn": "Day of Week Num",
            "summarizeBy": "none"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "Month Name"
          },
          {
            "name": "Holiday Flag",
            "dataType": "string",
            "sourceColumn": "Holiday Flag"
          },
          {
            "name": "Lunar Month",
            "dataType": "int64",
            "sourceColumn": "Lunar Month"
          },
          {
            "name": "Lunar Date Key",
            "dataType": "int64",
            "sourceColumn": "Lunar Date Key"
          },
          {
            "name": "Lunar Day",
            "dataType": "int64",
            "sourceColumn": "Lunar Day"
          },
          {
            "type": "calculated",
            "name": "Month year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " FORMAT('Dim - Time'[Date], \"mmm yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Month Num",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " mid('Dim - Time'[ROW_WID], 5,2)"
          },
          {
            "name": "! Quater Key",
            "dataType": "int64",
            "sourceColumn": "! Quater Key"
          },
          {
            "type": "calculated",
            "name": "!Order Quater Key",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " RANKX('Dim - Time', 'Dim - Time'[! Quater Key],, ASC, Dense)"
          },
          {
            "type": "calculated",
            "name": "Year Format",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF(YEAR('Dim - Time'[Date]) = YEAR(TODAY()) && YEAR('Dim - Time'[Date]) = YEAR(TODAY()),\"This year\", 'Dim - Time'[Year])"
          },
          {
            "type": "calculated",
            "name": "Month Format",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF(MONTH('Dim - Time'[Date]) = MONTH(TODAY()) && YEAR('Dim - Time'[Date]) = YEAR(TODAY()),\"This month\", 'Dim - Time'[Month Num])"
          },
          {
            "type": "calculated",
            "name": "now",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": " TODAY()"
          },
          {
            "type": "calculated",
            "name": "earliest Refresh Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": " NOW()"
          },
          {
            "type": "calculated",
            "name": "Day_today",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF( VALUE('Dim - Time'[Date]) = TODAY(),\"Today\", FORMAT('Dim - Time'[Date],\"mm/dd/yyyy\"))"
          },
          {
            "name": "Month Start",
            "dataType": "dateTime",
            "sourceColumn": "Month Start",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "PNJP Week",
            "dataType": "int64",
            "sourceColumn": "PNJP Week"
          },
          {
            "name": "PNJP KD Week",
            "dataType": "int64",
            "sourceColumn": "PNJP KD Week"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_DAY_D = Source{[Schema=\"dbo\",Item=\"W_DAY_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_DAY_D,{\"ENT_PERIOD_AGO_WID\", \"CAL_HALF\", \"CAL_QTR\", \"CAL_TRIMESTER\", \"CAL_WEEK\", \"DATASOURCE_NUM_ID\", \"ENT_DAY_OF_PERIOD\", \"ENT_DAY_OF_WEEK\", \"ENT_DAY_OF_YEAR\", \"ENT_HALF\", \"ENT_PERIOD\", \"ENT_QTR\", \"ENT_TRIMESTER\", \"ENT_WEEK\", \"ENT_YEAR\", \"HALF_AGO_DT\", \"HALF_AGO_WID\", \"PER_NAME_ENT_QTR\", \"PER_NAME_ENT_TER\", \"PER_NAME_ENT_WEEK\", \"PER_NAME_ENT_YEAR\", \"PER_NAME_OFFSET_WK\", \"TRIMESTER_AGO_DT\", \"TRIMESTER_AGO_WID\", \"WEEK_AGO_DT\", \"WEEK_AGO_WID\", \"M_END_CAL_DT_WID\", \"CAL_WEEK_END_DT_WID\", \"CAL_WEEK_START_DT_WID\", \"CAL_QTR_END_DT_WID\", \"CAL_QTR_START_DT_WID\", \"FST_DAY_CAL_WK_FLG\", \"LAST_DAY_CAL_WK_FLG\", \"FST_DAY_CAL_MNTH_FLG\", \"FST_DAY_CAL_QTR_FLG\", \"LAST_DAY_CAL_QTR_FLG\", \"FST_DAY_CAL_YEAR_FLG\", \"LAST_DAY_CAL_YEAR_FLG\", \"ENT_WEEK_START_DT\", \"ENT_WEEK_END_DT\", \"ENT_PERIOD_START_DT\", \"ENT_PERIOD_END_DT\", \"ENT_QTR_START_DT\", \"ENT_QTR_END_DT\", \"ENT_YEAR_START_DT\", \"ENT_YEAR_END_DT\", \"ENT_WEEK_START_DT_WID\", \"ENT_WEEK_END_DT_WID\", \"ENT_PERIOD_START_DT_WID\", \"ENT_PERIOD_END_DT_WID\", \"ENT_QTR_START_DT_WID\", \"ENT_QTR_END_DT_WID\", \"ENT_YEAR_START_DT_WID\", \"ENT_YEAR_END_DT_WID\", \"ENT_PERIOD_WEEK_NUM\", \"FST_DAY_ENT_WEEK_FLG\", \"LAST_DAY_ENT_WEEK_FLG\", \"FST_DAY_ENT_PERIOD_FLG\", \"LAST_DAY_ENT_PERIOD_FLG\", \"FST_DAY_ENT_QTR_FLG\", \"LAST_DAY_ENT_QTR_FLG\", \"FST_DAY_ENT_YEAR_FLG\", \"LAST_DAY_ENT_YEAR_FLG\", \"INTEGRATION_ID\", \"ENT_QTR_AGO_WID\", \"DATE_KEY\", \"DAY_AGO_WID\", \"DAY_OF_YEAR\", \"MONTH_AGO_DT\", \"PER_NAME_TER\", \"QUARTER_AGO_DT\", \"QUARTER_AGO_WID\", \"YEAR_AGO_DT\", \"CAL_YEAR_END_DT_WID\", \"CAL_YEAR_START_DT\", \"CAL_YEAR_END_DT\", \"CAL_YEAR_WID\", \"ENT_WEEK_AGO_WID\", \"CAL_YEAR\", \"CAL_MONTH\", \"PER_NAME_ENT_HALF\", \"DAY_AGO_DT\", \"CAL_YEAR_START_DT_WID\" }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"CALENDAR_DATE\", \"Date\"}, {\"PER_NAME_HALF\", \"Half Year\"}, {\"PER_NAME_MONTH\", \"Month\"}, {\"PER_NAME_QTR\", \"Quater\"}, {\"PER_NAME_WEEK\", \"Week\"}, {\"PER_NAME_YEAR\", \"Year\"}, {\"PER_NAME_ENT_PERIOD\", \"Period\"}, {\"HOLIDAY_FLG\", \"Holiday Flag\"}, {\"DAY_OF_MONTH\", \"Day of Month\"}, {\"CAL_MONTH_WID\", \"MONTH_KEY\"}, {\"DAY_OF_WEEK\", \"Day of Week Num\"}, {\"DAY_NAME\", \"Day Name\"}, {\"MONTH_NAME\", \"Month Name\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"M_END_CAL_DT\", \"LAST_DAY_CAL_MNTH_FLG\", \"M_START_CAL_DT_WID\", \"ENT_DATE\", \"ENT_PERIOD_WID\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"LUNAR_DATE_WID\", \"Lunar Date Key\"}, {\"LUNAR_DAY\", \"Lunar Day\"}, {\"LUNAR_MONTH\", \"Lunar Month\"}, {\"LUNAR_YEAR\", \"Lunar Year\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"MONTH_KEY\"}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Columns2\",{\"Year\", \"Half Year\", \"Quater\", \"Month\", \"Week\", \"Date\", \"Day Name\", \"Day of Month\", \"Day of Week Num\", \"Month Name\", \"ROW_WID\", \"Holiday Flag\", \"MONTH_AGO_WID\", \"YEAR_AGO_WID\", \"Period\", \"Lunar Year\", \"Lunar Month\", \"Lunar Date Key\", \"Lunar Day\"}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Reordered Columns\",{\"Period\", \"Lunar Year\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns3\",{{\"Date\", type date}}),",
                "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Changed Type\",{\"Year\", \"Half Year\", \"Quater\", \"Month\", \"Week\", \"Date\", \"Day Name\", \"Day of Month\", \"Day of Week Num\", \"Month Name\", \"ROW_WID\", \"Holiday Flag\", \"MONTH_AGO_WID\", \"YEAR_AGO_WID\", \"Lunar Month\", \"Lunar Date Key\", \"Lunar Day\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Reordered Columns1\", each ([Year] = \"2013\" or [Year] = \"2014\" or [Year] = \"2015\" or [Year] = \"2016\" or [Year] = \"2017\" or [Year] = \"2018\" or [Year] = \"2019\" or [Year] = \"2020\" or [Year] = \"2021\" or [Year] = \"2022\" or [Year] = \"2023\" or [Year] = \"2024\" or [Year] = \"2025\" or [Year] = \"2026\" or [Year] = \"2027\" or [Year] = \"2028\")),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Filtered Rows\",{{\"CAL_QTR_WID\", \"! Quater Key\"}, {\"M_START_CAL_DT\", \"Month Start\"}, {\"PNJP_WEEK\", \"PNJP Week\"}, {\"PNJP_KD_WEEK\", \"PNJP KD Week\"}})",
                "in",
                "    #\"Renamed Columns2\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Plant",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "TIER",
            "dataType": "string",
            "sourceColumn": "TIER",
            "summarizeBy": "none"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "PROVINCE",
            "dataType": "string",
            "sourceColumn": "PROVINCE"
          },
          {
            "name": "DISTRICT",
            "dataType": "string",
            "sourceColumn": "DISTRICT"
          },
          {
            "name": "CLOSED_DT",
            "dataType": "int64",
            "sourceColumn": "CLOSED_DT"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          },
          {
            "name": "Distribution Channel",
            "dataType": "string",
            "sourceColumn": "Distribution Channel"
          },
          {
            "name": "Plant Type",
            "dataType": "string",
            "sourceColumn": "Plant Type"
          },
          {
            "name": "Channel Plant",
            "dataType": "string",
            "sourceColumn": "Channel Plant"
          },
          {
            "name": "Open Date",
            "dataType": "int64",
            "sourceColumn": "Open Date"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "sourceColumn": "Sales District Name"
          },
          {
            "name": "First Transaction DT",
            "dataType": "int64",
            "sourceColumn": "First Transaction DT",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "First Transaction Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              " date(left('Dim - Plant'[First Transaction DT], 4),",
              "                         mid('Dim - Plant'[First Transaction DT], 5,2),",
              "                        right('Dim - Plant'[First Transaction DT], 2))"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LAST_TRX_DT",
            "dataType": "int64",
            "sourceColumn": "LAST_TRX_DT"
          },
          {
            "name": "XMAN Code",
            "dataType": "string",
            "sourceColumn": "XMAN Code"
          },
          {
            "name": "Plant Name",
            "dataType": "string",
            "sourceColumn": "Plant Name"
          },
          {
            "name": "Region Code",
            "dataType": "string",
            "sourceColumn": "Region Code"
          },
          {
            "type": "calculated",
            "name": "Tier (desc)",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if(ISBLANK('Dim - Plant'[TIER]) = TRUE(), \"\", \"Tier \" & 'Dim - Plant'[TIER])"
          },
          {
            "type": "calculated",
            "name": "Sales area",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if(ISBLANK('Dim - Plant'[Region Code]) = TRUE() || 'Dim - Plant'[Region Code] =\"\", \"\", \"Cụm \" &'Dim - Plant'[Region Code])"
          },
          {
            "name": "INDUSTRY",
            "dataType": "string",
            "sourceColumn": "INDUSTRY"
          },
          {
            "name": "Channel Plant Name",
            "dataType": "string",
            "sourceColumn": "Channel Plant Name"
          },
          {
            "name": "Short Name",
            "dataType": "string",
            "sourceColumn": "Short Name"
          },
          {
            "type": "calculated",
            "name": "Plant Name 1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Dim - Plant'[Plant Code] &\"_\" & 'Dim - Plant'[Plant Name]"
          },
          {
            "name": "BRANCH_DIRECTOR_NAME",
            "dataType": "string",
            "sourceColumn": "BRANCH_DIRECTOR_NAME"
          },
          {
            "name": "RSM_NAME",
            "dataType": "string",
            "sourceColumn": "RSM_NAME"
          },
          {
            "name": "ASM_NAME",
            "dataType": "string",
            "sourceColumn": "ASM_NAME"
          },
          {
            "name": "STORE_MANAGER_NAME",
            "dataType": "string",
            "sourceColumn": "STORE_MANAGER_NAME"
          },
          {
            "name": "Plant Kind",
            "dataType": "string",
            "sourceColumn": "Plant Kind"
          },
          {
            "name": "Sales District",
            "dataType": "string",
            "sourceColumn": "Sales District"
          },
          {
            "name": "BRANCH_DIRECTOR_CODE",
            "dataType": "string",
            "sourceColumn": "BRANCH_DIRECTOR_CODE"
          },
          {
            "name": "RSM_CODE",
            "dataType": "string",
            "sourceColumn": "RSM_CODE"
          },
          {
            "name": "ASM_CODE",
            "dataType": "string",
            "sourceColumn": "ASM_CODE"
          },
          {
            "name": "STORE_MANAGER_CODE",
            "dataType": "string",
            "sourceColumn": "STORE_MANAGER_CODE"
          },
          {
            "name": "SC_REGION_DESC",
            "dataType": "string",
            "sourceColumn": "SC_REGION_DESC"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "sourceColumn": "Company Code"
          },
          {
            "name": "Company Name",
            "dataType": "string",
            "sourceColumn": "Company Name"
          },
          {
            "name": "Palexy ID",
            "dataType": "int64",
            "sourceColumn": "Palexy ID"
          },
          {
            "name": "DATASOURCE_NUM_ID",
            "dataType": "int64",
            "sourceColumn": "DATASOURCE_NUM_ID"
          },
          {
            "name": "Active Flag",
            "dataType": "int64",
            "sourceColumn": "ACTIVE_FLG"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS"
          },
          {
            "name": "CUM",
            "dataType": "string",
            "sourceColumn": "CUM"
          },
          {
            "name": "Store Aging",
            "dataType": "int64",
            "sourceColumn": "Store Aging"
          },
          {
            "name": "DALs",
            "dataType": "string",
            "sourceColumn": "DALs"
          },
          {
            "name": "DAL_Group",
            "dataType": "int64",
            "sourceColumn": "DAL_Group"
          },
          {
            "name": "TT_PROVINCE",
            "dataType": "string",
            "sourceColumn": "TT_PROVINCE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "dbo_W_PLANT_D = Source{[Schema=\"dbo\",Item=\"W_VW_PLANT_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_PLANT_D,{{\"ADDRESS\", \"Address\"}, {\"PLANT_SHORT_NAME\", \"Short Name\"}, {\"PLANT_CODE\", \"Plant Code\"}, {\"PLANT_NAME\", \"Plant Name\"}, {\"HR_CODE\", \"HR Code\"}, {\"AREA\", \"Area\"}, {\"AREA_CODE\", \"Area Code\"}, {\"AREA_NAME\", \"Area Name\"}, {\"CHANNEL\", \"Channel\"}, {\"CHANNEL_NAME\", \"Channel Name\"}, {\"REGION\", \"Region\"}, {\"REGION_CODE\", \"Region Code\"}, {\"REGION_NAME\", \"Region Name\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"TENANT_ID\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"X_CUSTOM\", \"CHANGED_BY\", \"CHANGED_ON_DT\", \"CHANGED_AT\", \"CREATED_ON_DT\", \"CREATED_AT\", \"CREATED_BY\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"Channel\", \"Channel Plant\"}, {\"Channel Name\", \"Channel Plant Name\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"INTEGRATION_ID\", \"HR Code\", \"BUSINESS_REG_CODE\", \"BUSINESS_REG_DT\", \"PLANT_REF_CODE\", \"PLANT_PAR_CODE\", \"BU_GROUP\", \"TITLE\", \"DELETE_FLG\", \"COUNTRY\", \"SUB_REGION\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns1\",{{\"YEAR\", \"OPENED_YEAR\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"CHANGED_TIME\", \"GROUND_STATUS\", \"GROUND_ACREAGE\", \"GOLD_ACREAGE\", \"SILVER_ACREAGE\", \"WATCH_ACREAGE\", \"JEMMA_ACREAGE\", \"CUST_CLASS\", \"PHONE1\", \"PHONE2\", \"SALE_TERR_WID\", \"PLANT_CATEGORY\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Removed Columns2\",{{\"SALES_DIST\", \"Sales District\"}, {\"SALES_DIST_NAME\", \"Sales District Name\"}}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Renamed Columns3\",{\"SUMMARY_ACREAGE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Removed Columns3\",{{\"OPENED_DT\", \"Open Date\"}}),",
                "    #\"Removed Columns4\" = Table.RemoveColumns(#\"Renamed Columns4\",{\"OPENED_YEAR\"}),",
                "    #\"Renamed Columns5\" = Table.RenameColumns(#\"Removed Columns4\",{{\"DIST_CHANNEL\", \"Distribution Channel\"}}),",
                "    #\"Removed Columns5\" = Table.RemoveColumns(#\"Renamed Columns5\",{\"DATE_KEY\", \"WARD\", \"STREET\", \"QUARTER\", \"MONTH\", \"SALES_GRP\"}),",
                "    #\"Renamed Columns6\" = Table.RenameColumns(#\"Removed Columns5\",{{\"XMAN_CODE\", \"XMAN Code\"}}),",
                "    #\"Removed Columns6\" = Table.RemoveColumns(#\"Renamed Columns6\",{\"PURCH_ORG\", \"Region Name\", \"SALES_ORG\", \"Address\"}),",
                "    #\"Renamed Columns7\" = Table.RenameColumns(#\"Removed Columns6\",{{\"PLANT_TYPE\", \"Plant Type\"}, {\"FIRST_TRX_DT\", \"First Transaction DT\"}}),",
                "    #\"Removed Columns7\" = Table.RemoveColumns(#\"Renamed Columns7\",{\"Area\", \"PLANT_TYPE_CHANGE\", \"Area Name\", \"Area Code\"}),",
                "    #\"Renamed Columns8\" = Table.RenameColumns(#\"Removed Columns7\",{{\"PLANT_KIND\", \"Plant Kind\"}, {\"SUB_REGION_NAME\", \"CUM\"}}),",
                "    #\"Removed Columns8\" = Table.RemoveColumns(#\"Renamed Columns8\",{\"PLANT_TYPE_OLD\", \"PLANT_TYPE_NEW\", \"COMPANY_WID\", \"LATITUDE\", \"LONGITUDE\"}),",
                "    #\"Renamed Columns9\" = Table.RenameColumns(#\"Removed Columns8\",{{\"ORG_CODE\", \"Company Code\"}, {\"ORG_SHORT_NAME\", \"Company Name\"}, {\"PALEXY_STORE_ID\", \"Palexy ID\"}, {\"AGING\", \"Store Aging\"}}),",
                "    #\"Removed Columns9\" = Table.RemoveColumns(#\"Renamed Columns9\",{\"PLANT_CODE_NAME\"})",
                "in",
                "    #\"Removed Columns9\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# Plant New",
            "expression": " CALCULATE(DISTINCTCOUNT('Dim - Plant'[Plant Code]),  FILTER('Dim - Plant', ISBLANK('Dim - Plant'[First Transaction Date]) = FALSE()),USERELATIONSHIP('Dim - Plant'[First Transaction DT], 'Dim - Time'[ROW_WID]))",
            "formatString": "#,0"
          },
          {
            "name": "..Plant (YTD)",
            "expression": " CALCULATE('Dim - Plant'[# Plant New],FILTER(ALL('Dim - Time'[Date]),'Dim - Time'[Date]<= Max('Dim - Time'[Date])))",
            "formatString": "#,0"
          },
          {
            "name": "# Plant",
            "expression": " CALCULATE(DISTINCTCOUNT('Dim - Plant'[Plant Code]), 'Dim - Plant'[Active Flag] = 1)",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Program",
        "columns": [
          {
            "name": "PROGRAM_TYPE",
            "dataType": "string",
            "sourceColumn": "PROGRAM_TYPE"
          },
          {
            "name": "PROGRAM_NAME",
            "dataType": "string",
            "sourceColumn": "PROGRAM_NAME"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "DATASOURCE_NUM_ID",
            "dataType": "int64",
            "sourceColumn": "DATASOURCE_NUM_ID"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "EFFECTIVE_FROM_DT",
            "dataType": "int64",
            "sourceColumn": "EFFECTIVE_FROM_DT",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "EFFECTIVE_TO_DT",
            "dataType": "int64",
            "sourceColumn": "EFFECTIVE_TO_DT",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PROGRAM_CATEGORY",
            "dataType": "string",
            "sourceColumn": "PROGRAM_CATEGORY"
          },
          {
            "type": "calculated",
            "name": "CK_DL_SDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATE(LEFT('Dim - Program'[EFFECTIVE_FROM_DT],4)-1,MID('Dim - Program'[EFFECTIVE_FROM_DT],5,2),RIGHT('Dim - Program'[EFFECTIVE_FROM_DT],2))",
            "formatString": "yyyy-MM-dd",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Date From",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATE(LEFT('Dim - Program'[EFFECTIVE_FROM_DT],4),MID('Dim - Program'[EFFECTIVE_FROM_DT],5,2),RIGHT('Dim - Program'[EFFECTIVE_FROM_DT],2))",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Date To",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATE(LEFT('Dim - Program'[EFFECTIVE_TO_DT],4),MID('Dim - Program'[EFFECTIVE_TO_DT],5,2),RIGHT('Dim - Program'[EFFECTIVE_TO_DT],2))",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Program Length",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(date(left('Dim - Program'[EFFECTIVE_FROM_DT], 4), mid('Dim - Program'[EFFECTIVE_FROM_DT], 5,2), RIGHT('Dim - Program'[EFFECTIVE_FROM_DT], 2)), date(left('Dim - Program'[EFFECTIVE_TO_DT], 4), mid('Dim - Program'[EFFECTIVE_TO_DT], 5,2), RIGHT('Dim - Program'[EFFECTIVE_TO_DT], 2)),DAY) +1"
          },
          {
            "type": "calculated",
            "name": "MKT.Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "Year([Date From])"
          },
          {
            "type": "calculated",
            "name": "CK_DL_EDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATE(LEFT('Dim - Program'[EFFECTIVE_TO_DT],4)-1,MID('Dim - Program'[EFFECTIVE_TO_DT],5,2),RIGHT('Dim - Program'[EFFECTIVE_TO_DT],2))",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"",
                "   SELECT [DATASOURCE_NUM_ID]",
                "      ,[ROW_WID]",
                "      ,[COMPANY_WID]",
                "      ,[PROGRAM_NAME]",
                "      ,[EFFECTIVE_FROM_DT]",
                "      ,[EFFECTIVE_TO_DT]",
                "--      ,[TIME]",
                "      ,[PLANT_WID]",
                "      ,[DATE_KEY]",
                "      ,[PROGRAM_TYPE]",
                "      ,[PROGRAM_CATEGORY]",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_MARKETING_PROGRAM_D]\")",
                "",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Length",
            "expression": " max('Dim - Program'[Program Length])"
          },
          {
            "name": "Length (LY)",
            "expression": [
              " ",
              "VAR LY = CALCULATE([Length],FILTER(",
              "\tALL('Dim - Program'), ",
              "\t'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1 )",
              "\t)",
              "VAR DIFF = [Length] - LY",
              "RETURN IF (DIFF >0,DIFF & \" ngày\", if(DIFF<0, DIFF*-1 & \" ngày\", IF(diff =0, DIFF & \" ngày\")))"
            ]
          },
          {
            "name": "EndTime",
            "expression": [
              " CALCULATE(min('Dim - Program'[Date To]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "StartTime",
            "expression": [
              " CALCULATE(min('Dim - Program'[Date From]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN EndDT",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(max('Dim - Program'[EFFECTIVE_TO_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar Date]), Filter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN EndDT CK",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(max('Dim - Program'[EFFECTIVE_TO_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar LY]), Filter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN EndDT LY",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(max('Dim - Program'[EFFECTIVE_TO_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) -1 )",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar Date]),",
              "\t Filter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN StartDT",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(min('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar Date]), Filter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN StartDT CK",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(min('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar LY]), ",
              "\tFilter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LN StartDT LY",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(min('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1)",
              "\t)",
              "\t",
              "var LunarDate =  CALCULATETABLE(VALUES('Dim - Time (Lunar)'[Lunar Date]), ",
              "\tFilter('Dim - Time (Lunar)' ,'Dim - Time (Lunar)'[ROW_WID] = StartDT))",
              "",
              "return LASTDATE(LunarDate)"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "StartDT CK",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(MIN('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var CalendarDate =  CALCULATETABLE(VALUES('Dim - Program'[CK_DL_SDate]), ",
              "\tFilter('Dim - Program' ,'Dim - Program'[EFFECTIVE_FROM_DT] = StartDT))",
              "",
              "return LASTDATE(CalendarDate )"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "EndDT CK",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(MIN('Dim - Program'[EFFECTIVE_TO_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t)",
              "\t",
              "var CalendarDate =  CALCULATETABLE(VALUES('Dim - Program'[CK_DL_EDate]), ",
              "\tFilter('Dim - Program' ,'Dim - Program'[EFFECTIVE_FROM_DT] = StartDT))",
              "",
              "return LASTDATE(CalendarDate )"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "StartDT LY",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(MIN('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))-1)",
              "\t)",
              "\t",
              "var CalendarDate =  CALCULATETABLE(VALUES('Dim - Program'[Date From]), ",
              "\tFilter('Dim - Program' ,'Dim - Program'[EFFECTIVE_FROM_DT] = StartDT))",
              "",
              "return LASTDATE(CalendarDate )"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "EndDT LY",
            "expression": [
              " ",
              "VAR StartDT = ",
              "CALCULATE(MIN('Dim - Program'[EFFECTIVE_TO_DT]),",
              "    FILTER(",
              "\t    ALL('Dim - Program'), ",
              "\t    'Dim - Program'[Program_Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t    VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))-1)",
              "\t)",
              "\t",
              "var CalendarDate =  CALCULATETABLE(VALUES('Dim - Program'[Date To]), ",
              "\tFilter('Dim - Program' ,'Dim - Program'[EFFECTIVE_TO_DT] = StartDT))",
              "",
              "return LASTDATE(CalendarDate )"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Fact - Plan Data",
        "columns": [
          {
            "name": "MONTH_KEY",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MONTH_KEY"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "PLAN_REVENUE",
            "dataType": "double",
            "sourceColumn": "PLAN_REVENUE"
          },
          {
            "name": "PROD_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PROD_WID"
          },
          {
            "name": "LEVEL_NAME",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL_NAME"
          },
          {
            "name": "PROD_CAT_4_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT_4_NAME"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    #\"dbo_[W_VW_PLAN_REVENUE_D]\" = Source{[Schema=\"dbo\",Item=\"W_VW_PLAN_REVENUE_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"dbo_[W_VW_PLAN_REVENUE_D]\",{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"XMAN_CODE\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Net_Amt_FC",
            "expression": " sum('Fact - Plan Data'[PLAN_REVENUE])",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amt (FC) (YTD)",
            "expression": " CALCULATE([. Net_Amt_FC], DATESYTD('Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amt (FC) (Full Year)",
            "expression": "  CALCULATE([. Net Amt (FC) (YTD)],ENDOFYEAR('Dim - Time'[Date]))"
          }
        ]
      },
      {
        "name": "Fact - SSSG",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "Net Amt",
            "dataType": "double",
            "sourceColumn": "Net Amt"
          },
          {
            "name": "Previous Net Amt",
            "dataType": "double",
            "sourceColumn": "Previous Net Amt"
          },
          {
            "name": "Report Flag",
            "dataType": "int64",
            "sourceColumn": "Report Flag"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_SSSG_F = Source{[Schema=\"dbo\",Item=\"W_VW_SSSG_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_SSSG_F,{{\"REPORT_FLG\", \"Report Flag\"}, {\"PREVIOUS_NET_AMT\", \"Previous Net Amt\"}, {\"NET_AMT\", \"Net Amt\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"DATE_KEY\", Int64.Type}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each [DATE_KEY] >= 20190101)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Fact - SSSG 2019",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_SSSG_F = Source{[Schema=\"dbo\",Item=\"W_VW_SSSG_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_SSSG_F,{{\"REPORT_FLG\", \"Report Flag\"}, {\"PREVIOUS_NET_AMT\", \"Previous Net Amt\"}, {\"NET_AMT\", \"Net Amt\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"DATE_KEY\", Int64.Type}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each [DATE_KEY] < 20190101)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                  "    dbo_W_VW_SSSG_F = Source{[Schema=\"dbo\",Item=\"W_VW_SSSG_F\"]}[Data],",
                  "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_SSSG_F,{{\"REPORT_FLG\", \"Report Flag\"}, {\"PREVIOUS_NET_AMT\", \"Previous Net Amt\"}, {\"NET_AMT\", \"Net Amt\"}}),",
                  "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"DATE_KEY\", Int64.Type}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each [DATE_KEY] < 20190101)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": ". SSSG",
            "expression": " CALCULATE(sum('Fact - SSSG'[Net Amt])/sum('Fact - SSSG'[Previous Net Amt])-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Fact - Marketing Plan",
        "columns": [
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "PROGRAM_WID",
            "dataType": "int64",
            "sourceColumn": "PROGRAM_WID"
          },
          {
            "name": "TARGET_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TARGET_AMT"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "type": "calculated",
            "name": "Program Category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "RELATED('Dim - Program'[PROGRAM_CATEGORY])"
          },
          {
            "type": "calculated",
            "name": "MKT.Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " RELATED('Dim - Program'[MKT.Year])"
          },
          {
            "name": "Lunar Date",
            "dataType": "dateTime",
            "sourceColumn": "Lunar Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"",
                "    SELECT [COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[PRODUCT_WID]",
                "      ,[DATE_KEY]",
                "      ,[PROGRAM_WID]",
                "      ,[TARGET_AMT]",
                "      ,[LUNAR_DT]",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_MARKETING_PLAN_F]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"LUNAR_DT\", \"Lunar Date\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Target Marketing",
            "expression": " CALCULATE(sum('Fact - Marketing Plan'[TARGET_AMT]))",
            "formatString": "#,0"
          },
          {
            "name": ". Target Maketing (Region)",
            "expression": " [. Target Marketing]/CALCULATE([. Target Marketing], all('Dim - Plant'))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". Target Marketing (LY)",
            "expression": [
              " CALCULATE(SUM('Fact - Marketing Plan'[TARGET_AMT]),",
              "\tFILTER(All('Fact - Marketing Plan'),",
              "\t 'Fact - Marketing Plan'[Program Category] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY]) &&",
              "\tVALUE('Fact - Marketing Plan'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) -1",
              ")",
              ")",
              ""
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Territory",
        "columns": [
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Sub region",
            "dataType": "string",
            "sourceColumn": "Sub region"
          },
          {
            "name": "SALES_REGION",
            "dataType": "string",
            "sourceColumn": "SALES_REGION"
          },
          {
            "name": "Province",
            "dataType": "string",
            "sourceColumn": "Province"
          },
          {
            "name": "Province EN",
            "dataType": "string",
            "sourceColumn": "Province EN"
          },
          {
            "name": "District EN",
            "dataType": "string",
            "sourceColumn": "District EN"
          },
          {
            "name": "District XMAN",
            "dataType": "string",
            "sourceColumn": "District XMAN"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_TERITORY_DH = Source{[Schema=\"dbo\",Item=\"W_TERITORY_DH\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_TERITORY_DH,{\"COUNTRY_CD\", \"REGION_CD\", \"SUB_REGION_CD\", \"PROVINCE_CD\", \"DISTRICT_CD\", \"INTEGRATION_ID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"COUNTRY\", \"Country\"}, {\"REGION\", \"Region\"}, {\"SUB_REGION\", \"Sub region\"}, {\"PROVINCE\", \"Province\"}, {\"PROVINCE_EN\", \"Province EN\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"DISTRICT\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"DISTRICT_EN\", \"District EN\"}, {\"DISTRICT_XMAN\", \"District XMAN\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Future Quater",
        "isHidden": true,
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          },
          {
            "type": "calculated",
            "name": "Quater_1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " \"Quater \" & if('Dim - Future Quater'[Value]< 10, \"0\" & 'Dim - Future Quater'[Value], 'Dim - Future Quater'[Value])"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, 12, 1)"
            }
          }
        ]
      },
      {
        "name": "Fact - RFM",
        "isHidden": true,
        "columns": [
          {
            "name": "Customer Parent Code",
            "dataType": "string",
            "sourceColumn": "Customer Parent Code"
          },
          {
            "name": "Fst Order DT",
            "dataType": "int64",
            "sourceColumn": "Fst Order DT"
          },
          {
            "name": "Last Order DT",
            "dataType": "int64",
            "sourceColumn": "Last Order DT"
          },
          {
            "name": "COUNT_ORDER",
            "dataType": "int64",
            "sourceColumn": "COUNT_ORDER"
          },
          {
            "name": "Net Amt",
            "dataType": "double",
            "sourceColumn": "Net Amt"
          },
          {
            "name": "Avg Amt",
            "dataType": "double",
            "sourceColumn": "Avg Amt"
          },
          {
            "name": "Recency",
            "dataType": "int64",
            "sourceColumn": "Recency"
          },
          {
            "name": "RFM_Recency",
            "dataType": "int64",
            "sourceColumn": "RFM_Recency"
          },
          {
            "name": "RFM_Frequency",
            "dataType": "int64",
            "sourceColumn": "RFM_Frequency"
          },
          {
            "name": "RFM_SEGMENT",
            "dataType": "string",
            "sourceColumn": "RFM_SEGMENT"
          },
          {
            "name": "RFM_SCORE",
            "dataType": "double",
            "sourceColumn": "RFM_SCORE"
          },
          {
            "name": "RFM_LEVEL",
            "dataType": "int64",
            "sourceColumn": "RFM_LEVEL"
          },
          {
            "name": "K_CLUSTER",
            "dataType": "string",
            "sourceColumn": "K_CLUSTER"
          },
          {
            "name": "CUST_WID",
            "dataType": "double",
            "sourceColumn": "CUST_WID"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Sub Region",
            "dataType": "string",
            "sourceColumn": "Sub Region"
          },
          {
            "name": "Province",
            "dataType": "string",
            "sourceColumn": "Province"
          },
          {
            "name": "Base Line DT",
            "dataType": "string",
            "sourceColumn": "Base Line DT"
          },
          {
            "type": "calculated",
            "name": "Cluster Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE('Dim - Cluster'[DESCRIPTION1], 'Dim - Cluster'[LOOKUP_VALUE], 'Fact - RFM'[K_CLUSTER])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_RPT_CUSTOMER_RFM_F = Source{[Schema=\"dbo\",Item=\"W_VW_RPT_CUSTOMER_RFM_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_VW_RPT_CUSTOMER_RFM_F,{\"SALES_DIST_NAME\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"CUST_WID\", type number}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"CUST_PAR_CODE\", \"Cutomer Parent Code\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"RFM_MONETARY\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"TOTAL_AMOUNT\", \"Net Amt\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"Cutomer Parent Code\", \"Customer Parent Code\"}, {\"FRST_ORDER_DATE\", \"Fst Order DT\"}, {\"LAST_ORDER_DATE\", \"Last Order DT\"}, {\"AVG_AMOUNT\", \"Avg Amt\"}, {\"RECENCY\", \"Recency\"}, {\"RFM_RECENCY\", \"RFM_Recency\"}, {\"RFM_FREQUENCY\", \"RFM_Frequency\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"Expr1\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Removed Columns2\",{{\"REGION\", \"Region\"}, {\"SUB_REGION\", \"Sub Region\"}, {\"PROVINCE\", \"Province\"}, {\"BASELINE_DATE_WID\", \"Base Line DT\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns3\",{{\"Customer Parent Code\", type text}})",
                "in",
                "    #\"Changed Type1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# Customer RFM",
            "expression": " CALCULATE(DISTINCTCOUNT('Dim - Customer'[Customer Parent Code]), filter('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Customer WID] in values('Fact - RFM'[CUST_WID])),FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] > 20191231 && 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] <= MAX('Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID])))",
            "formatString": "#,0"
          },
          {
            "name": "# Customer RFM Total",
            "expression": " CALCULATE(DISTINCTCOUNT('Fact - RFM'[Customer Parent Code]))",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Storage Location",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "Sloc Code",
            "dataType": "string",
            "sourceColumn": "Sloc Code"
          },
          {
            "name": "Sloc Name",
            "dataType": "string",
            "sourceColumn": "Sloc Name"
          },
          {
            "name": "Plant Storage Loc.",
            "dataType": "string",
            "sourceColumn": "Plant Storage Loc."
          },
          {
            "name": "Sloc Group",
            "dataType": "string",
            "sourceColumn": "Sloc Group"
          },
          {
            "name": "Company Wid",
            "dataType": "int64",
            "sourceColumn": "Company Wid"
          },
          {
            "name": "ORG_CODE",
            "dataType": "string",
            "sourceColumn": "ORG_CODE"
          },
          {
            "name": "ORG_SHORT_NAME",
            "dataType": "string",
            "sourceColumn": "ORG_SHORT_NAME"
          },
          {
            "name": "SC_REGION_DESC",
            "dataType": "string",
            "sourceColumn": "SC_REGION_DESC"
          },
          {
            "name": "SUB_SLOC",
            "dataType": "string",
            "sourceColumn": "SUB_SLOC"
          },
          {
            "name": "DELETE_FLG",
            "dataType": "boolean",
            "sourceColumn": "DELETE_FLG"
          },
          {
            "name": "SUB_REGION_NAME",
            "dataType": "string",
            "sourceColumn": "SUB_REGION_NAME"
          },
          {
            "name": "SLOC_CODE_NAME",
            "dataType": "string",
            "sourceColumn": "SLOC_CODE_NAME"
          },
          {
            "name": "Sloc Decription",
            "dataType": "string",
            "sourceColumn": "Sloc Decription"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT * FROM W_VW_STORAGE_LOC_D\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"DATASOURCE_NUM_ID\",\"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"COST_ORG_CODE\", \"SLOC_DESC\",\"SLOC_SITE\", \"SLOC_ADDRESS\", \"SLOC_TYPE\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"PLANT_CODE\", \"Plant Code\"}, {\"SLOC_CODE\", \"Sloc Code\"}, {\"SLOC_NAME\", \"Sloc Name\"}, {\"Plant_Sloc\", \"Plant Storage Loc.\"}, {\"SLOC_GROUP\", \"Sloc Group\"}, {\"COMPANY_WID\", \"Company Wid\"}, {\"Sloc_Full\", \"Sloc Decription\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Vendor",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Supplier Code",
            "dataType": "string",
            "sourceColumn": "Supplier Code"
          },
          {
            "name": "Supplier Name",
            "dataType": "string",
            "sourceColumn": "Supplier Name"
          },
          {
            "name": "Currency Code",
            "dataType": "string",
            "sourceColumn": "Currency Code"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City"
          },
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country"
          },
          {
            "name": "REGION_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "REGION_WID"
          },
          {
            "name": "Postal Code",
            "dataType": "string",
            "sourceColumn": "Postal Code"
          },
          {
            "name": "CUSTOMER_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUSTOMER_WID"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "ALLOC_SORT_KEY",
            "dataType": "string",
            "sourceColumn": "ALLOC_SORT_KEY"
          },
          {
            "name": "ALT_ACCT_NUM",
            "dataType": "string",
            "sourceColumn": "ALT_ACCT_NUM"
          },
          {
            "name": "ALT_ACCT_NAME",
            "dataType": "string",
            "sourceColumn": "ALT_ACCT_NAME"
          },
          {
            "name": "PERSONNEL_NAME",
            "dataType": "string",
            "sourceColumn": "PERSONNEL_NAME"
          },
          {
            "name": "LOC_EXCHANGE_RATE",
            "dataType": "double",
            "sourceColumn": "LOC_EXCHANGE_RATE"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT"
          },
          {
            "name": "ST_ADDRESS1",
            "dataType": "string",
            "sourceColumn": "ST_ADDRESS1"
          },
          {
            "name": "STATE_PROV_CODE",
            "dataType": "string",
            "sourceColumn": "STATE_PROV_CODE"
          },
          {
            "name": "CONTINENT_CODE",
            "dataType": "string",
            "sourceColumn": "CONTINENT_CODE"
          },
          {
            "name": "PHONE_NUM",
            "dataType": "string",
            "sourceColumn": "PHONE_NUM"
          },
          {
            "name": "FAX_NUM",
            "dataType": "string",
            "sourceColumn": "FAX_NUM"
          },
          {
            "name": "PARTY_ID",
            "dataType": "int64",
            "sourceColumn": "PARTY_ID"
          },
          {
            "name": "LOCATION_ID",
            "dataType": "int64",
            "sourceColumn": "LOCATION_ID"
          },
          {
            "name": "LAST_UPDATED_DT",
            "dataType": "dateTime",
            "sourceColumn": "LAST_UPDATED_DT"
          },
          {
            "name": "CUST_GRP",
            "dataType": "string",
            "sourceColumn": "CUST_GRP"
          },
          {
            "name": "VENDOR_GRP",
            "dataType": "string",
            "sourceColumn": "VENDOR_GRP"
          },
          {
            "name": "ACCOUNT_TYPE_CODE",
            "dataType": "string",
            "sourceColumn": "ACCOUNT_TYPE_CODE"
          },
          {
            "type": "calculated",
            "name": "RPT Vendor Group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if('Dim - Vendor'[Supplier Code] = \"0000005000\" || 'Dim - Vendor'[Supplier Code] = \"5000\", \"PNJP\",if('Dim - Vendor'[VENDOR_GRP] = \"Z012\", \"NCC Nhau Khau\", if('Dim - Vendor'[VENDOR_GRP] = \"Z011\" || ('Dim - Vendor'[VENDOR_GRP] = \"Z001\" && 'Dim - Vendor'[ACCOUNT_TYPE_CODE] = \"2\"), \"NCC Trong Nuoc\", \"Other\")))"
          },
          {
            "name": "RPT_VHCU_GROUP",
            "dataType": "string",
            "sourceColumn": "RPT_VHCU_GROUP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT[SPLR_ACCT_NUM]",
                "      ,[SPLR_ACCT_NAME]",
                "      ,[ALLOC_SORT_KEY]",
                "      ,[ALT_ACCT_NUM]",
                "      ,[ALT_ACCT_NAME]",
                "      ,[PERSONNEL_NAME]",
                "      ,[LOC_CURR_CODE]",
                "      ,[LOC_EXCHANGE_RATE]",
                "      ,[CREATED_ON_DT]",
                "      ,[CHANGED_ON_DT]",
                "      ,[EFFECTIVE_FROM_DT]",
                "      ,[EFFECTIVE_TO_DT]",
                "      ,[DELETE_FLG]",
                "      ,[CURRENT_FLG]",
                "      ,[TENANT_ID]",
                "      ,[X_CUSTOM]",
                "      ,[SUPPLIER_SITE_CODE]",
                "      ,[ST_ADDRESS1]",
                "      ,[CITY_CODE]",
                "      ,[STATE_PROV_CODE]",
                "      ,[COUNTRY_CODE]",
                "      ,[REGION_WID]",
                "      ,[POSTAL_CODE]",
                "      ,[CONTINENT_CODE]",
                "      ,[PHONE_NUM]",
                "      ,[FAX_NUM]",
                "      ,[CUSTOMER_WID]",
                "      ,[PARTY_ID]",
                "      ,[LOCATION_ID]",
                "      ,[LAST_UPDATED_DT]",
                "      ,[COMPANY_WID]",
                "      ,[CUST_GRP]",
                "      ,[VENDOR_GRP]",
                "      ,[ACCOUNT_TYPE_CODE], ROW_WID, RPT_VHCU_GROUP",
                "  FROM [dbo].[W_VW_VENDOR_D]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source ,{{\"SPLR_ACCT_NUM\", \"Supplier Code\"}, {\"SPLR_ACCT_NAME\", \"Supplier Name\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{ {\"CITY_CODE\", \"City\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns1\",{ {\"LOC_CURR_CODE\", \"Currency Code\"}, {\"COUNTRY_CODE\", \"Country\"}, {\"POSTAL_CODE\", \"Postal Code\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns3\",{\"DELETE_FLG\", \"CURRENT_FLG\", \"TENANT_ID\", \"X_CUSTOM\", \"CHANGED_ON_DT\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"SUPPLIER_SITE_CODE\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Purchase Order Line",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "Order Number",
            "dataType": "string",
            "sourceColumn": "Order Number"
          },
          {
            "name": "Order Qty",
            "dataType": "double",
            "sourceColumn": "Order Qty"
          },
          {
            "name": "Net Price",
            "dataType": "double",
            "sourceColumn": "Net Price"
          },
          {
            "name": "Gross Amount",
            "dataType": "double",
            "sourceColumn": "Gross Amount"
          },
          {
            "name": "Net Amount",
            "dataType": "double",
            "sourceColumn": "Net Amount"
          },
          {
            "name": "Tax Amount",
            "dataType": "double",
            "sourceColumn": "Tax Amount"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "Order Type",
            "dataType": "string",
            "sourceColumn": "Order Type"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SUPPLIER_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SUPPLIER_WID"
          },
          {
            "name": "INV_ORG_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INV_ORG_WID"
          },
          {
            "name": "PURCH_ORG_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PURCH_ORG_WID"
          },
          {
            "name": "TAX_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TAX_WID"
          },
          {
            "name": "INCOMPLETE_CAT",
            "dataType": "string",
            "sourceColumn": "INCOMPLETE_CAT"
          },
          {
            "name": "STORAGE_LOC_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "STORAGE_LOC_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PURCH_ORDER_STATUS",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_STATUS"
          },
          {
            "name": "TARGET_QTY",
            "dataType": "double",
            "sourceColumn": "TARGET_QTY"
          },
          {
            "name": "SHIP_DT",
            "dataType": "string",
            "sourceColumn": "SHIP_DT"
          },
          {
            "name": "INCOMPLETE_FLG",
            "dataType": "string",
            "sourceColumn": "INCOMPLETE_FLG"
          },
          {
            "name": "DOCUMENT_STATUS",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DOCUMENT_STATUS"
          },
          {
            "name": "NET_WEIGHT",
            "dataType": "double",
            "sourceColumn": "NET_WEIGHT"
          },
          {
            "name": "Q10_QTY",
            "dataType": "double",
            "sourceColumn": "Q10_QTY"
          },
          {
            "name": "DELIVERY_DT",
            "dataType": "int64",
            "sourceColumn": "DELIVERY_DT"
          },
          {
            "name": "Order Cat",
            "dataType": "string",
            "sourceColumn": "Order Cat"
          },
          {
            "name": "Release State",
            "dataType": "string",
            "sourceColumn": "Release State"
          },
          {
            "name": "REQ_TRACKING_NUM",
            "dataType": "string",
            "sourceColumn": "REQ_TRACKING_NUM"
          },
          {
            "name": "PO_TYPE_WID",
            "dataType": "int64",
            "sourceColumn": "PO_TYPE_WID"
          },
          {
            "name": "PO_DELETE_STATUS",
            "dataType": "int64",
            "sourceColumn": "PO_DELETE_STATUS"
          },
          {
            "name": "Old Qty",
            "dataType": "double",
            "sourceColumn": "Old Qty"
          },
          {
            "name": "New Qty",
            "dataType": "double",
            "sourceColumn": "New Qty"
          },
          {
            "name": "Cancel Qty",
            "dataType": "double",
            "sourceColumn": "Cancel Qty"
          },
          {
            "name": "Cancel Item Status",
            "dataType": "string",
            "sourceColumn": "Cancel Item Status"
          },
          {
            "name": "ORDERED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "ORDERED_ON_DT"
          },
          {
            "name": "PURCH_ORDER_ITEM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_ITEM"
          },
          {
            "name": "UOM_CONVERSION",
            "dataType": "int64",
            "sourceColumn": "UOM_CONVERSION"
          },
          {
            "name": "Storage Location",
            "dataType": "string",
            "sourceColumn": "Storage Location"
          },
          {
            "name": "BASE_UOM_CODE",
            "dataType": "string",
            "sourceColumn": "BASE_UOM_CODE"
          },
          {
            "name": "LINE_ITEM_TEXT",
            "dataType": "string",
            "sourceColumn": "LINE_ITEM_TEXT"
          },
          {
            "name": "PROFIT_CENTER_WID",
            "dataType": "int64",
            "sourceColumn": "PROFIT_CENTER_WID"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT"
          },
          {
            "name": "CHANGED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CHANGED_ON_DT"
          },
          {
            "name": "LAST_UPDATED_DT",
            "dataType": "dateTime",
            "sourceColumn": "LAST_UPDATED_DT"
          },
          {
            "name": "PO Group",
            "dataType": "string",
            "sourceColumn": "PO Group"
          },
          {
            "name": "PO Type Description",
            "dataType": "string",
            "sourceColumn": "PO Type Description"
          },
          {
            "name": "DELIVERY_COMPLETED",
            "dataType": "string",
            "sourceColumn": "DELIVERY_COMPLETED"
          },
          {
            "name": "OLD_DELIVERY_DT",
            "dataType": "int64",
            "sourceColumn": "OLD_DELIVERY_DT"
          },
          {
            "name": "DELETION_IND",
            "dataType": "string",
            "sourceColumn": "DELETION_IND"
          },
          {
            "type": "calculated",
            "name": "RPT Type",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if('Fact - Purchase Order Line'[Order Type] = \"Z01\" && 'Fact - Purchase Order Line'[PO Group] = \"111\", \"Đơn Hàng Khách\", if('Fact - Purchase Order Line'[Order Type] = \"Z01\" && 'Fact - Purchase Order Line'[PO Group] = \"110\", \"Đơn Hàng Phóng\", \"N/A\"))"
          },
          {
            "name": "PO Group Description",
            "dataType": "string",
            "sourceColumn": "PO Group Description"
          },
          {
            "type": "calculated",
            "name": "Moving PO Status",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if('Fact - Purchase Order Line'[OLD_DELIVERY_DT] <> 'Fact - Purchase Order Line'[DELIVERY_DT], \"Dời\", \"Không Dời\")"
          },
          {
            "type": "calculated",
            "name": "RPT Ontime PO Status",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " if('Fact - Purchase Order Line'[Moving PO Status] = \"Dời\" && (ISBLANK('Fact - Purchase Order Line'[RECEIPT_DATE]) && CONVERT(FORMAT(TODAY(),\"YYYYMMDD\"), INTEGER) <= 'Fact - Purchase Order Line'[DELIVERY_DT]), \"Pending Processing\" ,",
              " \tif('Fact - Purchase Order Line'[Moving PO Status] = \"Không Dời\" && ISBLANK('Fact - Purchase Order Line'[RECEIPT_DATE]) && CONVERT(FORMAT(TODAY(),\"YYYYMMDD\"), INTEGER) < 'Fact - Purchase Order Line'[DELIVERY_DT], \"In Processing\",",
              "\t\tif('Fact - Purchase Order Line'[Moving PO Status] = \"Dời\" && 'Fact - Purchase Order Line'[RECEIPT_DATE] <= 'Fact - Purchase Order Line'[DELIVERY_DT], \"Pending Ontime\",",
              "\t\tif('Fact - Purchase Order Line'[Moving PO Status] = \"Không Dời\" && 'Fact - Purchase Order Line'[RECEIPT_DATE] <= 'Fact - Purchase Order Line'[DELIVERY_DT], \"Completed_ontime\",",
              "\t\t\t\tIf('Fact - Purchase Order Line'[RECEIPT_DATE] > 'Fact - Purchase Order Line'[DELIVERY_DT], \"Completed Late\",",
              "\t\t\t\tIf('Fact - Purchase Order Line'[Moving PO Status] = \"Dời\" && (ISBLANK('Fact - Purchase Order Line'[RECEIPT_DATE]) && CONVERT(FORMAT(TODAY(),\"YYYYMMDD\"), INTEGER) > 'Fact - Purchase Order Line'[DELIVERY_DT]), \"InCompleted Late\", \"\"))))))"
            ]
          },
          {
            "name": "ISSUE_DATE",
            "dataType": "int64",
            "sourceColumn": "ISSUE_DATE"
          },
          {
            "name": "RECEIPT_DATE",
            "dataType": "int64",
            "sourceColumn": "RECEIPT_DATE"
          },
          {
            "name": "GI Qty",
            "dataType": "double",
            "sourceColumn": "GI Qty"
          },
          {
            "name": "GR Qty",
            "dataType": "double",
            "sourceColumn": "GR Qty"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [DATE_KEY]",
                "      ,[ORDERED_ON_DT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[PURCH_ORDER_ITEM]",
                "      ,[PURCH_ORDER_STATUS]",
                "      ,[ORDER_QTY]",
                "      ,[TARGET_QTY]",
                "      ,[UNIT_PRICE]",
                "      ,[NET_PRI]",
                "      ,[GROSS_AMT]",
                "      ,[NET_AMT]",
                "      ,[TAX_AMT]",
                "      ,[UOM_CODE]",
                "      ,[UOM_CONVERSION]",
                "      ,[STORAGE_LOC]",
                "      ,[BASE_UOM_CODE]",
                "      ,[DOC_CURR_CODE]",
                "      ,[EXCHANGE_RATE]",
                "      ,[LINE_ITEM_TEXT]",
                "      ,[PURCH_ORDER_CAT]",
                "      ,[PURCH_ORDER_TYPE]",
                "      ,[SHIP_DT]",
                "      ,[COMPANY_WID]",
                "      ,[PRODUCT_WID]",
                "      ,[SUPPLIER_WID]",
                "      ,[INV_ORG_WID]",
                "      ,[PURCH_ORG_WID]",
                "      ,[PURCH_GROUP_DESC]",
                "      ,[PROFIT_CENTER_WID]",
                "      ,[TAX_WID]",
                "      ,[INCOMPLETE_FLG]",
                "      ,[DOCUMENT_STATUS]",
                "      ,[INCOMPLETE_CAT]",
                "      ,[CREATED_ON_DT]",
                "      ,[CHANGED_ON_DT]",
                "      ,[LAST_UPDATED_DT]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[PLANT_WID]",
                "      ,[PURCH_ORDER_GRP]",
                "      ,[PURCH_ORDER_TYPE_DESC]",
                "      ,[NET_WEIGHT]",
                "      ,[Q10_QTY]",
                "      ,[INVOICE_NUM]",
                "      ,[PURCH_ORDER_TEXT]",
                "      ,[CUSTOMER_WID]",
                "      ,[RELEASE_STATE]",
                "      ,[REQ_TRACKING_NUM]",
                "      ,[DELIVERY_COMPLETED]",
                "      ,[DELIVERY_DT]",
                "      ,[OLD_DELIVERY_DT]",
                "      ,[DELETION_IND]",
                "      ,[OLD_QTY]",
                "      ,[NEW_QTY]",
                "      ,[CANCEL_QTY]",
                "      ,[CANCEL_ITEM_STATUS]",
                "      ,[PO_DELETE_STATUS]",
                "      ,[PO_TYPE_WID]",
                "      ,[ISSUE_DATE]",
                "      ,[RECEIPT_DATE]",
                "      ,GI_Qty",
                "      ,GR_QTY",
                "FROM [dbo].[W_VW_PURCHASE_ORDER_F]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PURCH_ORDER_NUM\", \"Order Number\"}, {\"UNIT_PRICE\", \"Unit Price\"}, {\"NET_PRI\", \"Net Price\"}, {\"ORDER_QTY\", \"Order Qty\"}, {\"GROSS_AMT\", \"Gross Amount\"}, {\"NET_AMT\", \"Net Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"UOM_CODE\", \"UOM\"}, {\"STORAGE_LOC\", \"Storage Location\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PURCH_ORDER_CAT\", \"Order Cat\"}, {\"PURCH_ORDER_TYPE\", \"Order Type\"}, {\"RELEASE_STATE\", \"Release State\"}, {\"CANCEL_QTY\", \"Cancel Qty\"}, {\"NEW_QTY\", \"New Qty\"}, {\"OLD_QTY\", \"Old Qty\"}, {\"CANCEL_ITEM_STATUS\", \"Cancel Item Status\"}, {\"PURCH_GROUP_DESC\", \"PO Group Description\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"Cancel Item Status\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"EXCHANGE_RATE\", \"DOC_CURR_CODE\", \"PURCH_ORDER_TEXT\",\"Unit Price\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns\",{{\"PURCH_ORDER_TYPE_DESC\", \"PO Type Description\"}, {\"PURCH_ORDER_GRP\", \"PO Group\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"INVOICE_NUM\", \"CUSTOMER_WID\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Removed Columns1\",{{\"GI_Qty\", \"GI Qty\"}, {\"GR_QTY\", \"GR Qty\"}})",
                "in",
                "   #\"Renamed Columns3\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Net Amount (PO)",
            "expression": " CALCULATE(sum('Fact - Purchase Order Line'[Net Amount]))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount (PO) (LM)",
            "expression": " CALCULATE([. Net Amount (PO)], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount (PO) (LY)",
            "expression": " CALCULATE([. Net Amount (PO)], DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount (PO) (YTD)",
            "expression": " CALCULATE([. Net Amount (PO)], DATESYTD('Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount (PO) (YTD) (LY)",
            "expression": " CALCULATE([. Net Amount (PO) (YTD)],DATEADD(FILTER(DATESYTD('Dim - Time'[Date]), 'Dim - Time'[Date] <= max('Dim - Time'[Date])), -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount YTD (Current)",
            "expression": " CALCULATE('Fact - Purchase Order Line'[. Net Amount (PO)], DATEADD(FILTER(DATESYTD('Dim - Time'[Date]), 'Dim - Time'[Date] <= TODAY()), -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Qty (PO)",
            "expression": " CALCULATE(sum('Fact - Purchase Order Line'[Order Qty]))",
            "formatString": "#,0"
          },
          {
            "name": ". Q10 (PO)",
            "expression": " CALCULATE(Sum('Fact - Purchase Order Line'[Q10_QTY]))",
            "formatString": "#,0"
          },
          {
            "name": "% Net (PO) (LM)",
            "expression": " if(ISBLANK([. Net Amount (PO)]), BLANK(),CALCULATE([. Net Amount (PO)]/[. Net Amount (PO) (LM)]-1))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Net (PO) (LY)",
            "expression": " if(ISBLANK([. Net Amount (PO)]), BLANK(),CALCULATE([. Net Amount (PO)]/[. Net Amount (PO) (LY)]-1))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Net Amount (PO) (YTD) (LY)",
            "expression": " CALCULATE([. Net Amount (PO) (YTD)]/[. Net Amount (PO) (YTD) (LY)]-1)",
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "SC .Cancel Qty",
            "expression": " CALCULATE(sum('Fact - Purchase Order Line'[Cancel Qty])) ",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Cluster",
        "columns": [
          {
            "name": "LOOKUP_VALUE",
            "dataType": "string",
            "sourceColumn": "LOOKUP_VALUE"
          },
          {
            "name": "DESCRIPTION1",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION1"
          },
          {
            "name": "LOOKUP_TYPE",
            "dataType": "string",
            "sourceColumn": "LOOKUP_TYPE"
          },
          {
            "name": "ATTRIBUTE1",
            "dataType": "string",
            "sourceColumn": "ATTRIBUTE1"
          },
          {
            "name": "ATTRIBUTE2",
            "dataType": "string",
            "sourceColumn": "ATTRIBUTE2"
          },
          {
            "name": "ATTRIBUTE3",
            "dataType": "string",
            "sourceColumn": "ATTRIBUTE3"
          },
          {
            "name": "ATTRIBUTE4",
            "dataType": "string",
            "sourceColumn": "ATTRIBUTE4"
          },
          {
            "name": "ATTRIBUTE5",
            "dataType": "string",
            "sourceColumn": "ATTRIBUTE5"
          },
          {
            "name": "DESCRIPTION2",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION2"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_LOOKUP_D = Source{[Schema=\"dbo\",Item=\"W_LOOKUP_D\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_W_LOOKUP_D, each ([LOOKUP_TYPE] = \"CLUSTER\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - NHVV_Error",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Error Code",
            "dataType": "string",
            "sourceColumn": "Error Code"
          },
          {
            "name": "Error Name",
            "dataType": "string",
            "sourceColumn": "Error Name",
            "sortByColumn": "Error Code"
          },
          {
            "name": "Error Description",
            "dataType": "string",
            "sourceColumn": "Error Description"
          },
          {
            "name": "ERROR_GROUP",
            "dataType": "string",
            "sourceColumn": "ERROR_GROUP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_NHVV_ERROR_D = Source{[Schema=\"dbo\",Item=\"W_NHVV_ERROR_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_NHVV_ERROR_D,{{\"ERROR_CODE\", \"Error Code\"}, {\"ERROR_DESCRIPTION\", \"Error Description\"}, {\"ERROR_NAME\", \"Error Name\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"DATASOURCE_NUM_ID\", \"INTEGRATION_ID\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/192 168 3 162;PNJ_ROLAP\",",
                  "    dbo_W_NHVV_ERROR_D = Source{[Schema=\"dbo\",Item=\"W_NHVV_ERROR_D\"]}[Data],",
                  "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_NHVV_ERROR_D,{{\"ERROR_CODE\", \"Error Code\"}, {\"ERROR_DESCRIPTION\", \"Error Description\"}, {\"ERROR_NAME\", \"Error Name\"}}),",
                  "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"DATASOURCE_NUM_ID\", \"INTEGRATION_ID\"})",
                  "in",
                  "    #\"Removed Columns\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Fact - Customer Visit",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "HOUR",
            "dataType": "string",
            "sourceColumn": "HOUR"
          },
          {
            "name": "SOURCE TYPE",
            "dataType": "string",
            "sourceColumn": "SOURCE TYPE"
          },
          {
            "name": "SOURCE",
            "dataType": "string",
            "sourceColumn": "SOURCE"
          },
          {
            "name": "MEDIUM",
            "dataType": "string",
            "sourceColumn": "MEDIUM"
          },
          {
            "name": "SOCIAL NETWORK",
            "dataType": "string",
            "sourceColumn": "SOCIAL NETWORK"
          },
          {
            "name": "hasSocialSourceReferral",
            "dataType": "string",
            "sourceColumn": "hasSocialSourceReferral"
          },
          {
            "name": "VISIT",
            "dataType": "int64",
            "sourceColumn": "VISIT"
          },
          {
            "name": "USERS",
            "dataType": "int64",
            "sourceColumn": "USERS",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_SOCIAL_VISIT_F = Source{[Schema=\"dbo\",Item=\"W_SOCIAL_VISIT_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_SOCIAL_VISIT_F,{\"INTEGRATION_ID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"SOCIAL_NETWORK\", \"SOCIAL NETWORK\"}, {\"SOURCE_TYPE\", \"SOURCE TYPE\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Shipment",
        "columns": [
          {
            "name": "MONTH_KEY",
            "dataType": "int64",
            "sourceColumn": "MONTH_KEY"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "Delivery Num",
            "dataType": "string",
            "sourceColumn": "Delivery Num"
          },
          {
            "name": "DELIVERY TYPE",
            "dataType": "string",
            "sourceColumn": "DELIVERY TYPE"
          },
          {
            "name": "DELIVERY ITEM",
            "dataType": "string",
            "sourceColumn": "DELIVERY ITEM"
          },
          {
            "name": "Shipment Num",
            "dataType": "string",
            "sourceColumn": "Shipment Num"
          },
          {
            "name": "SHIPMENT_DT",
            "dataType": "dateTime",
            "sourceColumn": "SHIPMENT_DT"
          },
          {
            "name": "Shipping End Date",
            "dataType": "dateTime",
            "sourceColumn": "Shipping End Date"
          },
          {
            "name": "Shipper",
            "dataType": "string",
            "sourceColumn": "Shipper"
          },
          {
            "name": "CONTAINER NUM",
            "dataType": "string",
            "sourceColumn": "CONTAINER NUM"
          },
          {
            "name": "SHIPPING_FROM_PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIPPING_FROM_PLANT_WID"
          },
          {
            "name": "SHIPPING_TO_PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIPPING_TO_PLANT_WID"
          },
          {
            "name": "GI Num",
            "dataType": "string",
            "sourceColumn": "GI Num"
          },
          {
            "name": "GI_DT",
            "dataType": "string",
            "sourceColumn": "GI_DT"
          },
          {
            "name": "GR Num",
            "dataType": "string",
            "sourceColumn": "GR Num"
          },
          {
            "name": "GR_DATE",
            "dataType": "string",
            "sourceColumn": "GR_DATE"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "Qty"
          },
          {
            "name": "NET AMT",
            "dataType": "double",
            "sourceColumn": "NET AMT"
          },
          {
            "name": "DELIVERY_DT",
            "dataType": "string",
            "sourceColumn": "DELIVERY_DT"
          },
          {
            "name": "SHIPPING_TYPE_CODE",
            "dataType": "string",
            "sourceColumn": "SHIPPING_TYPE_CODE"
          },
          {
            "name": "PRODUCT_CAT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_CAT_WID"
          },
          {
            "name": "PRICE_RANGE",
            "dataType": "string",
            "sourceColumn": "PRICE_RANGE"
          },
          {
            "name": "GI Date",
            "dataType": "dateTime",
            "sourceColumn": "GI Date",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Delivery Date",
            "dataType": "dateTime",
            "sourceColumn": "Delivery Date",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "GR Date",
            "dataType": "dateTime",
            "sourceColumn": "GR Date"
          },
          {
            "type": "calculated",
            "name": ".Today - SME (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[Shipping End Date], TODAY(),DAY)"
          },
          {
            "type": "calculated",
            "name": ".SME - SM (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[SHIPMENT_DT], 'FACT - SHIPMENT'[Shipping End Date], day)"
          },
          {
            "type": "calculated",
            "name": ".SME - GR (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[Shipping End Date], 'FACT - SHIPMENT'[GR Date], DAY)"
          },
          {
            "type": "calculated",
            "name": ".SM - GI (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[GI Date], 'FACT - SHIPMENT'[SHIPMENT_DT], day)"
          },
          {
            "type": "calculated",
            "name": ".GR - GI (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[GI Date], 'FACT - SHIPMENT'[GR Date], DAY)"
          },
          {
            "type": "calculated",
            "name": ".GI - DO (day)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DATEDIFF('FACT - SHIPMENT'[Delivery Date], 'FACT - SHIPMENT'[GI Date], DAY)"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_SHIPMENT_F = Source{[Schema=\"dbo\",Item=\"W_VW_SHIPMENT_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_SHIPMENT_F,{{\"DELIVERY_NUM\", \"DELIVERY NUM\"}, {\"NET_AMT\", \"NET AMT\"}, {\"SHIPMENT_NUM\", \"SHIPMENT NUM\"}, {\"CONTAINER_NO\", \"CONTAINER NUM\"}, {\"GR_NUM\", \"GR NUM\"}, {\"DELIVERY_ITEM\", \"DELIVERY ITEM\"}, {\"GI_NUM\", \"GI NUM\"}, {\"DELIVERY_TYPE\", \"DELIVERY TYPE\"}}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Renamed Columns\", \"SHIPMENT_DT\", \"SHIPMENT_DT - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"GI_DT\", \"GI_DT - Copy\"),",
                "    #\"Duplicated Column2\" = Table.DuplicateColumn(#\"Duplicated Column1\", \"DELIVERY_DT\", \"DELIVERY_DT - Copy\"),",
                "    #\"Duplicated Column3\" = Table.DuplicateColumn(#\"Duplicated Column2\", \"GR_DATE\", \"GR_DATE - Copy\"),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Duplicated Column3\",{{\"GR_DATE - Copy\", type date}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type1\",{{\"DELIVERY_DT - Copy\", type date}, {\"GI_DT - Copy\", type date}, {\"SHIPMENT_DT - Copy\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"SHIPMENT_END_DT\", \"SHIPMENT END DATE\"}, {\"GR_DATE - Copy\", \"GR Date\"}, {\"GI_DT - Copy\", \"GI Date\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"DELIVERY_DT - Copy\", \"Delivery Date\"}, {\"SHIPMENT_DT - Copy\", \"SHIPMENT DATE\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"SHIPMENT DATE\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",\"00000000\",\" \",Replacer.ReplaceText,{\"SHIPMENT END DATE\"}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"SHIPMENT END DATE\", type date}, {\"SHIPMENT_DT\", type date}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Changed Type2\",{{\"SHIPMENT END DATE\", \"Shipping End Date\"}, {\"DELIVERY NUM\", \"Delivery Num\"}, {\"SHIPMENT NUM\", \"Shipment Num\"}, {\"GR NUM\", \"GR Num\"}, {\"GI NUM\", \"GI Num\"}, {\"SHIPPER\", \"Shipper\"}, {\"QTY\", \"Qty\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns3\",{\"PLANNING_END_DT\"})",
                "in",
                "    #\"Removed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Transfer Plant",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          },
          {
            "name": "XMAN Code",
            "dataType": "string",
            "sourceColumn": "XMAN Code"
          },
          {
            "name": "Plant Name",
            "dataType": "string",
            "sourceColumn": "Plant Name"
          },
          {
            "name": "Short Name",
            "dataType": "string",
            "sourceColumn": "Short Name"
          },
          {
            "name": "TIER",
            "dataType": "int64",
            "sourceColumn": "TIER"
          },
          {
            "name": "Distribution Channel",
            "dataType": "string",
            "sourceColumn": "Distribution Channel"
          },
          {
            "name": "INDUSTRY",
            "dataType": "string",
            "sourceColumn": "INDUSTRY"
          },
          {
            "name": "Plant Type",
            "dataType": "string",
            "sourceColumn": "Plant Type"
          },
          {
            "name": "Channel Plant",
            "dataType": "string",
            "sourceColumn": "Channel Plant"
          },
          {
            "name": "Channel Plant Name",
            "dataType": "string",
            "sourceColumn": "Channel Plant Name"
          },
          {
            "name": "PLANT_KIND",
            "dataType": "string",
            "sourceColumn": "PLANT_KIND"
          },
          {
            "name": "PLANT_TYPE_OLD",
            "dataType": "string",
            "sourceColumn": "PLANT_TYPE_OLD"
          },
          {
            "name": "PLANT_TYPE_NEW",
            "dataType": "string",
            "sourceColumn": "PLANT_TYPE_NEW"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Region Code",
            "dataType": "string",
            "sourceColumn": "Region Code"
          },
          {
            "name": "PROVINCE",
            "dataType": "string",
            "sourceColumn": "PROVINCE"
          },
          {
            "name": "DISTRICT",
            "dataType": "string",
            "sourceColumn": "DISTRICT"
          },
          {
            "name": "Open Date",
            "dataType": "string",
            "sourceColumn": "Open Date"
          },
          {
            "name": "CLOSED_DT",
            "dataType": "string",
            "sourceColumn": "CLOSED_DT"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "Sales District",
            "dataType": "string",
            "sourceColumn": "Sales District"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "sourceColumn": "Sales District Name"
          },
          {
            "name": "SC_REGION_DESC",
            "dataType": "string",
            "sourceColumn": "SC_REGION_DESC"
          },
          {
            "name": "ORG_CODE",
            "dataType": "string",
            "sourceColumn": "ORG_CODE"
          },
          {
            "name": "PALEXY_STORE_ID",
            "dataType": "int64",
            "sourceColumn": "PALEXY_STORE_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PLANT_D = Source{[Schema=\"dbo\",Item=\"W_VW_PLANT_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_PLANT_D,{{\"ADDRESS\", \"Address\"}, {\"PLANT_SHORT_NAME\", \"Short Name\"}, {\"PLANT_CODE\", \"Plant Code\"}, {\"PLANT_NAME\", \"Plant Name\"}, {\"HR_CODE\", \"HR Code\"}, {\"AREA\", \"Area\"}, {\"AREA_CODE\", \"Area Code\"}, {\"AREA_NAME\", \"Area Name\"}, {\"CHANNEL\", \"Channel\"}, {\"CHANNEL_NAME\", \"Channel Name\"}, {\"REGION\", \"Region\"}, {\"REGION_CODE\", \"Region Code\"}, {\"REGION_NAME\", \"Region Name\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"DATASOURCE_NUM_ID\", \"TENANT_ID\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"X_CUSTOM\", \"CHANGED_BY\", \"CHANGED_ON_DT\", \"CHANGED_AT\", \"CREATED_ON_DT\", \"CREATED_AT\", \"CREATED_BY\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"Channel\", \"Channel Plant\"}, {\"Channel Name\", \"Channel Plant Name\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"INTEGRATION_ID\", \"HR Code\", \"BUSINESS_REG_CODE\", \"BUSINESS_REG_DT\", \"PLANT_REF_CODE\", \"PLANT_PAR_CODE\", \"BU_GROUP\", \"TITLE\", \"DELETE_FLG\", \"COUNTRY\", \"SUB_REGION\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns1\",{{\"YEAR\", \"OPENED_YEAR\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns2\",{\"CHANGED_TIME\", \"GROUND_STATUS\", \"GROUND_ACREAGE\", \"GOLD_ACREAGE\", \"SILVER_ACREAGE\", \"WATCH_ACREAGE\", \"JEMMA_ACREAGE\", \"CUST_CLASS\", \"PHONE1\", \"PHONE2\", \"SALE_TERR_WID\", \"PLANT_CATEGORY\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Removed Columns2\",{{\"SALES_DIST\", \"Sales District\"}, {\"SALES_DIST_NAME\", \"Sales District Name\"}}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Renamed Columns3\",{\"SUMMARY_ACREAGE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Removed Columns3\",{{\"OPENED_DT\", \"Open Date\"}}),",
                "    #\"Removed Columns4\" = Table.RemoveColumns(#\"Renamed Columns4\",{\"OPENED_YEAR\"}),",
                "    #\"Renamed Columns5\" = Table.RenameColumns(#\"Removed Columns4\",{{\"DIST_CHANNEL\", \"Distribution Channel\"}}),",
                "    #\"Removed Columns5\" = Table.RemoveColumns(#\"Renamed Columns5\",{\"DATE_KEY\", \"WARD\", \"STREET\", \"QUARTER\", \"MONTH\", \"SALES_GRP\"}),",
                "    #\"Renamed Columns6\" = Table.RenameColumns(#\"Removed Columns5\",{{\"XMAN_CODE\", \"XMAN Code\"}}),",
                "    #\"Removed Columns6\" = Table.RemoveColumns(#\"Renamed Columns6\",{\"PURCH_ORG\", \"Region Name\", \"SALES_ORG\", \"STATUS\", \"Address\"}),",
                "    #\"Renamed Columns7\" = Table.RenameColumns(#\"Removed Columns6\",{{\"PLANT_TYPE\", \"Plant Type\"}, {\"FIRST_TRX_DT\", \"First Transaction DT\"}}),",
                "    #\"Removed Columns7\" = Table.RemoveColumns(#\"Renamed Columns7\",{\"Area\", \"PLANT_TYPE_CHANGE\", \"Area Name\", \"Area Code\"})",
                "in",
                "    #\"Removed Columns7\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - NHVV",
        "columns": [
          {
            "name": "INTEGRATION_ID",
            "dataType": "string",
            "sourceColumn": "INTEGRATION_ID"
          },
          {
            "name": "DELIVERY_ID",
            "dataType": "int64",
            "sourceColumn": "DELIVERY_ID"
          },
          {
            "name": "PRODUCT_GROUP",
            "dataType": "string",
            "sourceColumn": "PRODUCT_GROUP"
          },
          {
            "name": "DELIVERY_CODE",
            "dataType": "string",
            "sourceColumn": "DELIVERY_CODE"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS"
          },
          {
            "name": "POINT",
            "dataType": "int64",
            "sourceColumn": "POINT"
          },
          {
            "name": "FEEDBACK",
            "dataType": "string",
            "sourceColumn": "FEEDBACK"
          },
          {
            "name": "PRODUCT_GROUP_ID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_GROUP_ID"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "PRODUCT_BATCH",
            "dataType": "string",
            "sourceColumn": "PRODUCT_BATCH"
          },
          {
            "name": "ERROR_WID",
            "dataType": "int64",
            "sourceColumn": "ERROR_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "USER_ID",
            "dataType": "string",
            "sourceColumn": "USER_ID"
          },
          {
            "name": "CREATE_DATE",
            "dataType": "dateTime",
            "sourceColumn": "CREATE_DATE"
          },
          {
            "name": "CHECKER_DATE",
            "dataType": "dateTime",
            "sourceColumn": "CHECKER_DATE"
          },
          {
            "name": "PROD_IMAGE_LINK",
            "dataType": "string",
            "sourceColumn": "PROD_IMAGE_LINK"
          },
          {
            "type": "calculated",
            "name": "Date_key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " FORMAT('Fact - NHVV'[CREATE_DATE], \"YYYYMMDD\")"
          },
          {
            "name": "TRANSFERD_PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "TRANSFERD_PLANT_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_NHVV_ERROR_F = Source{[Schema=\"dbo\",Item=\"W_VW_NHVV_ERROR_F\"]}[Data]",
                "in",
                "    dbo_W_VW_NHVV_ERROR_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Movement Type",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "MVMNT_TYPE_CODE",
            "dataType": "string",
            "sourceColumn": "MVMNT_TYPE_CODE"
          },
          {
            "name": "MVMNT_TYPE_NAME",
            "dataType": "string",
            "sourceColumn": "MVMNT_TYPE_NAME"
          },
          {
            "name": "REF_MOVEMENT_TYPE",
            "dataType": "string",
            "sourceColumn": "REF_MOVEMENT_TYPE"
          },
          {
            "name": "REVERTED_FLG",
            "dataType": "boolean",
            "sourceColumn": "REVERTED_FLG"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "         Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT  [ROW_WID]",
                "      ,[MVMNT_TYPE_CODE]",
                "      ,[MVMNT_TYPE_NAME]",
                "      ,[REF_MOVEMENT_TYPE]",
                "      ,[REVERTED_FLG]",
                "  FROM [dbo].[W_MOVEMENT_TYPE_D] WITH (NOLOCK)\")",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Channel",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CHANNEL_CODE",
            "dataType": "string",
            "sourceColumn": "CHANNEL_CODE"
          },
          {
            "name": "CHANNEL_DESC",
            "dataType": "string",
            "sourceColumn": "CHANNEL_DESC"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT  [ROW_WID], [CHANNEL_CODE], [CHANNEL_DESC]",
                "  FROM [PNJ_ROLAP].[dbo].[W_CHANNEL_DH]\")",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Inventory Transaction",
        "isHidden": true,
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "BASE_QTY",
            "dataType": "double",
            "sourceColumn": "BASE_QTY"
          },
          {
            "name": "BASE_UOM_CODE",
            "dataType": "string",
            "sourceColumn": "BASE_UOM_CODE"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "MVMNT_TYPE_WID",
            "dataType": "int64",
            "sourceColumn": "MVMNT_TYPE_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "TRANSFERD_PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "TRANSFERD_PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "STORAGE_LOC_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "STORAGE_LOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "TRANSFERED_SLOC_WID",
            "dataType": "int64",
            "sourceColumn": "TRANSFERED_SLOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SPEC_NET_QTY",
            "dataType": "double",
            "sourceColumn": "SPEC_NET_QTY"
          },
          {
            "name": "QI_NET_QTY",
            "dataType": "double",
            "sourceColumn": "QI_NET_QTY"
          },
          {
            "name": "BLOCK_NET_QTY",
            "dataType": "double",
            "sourceColumn": "BLOCK_NET_QTY"
          },
          {
            "name": "INTRANSIT_NET_QTY",
            "dataType": "double",
            "sourceColumn": "INTRANSIT_NET_QTY"
          },
          {
            "name": "NET_QTY",
            "dataType": "double",
            "sourceColumn": "NET_QTY"
          },
          {
            "name": "MATERIAL_DOC_NUM",
            "dataType": "string",
            "sourceColumn": "MATERIAL_DOC_NUM"
          },
          {
            "name": "NET_AMT",
            "dataType": "double",
            "sourceColumn": "NET_AMT"
          },
          {
            "name": "VALUATION_TYPE_GROUP",
            "dataType": "string",
            "sourceColumn": "VALUATION_TYPE_GROUP"
          },
          {
            "name": "TRANSIT_AMT",
            "dataType": "double",
            "sourceColumn": "TRANSIT_AMT"
          },
          {
            "name": "Q10",
            "dataType": "double",
            "sourceColumn": "Q10"
          },
          {
            "name": "PURCH_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_NUM"
          },
          {
            "name": "TRANSACTION_TYPE",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_TYPE"
          },
          {
            "name": "UNRESTRICTED_QTY",
            "dataType": "double",
            "sourceColumn": "UNRESTRICTED_QTY"
          },
          {
            "name": "UNRESTRICTED_Q10",
            "dataType": "double",
            "sourceColumn": "UNRESTRICTED_Q10"
          },
          {
            "name": "UNRESTRICTED_AMT",
            "dataType": "double",
            "sourceColumn": "UNRESTRICTED_AMT"
          },
          {
            "name": "RECEIPT_IND",
            "dataType": "int64",
            "sourceColumn": "RECEIPT_IND",
            "summarizeBy": "none"
          },
          {
            "name": "SPEC_NET_AMT",
            "dataType": "double",
            "sourceColumn": "SPEC_NET_AMT"
          },
          {
            "name": "SPEC_Q10",
            "dataType": "double",
            "sourceColumn": "SPEC_Q10"
          },
          {
            "name": "Transit_Q10",
            "dataType": "double",
            "sourceColumn": "Transit_Q10"
          },
          {
            "name": "QI_Q10",
            "dataType": "double",
            "sourceColumn": "QI_Q10"
          },
          {
            "name": "MATERIAL_DOC_ITEM",
            "dataType": "int64",
            "sourceColumn": "MATERIAL_DOC_ITEM"
          },
          {
            "name": "SPECIAL_STOCK",
            "dataType": "string",
            "sourceColumn": "SPECIAL_STOCK"
          },
          {
            "name": "REVERTED_FLG",
            "dataType": "boolean",
            "sourceColumn": "REVERTED_FLG"
          },
          {
            "name": "BATCH_WID",
            "dataType": "int64",
            "sourceColumn": "BATCH_WID"
          },
          {
            "name": "STOCK_QTY",
            "dataType": "double",
            "sourceColumn": "STOCK_QTY"
          },
          {
            "name": "STOCK_Q10",
            "dataType": "double",
            "sourceColumn": "STOCK_Q10"
          },
          {
            "name": "STOCK_AMT",
            "dataType": "double",
            "sourceColumn": "STOCK_AMT"
          },
          {
            "name": "PRODUCTION_ORDER",
            "dataType": "string",
            "sourceColumn": "PRODUCTION_ORDER"
          }
        ],
        "partitions": [
          {
            "name": "Partition 2019",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] <= 20191231",
                "\")",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] <= 20191231",
                  "\")",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2020 Q1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200101 AND  [DATE_KEY] <= 20200331",
                "\")",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200101 AND  [DATE_KEY] <= 20200331",
                  "\")",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2020 Q2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200401 AND  [DATE_KEY] <= 20200630",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200401 AND  [DATE_KEY] <= 20200630",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2020 Q3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200701 AND  [DATE_KEY] <= 20200930",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20200701 AND  [DATE_KEY] <= 20200930",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2020 Q4",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20201001 AND  [DATE_KEY] <= 20201231",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20201001 AND  [DATE_KEY] <= 20201231",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2021 Q1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210101 AND  [DATE_KEY] <= 20210331",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210101 AND  [DATE_KEY] <= 20210331",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2021 Q2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210401 AND  [DATE_KEY] <= 20210630",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210401 AND  [DATE_KEY] <= 20210630",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [Q10]",
                "      ,[Transit_Q10]",
                "      ,[QI_Q10]",
                "      ,[UNRESTRICTED_Q10]",
                "      ,[SPEC_Q10]",
                "      ,[PRODUCT_WID]",
                "      ,[MVMNT_TYPE_WID]",
                "      ,[COMPANY_WID]",
                "      ,[MATERIAL_DOC_NUM]",
                "      ,[MATERIAL_DOC_ITEM]",
                "      ,[DATE_KEY]",
                "      ,[PLANT_WID]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[TRANSFERD_PLANT_WID]",
                "      ,[TRANSFERED_SLOC_WID]",
                "      ,[BASE_QTY]",
                "      ,[NET_QTY]",
                "      ,[QI_NET_QTY]",
                "      ,[BLOCK_NET_QTY]",
                "      ,[SPEC_NET_QTY]",
                "      ,[INTRANSIT_NET_QTY]",
                "      ,[BASE_UOM_CODE]",
                "      ,[UNRESTRICTED_QTY]",
                "      ,[VALUATION_TYPE_GROUP]",
                "      ,[NET_AMT]",
                "      ,[UNRESTRICTED_AMT]",
                "      ,[TRANSIT_AMT]",
                "      ,[SPEC_NET_AMT]",
                "      ,[PURCH_ORDER_NUM]",
                "      ,[TRANSACTION_TYPE]",
                "      ,[SPECIAL_STOCK]",
                "      ,[REVERTED_FLG]",
                "      ,[BATCH_WID]",
                "      ,[RECEIPT_IND]",
                ",STOCK_QTY",
                ",STOCK_Q10",
                ",STOCK_AMT",
                ",PRODUCTION_ORDER",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210701",
                "\") ",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      [Q10]",
                  "      ,[Transit_Q10]",
                  "      ,[QI_Q10]",
                  "      ,[UNRESTRICTED_Q10]",
                  "      ,[SPEC_Q10]",
                  "      ,[PRODUCT_WID]",
                  "      ,[MVMNT_TYPE_WID]",
                  "      ,[COMPANY_WID]",
                  "      ,[MATERIAL_DOC_NUM]",
                  "      ,[MATERIAL_DOC_ITEM]",
                  "      ,[DATE_KEY]",
                  "      ,[PLANT_WID]",
                  "      ,[STORAGE_LOC_WID]",
                  "      ,[TRANSFERD_PLANT_WID]",
                  "      ,[TRANSFERED_SLOC_WID]",
                  "      ,[BASE_QTY]",
                  "      ,[NET_QTY]",
                  "      ,[QI_NET_QTY]",
                  "      ,[BLOCK_NET_QTY]",
                  "      ,[SPEC_NET_QTY]",
                  "      ,[INTRANSIT_NET_QTY]",
                  "      ,[BASE_UOM_CODE]",
                  "      ,[UNRESTRICTED_QTY]",
                  "      ,[VALUATION_TYPE_GROUP]",
                  "      ,[NET_AMT]",
                  "      ,[UNRESTRICTED_AMT]",
                  "      ,[TRANSIT_AMT]",
                  "      ,[SPEC_NET_AMT]",
                  "      ,[PURCH_ORDER_NUM]",
                  "      ,[TRANSACTION_TYPE]",
                  "      ,[SPECIAL_STOCK]",
                  "      ,[REVERTED_FLG]",
                  "      ,[BATCH_WID]",
                  "      ,[RECEIPT_IND]",
                  ",STOCK_QTY",
                  ",STOCK_Q10",
                  ",STOCK_AMT",
                  ",PRODUCTION_ORDER",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_TRX_F] WHERE [DATE_KEY] >= 20210701",
                  "\") ",
                  "in",
                  "    Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": ". Inven Net Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[net_qty]), FILTER(ALL('Dim - Time'[Date]),",
              "'Dim - Time'[Date] <= _currdate))"
            ]
          },
          {
            "name": ". Special Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[SPEC_NET_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": ". Base Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[BASE_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": ". Block Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[BLOCK_NET_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": ". QI Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[QI_NET_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": ". Intransit Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[INTRANSIT_NET_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": ". Intransit Net Amt",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE(SUM ( 'Fact - Inventory Transaction'[TRANSIT_AMT] ),",
              "\t FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Net Amount",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(sum('Fact - Inventory Transaction'[Net_AMT]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Q10 (Inventory)",
            "expression": [
              " var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[Q10]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": ". GI Net Amt (Daily)",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE( SUM('Fact - Inventory Transaction'[STOCK_AMT]),",
              "\t--\t FILTER(ALL('Dim - Time'[Date]), 'Dim - Time'[Date] =  _currdate),",
              "\t FILTER('Fact - Inventory Transaction', 'Fact - Inventory Transaction'[RECEIPT_IND] =1))",
              "",
              "\t ",
              "\t "
            ],
            "formatString": "#,0"
          },
          {
            "name": ". GI Net Qty (Daily)",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE( SUM('Fact - Inventory Transaction'[STOCK_QTY]),",
              "\t--\t FILTER(ALL('Dim - Time'[Date]), 'Dim - Time'[Date] =  _currdate),",
              "\t FILTER('Fact - Inventory Transaction', 'Fact - Inventory Transaction'[RECEIPT_IND] =1 && 'Fact - Inventory Transaction'[STOCK_Q10] <0))",
              ""
            ],
            "formatString": "0"
          },
          {
            "name": ". GI .Q10 (Daily)",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE(SUM ( 'Fact - Inventory Transaction'[STOCK_Q10])*-1 ,",
              "--\t FILTER(ALL('Dim - Time'[Date]), 'Dim - Time'[Date] =  _currdate),",
              "\t FILTER('Fact - Inventory Transaction', 'Fact - Inventory Transaction'[RECEIPT_IND] =1))",
              "\t "
            ]
          },
          {
            "name": ". GI AVG Net Qty (Monthly)",
            "expression": [
              "",
              "CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [. GI Net Qty (Daily)] )",
              " )",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": ". GI AVG #Q10 (Monthly)",
            "expression": [
              "",
              "CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [. GI .Q10 (Daily)])",
              " )"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". GI AVG Net Amt (Monthly)",
            "expression": [
              "",
              "CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [. GI Net Amt (Daily)] )",
              " )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "PNJP .Net Amt TurnOver (Daily)",
            "expression": " DIVIDE([. GI Net Amt (Daily)], [PNJP .Net Amt (Daily)], 0)",
            "formatString": "0.00"
          },
          {
            "name": "PNJP Q10 TurnOver (Daily)",
            "expression": " DIVIDE([. GI .Q10 (Daily)], [PNJP .Q10 (Daily)], 0)"
          },
          {
            "name": "PNJP .Net Qty TurnOver (Daily)",
            "expression": " DIVIDE([. GI Net Qty (Daily)] , [PNJP .Invent Net Qty], 0)",
            "formatString": "0.00"
          },
          {
            "name": "PNJP .Q10 TurnOver (Monthly)",
            "expression": " DIVIDE([. GI AVG #Q10 (Monthly)], [PNJP AVG .Q10 (Monthly)], 0)"
          },
          {
            "name": "PNJP .Q10 TurnOver (Daily) KT",
            "expression": " CALCULATE([PNJP Q10 TurnOver (Daily)], DATEADD('Dim - Time'[Date],1, MONTH))"
          },
          {
            "name": "PNJP .Q10 TurnOver (Daily) CK",
            "expression": [
              " ",
              "\tCALCULATE([PNJP Q10 TurnOver (Daily)], DATEADD('Dim - Time'[Date],1, YEAR))"
            ]
          },
          {
            "name": "PNJP .Q10 TurnOver (Monthly) CK",
            "expression": " CALCULATE([PNJP .Q10 TurnOver (Monthly)], DATEADD('Dim - Time'[Date],-1, YEAR))"
          },
          {
            "name": "PNJP .Q10 TurnOver (Monthly) KT",
            "expression": " CALCULATE([PNJP .Q10 TurnOver (Monthly)], DATEADD('Dim - Time'[Date],-1, MONTH))"
          },
          {
            "name": "PNJP .Net Amt TurnOver (Daily) CK",
            "expression": " CALCULATE([PNJP .Net Amt TurnOver (Daily)], DATEADD('Dim - Time'[Date],-1,YEAR))"
          },
          {
            "name": "PNJP .Q10 GI Actual vs Plan",
            "expression": " [PNJP .Q10 GI Actual]/[PNJP .Q10 GI Plan]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP .Net Amt TurnOver (Daily) KT",
            "expression": " CALCULATE([PNJP .Net Amt TurnOver (Daily)], DATEADD('Dim - Time'[Date],-1,MONTH))"
          },
          {
            "name": "PNJP .Q10 GI Actual",
            "expression": [
              " CALCULATE(",
              "\tsum('Fact - Inventory Transaction'[STOCK_Q10])*-1,",
              "\tFilter('Fact - Inventory Transaction', 'Fact - Inventory Transaction'[STORAGE_LOC_WID] in {545,546} &&",
              "\t'Fact - Inventory Transaction'[TRANSFERED_SLOC_WID] in {544,547,564} &&",
              "\t'Fact - Inventory Transaction'[MVMNT_TYPE_WID] in {75})",
              "\t)",
              "\t",
              "\t"
            ],
            "formatString": "#,0"
          },
          {
            "name": "PNJP .Invent Net Qty",
            "description": "SOH PNP theo ngày Qty",
            "expression": [
              " CALCULATE([. Inven Net Qty] + [. Special Qty],",
              "\tFILTER( 'Dim - Movement Type', 'Dim - Movement Type'[MVMNT_TYPE_CODE] <>  \"313\")",
              "\t)",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Special Net Amt",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[SPEC_NET_AMT]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "PNJP .Invent Net Amt",
            "description": "SOH PNP Amount",
            "expression": [
              " CALCULATE([. Net Amount] + [. Special Net Amt],",
              "\tFILTER( 'Dim - Movement Type', 'Dim - Movement Type'[MVMNT_TYPE_CODE] <>  \"313\")",
              "\t)",
              "",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Special Q10",
            "expression": [
              " CALCULATE(sum('Fact - Inventory Transaction'[SPEC_Q10]), ",
              "FILTER(All('Dim - Time'[Date]), 'Dim - Time'[Date] <= max('Dim - Time'[Date])))"
            ]
          },
          {
            "name": "PNJP .Invent Q10",
            "description": "SOH PNP Q10",
            "expression": [
              " CALCULATE([# Q10 (Inventory)]+[. Special Q10],",
              "\tFILTER( 'Dim - Movement Type', 'Dim - Movement Type'[MVMNT_TYPE_CODE] <>  \"313\")",
              "\t)",
              "",
              "",
              "",
              "/*",
              "\tVAR _currdate = MAX('Dim - Time'[Date])",
              "\tRETURN CALCULATE(SUM('Fact - Inventory Transaction'[STOCK_Q10]),",
              "\t FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)),",
              "\tFILTER( 'Dim - Movement Type', 'Dim - Movement Type'[MVMNT_TYPE_CODE] <>  \"313\")",
              "\t)",
              "\t*/",
              "",
              ""
            ]
          },
          {
            "name": "PNJP .Q10 (Daily)",
            "expression": [
              "",
              "",
              "\tVAR _currdate = MAX('Dim - Time'[Date])",
              "\tVAR CLOSING = [PNJP .Invent Q10]",
              "--\tCALCULATE(SUM('Fact - Inventory Transaction'[STOCK_Q10]), FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], --_currdate, Desc)))",
              "",
              "\tVAR OPENING = CALCULATE(CLOSING, DATEADD('Dim - Time'[Date], -1, DAY))",
              "",
              "\tVAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "\tRETURN (OPENING + CLOSING)/_COUNT"
            ]
          },
          {
            "name": "PNJP AVG .Q10 (Monthly)",
            "expression": [
              "",
              "CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP .Q10 (Daily)] )",
              " )"
            ]
          },
          {
            "name": "PNJP .Net Amt (Daily)",
            "expression": [
              "",
              "",
              "VAR OPENING = CALCULATE( [PNJP .Invent Net Amt], DATEADD('Dim - Time'[Date], -1, DAY))",
              "",
              "VAR CLOSING =   [PNJP .Invent Net Amt]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "PNJP .Net Qty (Daily)",
            "expression": [
              "",
              "",
              "VAR OPENING = CALCULATE( [PNJP .Invent Net Qty], DATEADD('Dim - Time'[Date], -1, DAY))",
              "",
              "VAR CLOSING =  [PNJP .Invent Net Qty]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT",
              ""
            ]
          },
          {
            "name": "PNJP %Q10 (Daily) CK",
            "expression": [
              " ",
              "VAR CK = CALCULATE( [PNJP .Q10 (Daily)] , DATEADD('Dim - Time'[Date], -1, YEAR))",
              "RETURN DIVIDE([PNJP .Q10 (Daily)], CK, 0)-1",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP %Net Qty (daily) KT",
            "expression": [
              "",
              "",
              "VAR KT = CALCULATE([PNJP .Net Qty (Daily)], dateadd('Dim - Time'[Date],-1, MONTH))",
              "RETURN DIVIDE([PNJP .Net Qty (Daily)], KT,0)-1"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP %Net Qty (Daily) CK",
            "expression": [
              " ",
              "VAR CK = CALCULATE( [PNJP .Net Qty (Daily)] , DATEADD('Dim - Time'[Date], -1, YEAR))",
              "RETURN DIVIDE([PNJP .Net Qty (Daily)], CK,0)-1"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP %Net Amt (Daily) CK",
            "expression": [
              "",
              "VAR CK = ",
              " CALCULATE( [PNJP .Net Amt (Daily)] , DATEADD('Dim - Time'[Date], -1, YEAR))",
              " ",
              " RETURN DIVIDE([PNJP .Net Amt (Daily)] , CK,0) - 1"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP %Net Amt (Daily) KT",
            "expression": [
              " ",
              "VAR KT = CALCULATE( [PNJP .Net Amt (Daily)] , DATEADD('Dim - Time'[Date], -1, MONTH))",
              "RETURN DIVIDE([PNJP .Net Amt (Daily)], KT,0)-1"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Unrestricted Use Qty",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[UNRESTRICTED_QTY]), FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Dim - Transfer Sloc",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "Sloc Code",
            "dataType": "string",
            "sourceColumn": "Sloc Code"
          },
          {
            "name": "Sloc Name",
            "dataType": "string",
            "sourceColumn": "Sloc Name"
          },
          {
            "name": "Type",
            "dataType": "string",
            "sourceColumn": "Type"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "SLOC_GROUP",
            "dataType": "string",
            "sourceColumn": "SLOC_GROUP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_STORAGE_LOC_D = Source{[Schema=\"dbo\",Item=\"W_STORAGE_LOC_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_STORAGE_LOC_D,{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"DELETE_FLG\", \"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"X_CUSTOM\", \"TENANT_ID\", \"LAST_UPDATED_DT\", \"COMPANY_WID\", \"COST_ORG_CODE\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"PLANT_CODE\", \"Plant Code\"}, {\"SLOC_CODE\", \"Sloc Code\"}, {\"SLOC_NAME\", \"Sloc Name\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"SLOC_DESC\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"SLOC_TYPE\", \"Type\"}, {\"SLOC_ADDRESS\", \"Address\"}}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"SLOC_SITE\"})",
                "in",
                "    #\"Removed Columns2\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Product Cost",
        "columns": [
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "V_STD_PRICE",
            "dataType": "double",
            "sourceColumn": "V_STD_PRICE"
          },
          {
            "name": "S_STD_PRICE",
            "dataType": "double",
            "sourceColumn": "S_STD_PRICE"
          },
          {
            "name": "V_MVAVG_PRICE",
            "dataType": "double",
            "sourceColumn": "V_MVAVG_PRICE"
          },
          {
            "name": "S_MVAVG_PRICE",
            "dataType": "double",
            "sourceColumn": "S_MVAVG_PRICE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PRODUCT_COST_D = Source{[Schema=\"dbo\",Item=\"W_VW_PRODUCT_COST_D\"]}[Data]",
                "in",
                "    dbo_W_PRODUCT_COST_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Slicer Monetary",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "GENERATESERIES(0, [. All Net Amt], 1000000)"
            }
          }
        ]
      },
      {
        "name": "Dim - Inventory Product",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "MRP Type",
            "dataType": "string",
            "sourceColumn": "MRP Type"
          },
          {
            "name": "MRP_NAME",
            "dataType": "string",
            "sourceColumn": "MRP_NAME"
          },
          {
            "name": "MRP_CODE",
            "dataType": "string",
            "sourceColumn": "MRP_CODE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT",
                "      [MRP_TYPE]",
                "      ,[ROW_WID]",
                "      ,[MRP_NAME]",
                "      ,[MRP_CODE]  ",
                "    FROM  [PNJ_ROLAP].[dbo].[W_VW_INVENTORY_PRODUCT_D]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{ {\"MRP_TYPE\", \"MRP Type\"}})",
                "in ",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Employee",
        "columns": [
          {
            "name": "Department Name",
            "dataType": "string",
            "sourceColumn": "Department Name"
          },
          {
            "name": "Division Name",
            "dataType": "string",
            "sourceColumn": "Division Name"
          },
          {
            "name": "Team Name",
            "dataType": "string",
            "sourceColumn": "Team Name"
          },
          {
            "name": "OT Weekend Flag",
            "dataType": "boolean",
            "sourceColumn": "OT Weekend Flag"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Employee Code",
            "dataType": "string",
            "sourceColumn": "Employee Code"
          },
          {
            "name": "Employee Name",
            "dataType": "string",
            "sourceColumn": "Employee Name"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "sourceColumn": "Company Code"
          },
          {
            "name": "Position Name",
            "dataType": "string",
            "sourceColumn": "Position Name"
          },
          {
            "name": "Department Code",
            "dataType": "string",
            "sourceColumn": "Department Code"
          },
          {
            "name": "Effect From DT",
            "dataType": "int64",
            "sourceColumn": "Effect From DT"
          },
          {
            "name": "Effect To DT",
            "dataType": "int64",
            "sourceColumn": "Effect To DT"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "Employee FLG",
            "dataType": "string",
            "sourceColumn": "Employee FLG"
          },
          {
            "name": "Total Employee",
            "dataType": "int64",
            "sourceColumn": "Total Employee"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_EMPLOYEE_D = Source{[Schema=\"dbo\",Item=\"W_VW_EMPLOYEE_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_EMPLOYEE_D,{{\"COMPANY_CODE\", \"Company Code\"}, {\"DEPARTMENT_CODE\", \"Department Code\"}, {\"DEPARTMENT_NAME\", \"Department Name\"}, {\"DIVISION_NAME\", \"Division Name\"}, {\"TEAM_NAME\", \"Team Name\"}, {\"OT_WEEKEND_FLAG\", \"OT Weekend Flag\"}, {\"EMPLOYEE_CODE\", \"Employee Code\"}, {\"EMPLOYEE_NAME\", \"Employee Name\"}, {\"INDENTITY_NUMBER\", \"Indentity Number\"}, {\"PHONE\", \"Phone\"}, {\"POSITION_CODE\", \"Position Code\"}, {\"POSITION_NAME\", \"Position Name\"}, {\"EFFECT_FROM_DATE\", \"Effect From DT\"}, {\"EFFECT_TO_DATE\", \"Effect To DT\"}, {\"OFFICE_EMAIL\", \"Office Email\"}, {\"PERSONAL_EMAIL\", \"Personal Email\"}, {\"TOTAL_EMPLOYEE\", \"Total Employee\"}, {\"EMPLOYEE_FLG\", \"Employee FLG\"}, {\"GENDER\", \"Gender\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Timesheet",
        "columns": [
          {
            "name": "Employee_wid",
            "dataType": "int64",
            "sourceColumn": "Employee_wid"
          },
          {
            "name": "WORKING_DATE_WID",
            "dataType": "string",
            "sourceColumn": "WORKING_DATE_WID"
          },
          {
            "name": "Shift",
            "dataType": "string",
            "sourceColumn": "Shift"
          },
          {
            "name": "Normal Hour",
            "dataType": "double",
            "sourceColumn": "Normal Hour"
          },
          {
            "name": "OT_HOURS",
            "dataType": "double",
            "sourceColumn": "OT_HOURS"
          },
          {
            "name": "NOTE",
            "dataType": "string",
            "sourceColumn": "NOTE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_TIMESHEET_F = Source{[Schema=\"dbo\",Item=\"W_VW_TIMESHEET_F\"]}[Data],",
                "#\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_TIMESHEET_F,{{\"NORM_HOURS\", \"Normal Hour\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Actual Production",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "Order Number",
            "dataType": "string",
            "sourceColumn": "Order Number"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "Document Number",
            "dataType": "string",
            "sourceColumn": "Document Number"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "MRP_CONTROLLER_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_CONTROLLER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "TYPES",
            "dataType": "string",
            "sourceColumn": "TYPES"
          },
          {
            "name": "Actual QTY",
            "dataType": "double",
            "sourceColumn": "Actual QTY"
          },
          {
            "name": "Location Wid",
            "dataType": "string",
            "sourceColumn": "Location Wid"
          },
          {
            "name": "Q10",
            "dataType": "double",
            "sourceColumn": "Q10",
            "formatString": "0.00"
          },
          {
            "name": "STK Keeper Code",
            "dataType": "string",
            "sourceColumn": "STK Keeper Code"
          },
          {
            "name": "Standard Weight",
            "dataType": "double",
            "sourceColumn": "Standard Weight",
            "summarizeBy": "average"
          },
          {
            "name": "STD Weight Flag",
            "dataType": "string",
            "sourceColumn": "STD Weight Flag"
          },
          {
            "name": "STK Keeper Output",
            "dataType": "string",
            "sourceColumn": "STK Keeper Output"
          },
          {
            "name": "Output sloc",
            "dataType": "string",
            "sourceColumn": "Output sloc"
          },
          {
            "name": "STD Text Key",
            "dataType": "string",
            "sourceColumn": "STD Text Key"
          },
          {
            "name": "Batch",
            "dataType": "string",
            "sourceColumn": "Batch"
          },
          {
            "name": "Booklet_ID",
            "dataType": "int64",
            "sourceColumn": "Booklet_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Total Weight",
            "dataType": "double",
            "sourceColumn": "Total Weight"
          },
          {
            "type": "calculated",
            "name": "Filters",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "if ('Fact - Actual Production'[STK Keeper Code] = \"9998\", ",
              "\tif(left(RELATED('Dim - Product'[Product Code]),11) = \"00000000003\",0,",
              "\tif (right('Fact - Actual Production'[STK Keeper Output], 1) in {\"M\"},0,",
              "\tif(left(RELATED('Dim - Product'[Product Code]),2) in {\"G1\",\"S1\", \"T1\"},0,",
              "",
              "\tif(and(Left(RELATED('Dim - Product'[Product Code]),1) = \"D\", Mid(RELATED('Dim - Product'[Product Code]),6,1)<>\"N\"),0,",
              "\tif(Mid(RELATED('Dim - Product'[Product Code]),2,1)= \"D\",0,1)",
              "\t",
              "\t)",
              "\t)",
              "\t)",
              "\t)",
              "\t)",
              "",
              "\t"
            ]
          },
          {
            "name": "INTEGRATION_ID",
            "dataType": "string",
            "sourceColumn": "INTEGRATION_ID"
          },
          {
            "name": "STK_KEEPING_GROUP",
            "dataType": "string",
            "sourceColumn": "STK_KEEPING_GROUP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_ACTUAL_PRODUCTION_F = Source{[Schema=\"dbo\",Item=\"W_VW_ACTUAL_PRODUCTION_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_ACTUAL_PRODUCTION_F,{{\"STOCK_KEEPER_WID\", \"STK Keeper Code\"}, {\"STANDARD_WEIGHT\", \"Standard Weight\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"ORDER_NUMBER\", \"Order Number\"}, {\"BASE_UOM_CODE\", \"UOM\"}, {\"ACTUAL_QTY\", \"Actual QTY\"}, {\"LOCATION_WID\", \"Location Wid\"}, {\"DOCUMENT_NUMBER\", \"Document Number\"}, {\"STANDARD_WEIGHT_FLAG\", \"STD Weight Flag\"}, {\"STANDARD_TEXT_KEY\", \"STD Text Key\"}, {\"LOCATION_OUTPUT_WID\", \"Output sloc\"}, {\"STOCK_KEEPER_OUTPUT_WID\", \"STK Keeper Output\"}, {\"BATCH\", \"Batch\"}, {\"STK_KEEPER_WID\", \"Booklet_ID\"}, {\"TOTAL_WEIGHT\", \"Total Weight\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PNJP AP .Net Qty",
            "description": "Ton kho qty theo thoi diem va cong doan",
            "expression": [
              "",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Actual Production'[Actual QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ]
          },
          {
            "name": "PNJP AP .Q10",
            "description": "Ton kho Q10 thoi diem theo cong doan",
            "expression": [
              "",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Actual Production'[Q10])/100, ",
              "FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)),",
              "FILTER('Dim - Product', left('Dim - Product'[Product Code],1) IN {\"G\"} || left('Dim - Product'[Product Code],12) in {\"000000000031\", \"000000000032\" })",
              "",
              ")"
            ]
          },
          {
            "name": "PNJP AP .Net Qty (Daily)",
            "expression": [
              "",
              "",
              "VAR OPENING = CALCULATE( [PNJP AP .Net Qty], DATEADD('Dim - Time'[Date], -1, DAY))",
              "",
              "VAR CLOSING =  [PNJP AP .Net Qty]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT"
            ]
          },
          {
            "name": "PNJP AP .Q10 (Daily)",
            "expression": [
              "",
              "",
              "VAR OPENING = CALCULATE( [PNJP AP .Q10], DATEADD('Dim - Time'[Date], -1, DAY))",
              "",
              "VAR CLOSING =  [PNJP AP .Q10]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT"
            ]
          },
          {
            "name": "PNJP AP AVG .Net Qty (Monthly)",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "                'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP AP .Net Qty (Daily)])",
              " )"
            ]
          },
          {
            "name": "PNJP AP AVG .Q10 (Monthly)",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "                'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP AP .Q10 (Daily)])",
              " )"
            ]
          },
          {
            "name": "PNJP AP AVG .Net Qty (Monthly) CK",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, YEAR)",
              "",
              "",
              "",
              "RETURN ",
              "--    CALCULATE( DIVIDE([. PNJP AP AVG Net Qty (Monthly)],",
              "        CALCULATE(",
              "                AVERAGEX(",
              "                    FILTER(",
              "                        ALLSELECTED( 'Dim - Time'[Date] ),",
              "                            'Dim - Time'[Date] >= CK_SDate &&",
              "                                    'Dim - Time'[Date] <= CK_EDate ",
              "                        ),",
              "                    [PNJP AP .Net Qty (Daily)])",
              "             )",
              "--             , 0)    )"
            ]
          },
          {
            "name": "PNJP AP AVG .Net Qty (Monthly) KT",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,MONTH)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, MONTH)",
              "",
              "",
              "",
              "RETURN ",
              "--    CALCULATE( DIVIDE([. PNJP AP AVG Net Qty (Monthly)],",
              "        CALCULATE(",
              "                AVERAGEX(",
              "                    FILTER(",
              "                        ALLSELECTED( 'Dim - Time'[Date] ),",
              "                            'Dim - Time'[Date] >= CK_SDate &&",
              "                                    'Dim - Time'[Date] <= CK_EDate ",
              "                        ),",
              "                    [PNJP AP .Net Qty (Daily)])",
              "             )",
              "             --, 0)    )"
            ]
          },
          {
            "name": "PNJP AP AVG .Q10 (Monthly) KT",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,MONTH)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, MONTH)",
              "",
              "",
              "",
              "RETURN ",
              "--    CALCULATE( DIVIDE([PNJP AP AVG #Q10 (Monthly)],",
              "        CALCULATE(",
              "                AVERAGEX(",
              "                    FILTER(",
              "                        ALLSELECTED( 'Dim - Time'[Date] ),",
              "                            'Dim - Time'[Date] >= CK_SDate &&",
              "                                    'Dim - Time'[Date] <= CK_EDate ",
              "                        ),",
              "                    [PNJP AP .Q10 (Daily)])",
              "             )",
              "--             , 0)    )"
            ]
          },
          {
            "name": "PNJP AP %AVG .Q10 (Monthly) CK",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, YEAR)",
              "",
              "",
              "",
              "RETURN ",
              "    CALCULATE( DIVIDE([PNJP AP AVG .Q10 (Monthly)],",
              "        CALCULATE(",
              "                AVERAGEX(",
              "                    FILTER(",
              "                        ALLSELECTED( 'Dim - Time'[Date] ),",
              "                            'Dim - Time'[Date] >= CK_SDate &&",
              "                                    'Dim - Time'[Date] <= CK_EDate ",
              "                        ),",
              "                    [PNJP AP .Q10 (Daily)])",
              "             ), 0)",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP AP .Net Qty (Daily) KT",
            "expression": [
              "",
              "",
              "CALCULATE([PNJP AP .Net Qty (Daily)], dateadd('Dim - Time'[Date],-1, MONTH))",
              "--RETURN DIVIDE([PNJP AP .Net Qty (Daily)], KT,0)-1"
            ]
          },
          {
            "name": "PNJP AP .Net Qty (Daily) CK",
            "expression": [
              "",
              "",
              "CALCULATE([PNJP AP .Net Qty (Daily)], dateadd('Dim - Time'[Date],-1, YEAR))",
              "--RETURN DIVIDE([. PNJP AP Net Qty (Daily)], KT,0)-1"
            ]
          },
          {
            "name": "PNJP AP .Q10 (Daily) KT",
            "expression": [
              "",
              "",
              "CALCULATE([PNJP AP .Q10 (Daily)] , dateadd('Dim - Time'[Date],-1, MONTH))",
              "--RETURN DIVIDE([PNJP AP #Q10 (Daily)], KT,0)-1"
            ]
          },
          {
            "name": "PNJP AP .Q10 (Daily) CK",
            "expression": [
              "",
              "",
              "CALCULATE([PNJP AP .Q10 (Daily)] , dateadd('Dim - Time'[Date],-1, YEAR))",
              "--RETURN DIVIDE([PNJP AP #Q10 (Daily)], KT,0)-1"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Q10 (Daily)",
            "expression": [
              "",
              "",
              "VAR GI = CALCULATE(Sum('Fact - Actual Production'[Q10])*-1,",
              "\t'Fact - Actual Production'[TYPES] = \"Out\")",
              "",
              "RETURN DIVIDE(GI, [PNJP AP .Q10 (Daily)])"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Net Qty (Daily)",
            "expression": [
              "",
              "",
              "VAR GI = CALCULATE(Sum('Fact - Actual Production'[Actual QTY])*-1,",
              "\t'Fact - Actual Production'[TYPES] = \"Out\")",
              "",
              "RETURN DIVIDE(GI, [PNJP AP .Net Qty (Daily)])"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Q10 (Daily) (CK)",
            "expression": [
              "",
              "",
              "VAR GI = CALCULATE(Sum('Fact - Actual Production'[Q10])*-1, DATEADD('Dim - Time'[Date],-1,YEAR),",
              "\t'Fact - Actual Production'[TYPES] = \"Out\")",
              "",
              "RETURN DIVIDE(GI, [PNJP AP .Q10 (Daily) CK])"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Q10 (Daily) (KT)",
            "expression": [
              "",
              "",
              "VAR GI = CALCULATE(Sum('Fact - Actual Production'[Q10])*-1, DATEADD('Dim - Time'[Date],-1,MONTH),",
              "\t'Fact - Actual Production'[TYPES] = \"Out\")",
              "",
              "RETURN DIVIDE(GI, [PNJP AP .Q10 (Daily) KT])"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Net Qty (Monthly)",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "                'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP AP TurnOver .Net Qty (Daily)]",
              " ))"
            ]
          },
          {
            "name": "PNJP AP TurnOver .Q10 (Monthly)",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "                'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP AP TurnOver .Q10 (Daily)]",
              " ))"
            ]
          },
          {
            "name": "QC %Cancel .Q10",
            "expression": [
              "",
              " VAR GI = CALCULATE(SUM('Fact - Actual Production'[Q10]) * -1, 'Fact - Actual Production'[TYPES] = \"OUT\")",
              " VAR Cancel = CALCULATE(sum('Fact - Actual Production'[Q10]),",
              "\tFILTER('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\"  && 'Fact - Actual Production'[STK Keeper Code] = \"9998\"))",
              "\t",
              "RETURN  DIVIDE(Cancel, GI,BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ".Qty GI Finish Goods",
            "expression": [
              " CALCULATE(",
              "    CALCULATE(Sum('Fact - Actual Production'[Actual QTY]),",
              "\tFilter('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\"),",
              "\tFILTER('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\", \"1102\", \"1104\", \"1105\",\"1106\"}))",
              "--,FILTER(ALL('Dim - Actual Production'), 'Dim - Actual Production'[STD Keeper Group] IN {\"KVSX1\", \"KVSX2\", \"KVSX3\", \"NM LONG HẬU\"})",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "QC %Cancel .Qty",
            "description": "[CL1.2] Lỗi hủy trong sản xuất",
            "expression": [
              "",
              "  DIVIDE([QC Cancel .Qty], [.Qty GI Finish Goods],BLANK())"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "%STD Weight Error",
            "expression": [
              " ",
              " VAR GR = CALCULATE(sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Dim - Product', 'Dim - Product'[Product Group LV2] in {\"PS\", \"PT\", \"PG\", \"PP\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\",\"1102\", \"1104\", \"1105\", \"1106\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STD Weight Flag] in {\"Failed\", \"Passed\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[Types] in {\"IN\"})",
              ")",
              "",
              "VAR Failed = CALCULATE(sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Dim - Product', 'Dim - Product'[Product Group LV2] in {\"PS\", \"PT\", \"PG\", \"PP\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\",\"1102\", \"1104\", \"1105\", \"1106\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STD Weight Flag] = \"Failed\"),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[Types] in {\"IN\"})",
              ")",
              "",
              "Return Failed/ GR"
            ]
          },
          {
            "name": "PNJP AP AVG .Q10",
            "expression": [
              " CALCULATE(sum('Fact - Actual Production'[Q10]) / sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Dim - Product', 'Dim - Product'[Product Group LV2] in {\"PS\", \"PT\", \"PG\", \"PP\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\",\"1102\", \"1104\", \"1105\", \"1106\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STD Weight Flag] in {\"Failed\", \"Passed\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[Types] in {\"IN\"})",
              ")",
              ""
            ]
          },
          {
            "name": "%STD Weight Pass",
            "expression": [
              "  VAR GR = CALCULATE(sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Dim - Product', 'Dim - Product'[Product Group LV2] in {\"PS\", \"PT\", \"PG\", \"PP\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\",\"1102\", \"1104\", \"1105\", \"1106\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STD Weight Flag] in {\"Failed\", \"Passed\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[Types] in {\"IN\"})",
              ")",
              "",
              "VAR Passed = CALCULATE(sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Dim - Product', 'Dim - Product'[Product Group LV2] in {\"PS\", \"PT\", \"PG\", \"PP\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\",\"1102\", \"1104\", \"1105\", \"1106\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[STD Weight Flag] = \"Passed\"),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[Types] in {\"IN\"})",
              ")",
              "",
              "Return Passed / GR"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "QC Cancel .Q10",
            "expression": [
              " CALCULATE(sum('Fact - Actual Production'[Q10]),",
              "\tFILTER('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\"  && 'Fact - Actual Production'[STK Keeper Code] = \"9998\"))",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": ".Qty GI Finish_F1018",
            "expression": [
              " CALCULATE(Sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\"),",
              "FILTER('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\", \"1102\", \"1104\", \"1105\",\"1106\"} ||",
              "'Fact - Actual Production'[STK Keeper Output] = \"F1018\"))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Total Weight Avg.",
            "expression": [
              " CALCULATE(sum('Fact - Actual Production'[Total Weight])/[.Qty GI Finish Goods],",
              "FILTER('Fact - Actual Production', 'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\", \"1102\", \"1104\", \"1105\", \"1106\"})",
              ")"
            ]
          },
          {
            "name": "STD Weight Avg.",
            "expression": [
              " CALCULATE(sum('Fact - Actual Production'[Standard Weight])/countrows ('Fact - Actual Production'),",
              "FILTER('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\")",
              ")"
            ]
          },
          {
            "name": "%Ttl Weight vs .STD",
            "expression": " [Total Weight Avg.]/[STD Weight Avg.] - 1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "All Finish Goods",
            "expression": [
              " CALCULATE([.Qty GI Finish Goods],",
              "FILTER(ALL('Dim - Actual Production'), 'Dim - Actual Production'[STD Keeper Group] IN {\"KVSX1\", \"KVSX2\", \"KVSX3\", \"NM LONG HẬU\"})",
              ")"
            ]
          },
          {
            "name": "QC Cancel .Qty",
            "description": "Tổng số lượng hủy",
            "expression": [
              " CALCULATE(sum('Fact - Actual Production'[Actual QTY]),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\" && 'Fact - Actual Production'[STK Keeper Code] = \"9998\" && 'Fact - Actual Production'[Filters] = 1)",
              ")",
              "/*",
              "Filter('Dim - Product', not left( 'Dim - Product'[Product Code], 11) in {\"00000000003\"}), ",
              "Filter('Dim - Product', not left( 'Dim - Product'[Product Code], 2) in {\"G1\",\"S1\", \"T1\"}), ",
              "FILTER('Fact - Actual Production', not right('Fact - Actual Production'[STK Keeper Output], 1) in {\"M\"}),",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"IN\" && 'Fact - Actual Production'[STK Keeper Code] = \"9998\"))",
              "*/"
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Fact - Resource Performance",
        "columns": [
          {
            "name": "Working Date Wid",
            "dataType": "string",
            "sourceColumn": "Working Date Wid"
          },
          {
            "name": "TARGET",
            "dataType": "int64",
            "sourceColumn": "TARGET"
          },
          {
            "name": "EMPLOYEE_WID",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_WID"
          },
          {
            "name": "LB Days",
            "dataType": "double",
            "sourceColumn": "LB Days"
          },
          {
            "name": "Target Point",
            "dataType": "double",
            "sourceColumn": "Target Point"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_RESOUCE_PERFORM_F = Source{[Schema=\"dbo\",Item=\"W_VW_RESOUCE_PERFORM_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_RESOUCE_PERFORM_F,{{\"WORKING_DATE_WID\", \"Working Date Wid\"}, {\"LB_DAYS\", \"LB Days\"}, {\"TARGET_POINT\", \"Target Point\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Plan Revenue - PNJP",
        "columns": [
          {
            "name": "Product Wid",
            "dataType": "int64",
            "sourceColumn": "Product Wid"
          },
          {
            "name": "INVOICE_GRP",
            "dataType": "string",
            "sourceColumn": "INVOICE_GRP"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "PLANT_NAME",
            "dataType": "string",
            "sourceColumn": "PLANT_NAME"
          },
          {
            "name": "PROD_CAT_2_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT_2_CODE"
          },
          {
            "name": "PROD_CAT_3_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT_3_CODE"
          },
          {
            "name": "PROD_CAT_4_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT_4_CODE"
          },
          {
            "name": "PROD_CAT_4_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT_4_NAME"
          },
          {
            "name": "NET_AMT",
            "dataType": "double",
            "sourceColumn": "NET_AMT"
          },
          {
            "name": "CHANNEL_CODE",
            "dataType": "int64",
            "sourceColumn": "CHANNEL_CODE"
          },
          {
            "name": "Plant_wid",
            "dataType": "int64",
            "sourceColumn": "Plant_wid"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_PLAN_REVENUE_PNJP_D = Source{[Schema=\"dbo\",Item=\"W_VW_PLAN_REVENUE_PNJP_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_PLAN_REVENUE_PNJP_D,{{\"PROD_WID\", \"Product Wid\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Production Plan",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "string",
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "Labor OT",
            "dataType": "int64",
            "sourceColumn": "Labor OT"
          },
          {
            "name": "Labor not OT",
            "dataType": "int64",
            "sourceColumn": "Labor not OT"
          },
          {
            "name": "PrO Plan",
            "dataType": "int64",
            "sourceColumn": "PrO Plan"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PRODUCTION_PLAN_D = Source{[Schema=\"dbo\",Item=\"W_PRODUCTION_PLAN_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_PRODUCTION_PLAN_D,{{\"CONG_OT\", \"Labor OT\"}, {\"CONG_KHONG_OT\", \"Labor not OT\"}, {\"PRODUCTION_ORDER_PLAN\", \"PrO Plan\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Sales Invoice Line",
        "columns": [
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "INVOICED_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "INVOICED_ON_DT_WID"
          },
          {
            "name": "Invoice Number",
            "dataType": "string",
            "sourceColumn": "Invoice Number"
          },
          {
            "name": "INVOICE_ITEM",
            "dataType": "string",
            "sourceColumn": "INVOICE_ITEM"
          },
          {
            "name": "Net Amount",
            "dataType": "double",
            "sourceColumn": "Net Amount"
          },
          {
            "name": "Discount Amount",
            "dataType": "double",
            "sourceColumn": "Discount Amount"
          },
          {
            "name": "Invoice Type",
            "dataType": "string",
            "sourceColumn": "Invoice Type"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "Qty"
          },
          {
            "name": "Customer Type (Month)",
            "dataType": "string",
            "sourceColumn": "Customer Type (Month)"
          },
          {
            "name": "Customer Type (Year)",
            "dataType": "string",
            "sourceColumn": "Customer Type (Year)"
          },
          {
            "type": "calculated",
            "name": "Invoice date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": " date(left('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID], 4), mid('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID], 5,2), RIGHT('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID], 2))",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Program_wid",
            "dataType": "int64",
            "sourceColumn": "Program_wid"
          },
          {
            "name": "CHANNEL_CODE",
            "dataType": "string",
            "sourceColumn": "CHANNEL_CODE"
          },
          {
            "name": "CUSTOMER_SOLD_TO_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_SOLD_TO_WID"
          },
          {
            "name": "Group Age",
            "dataType": "string",
            "sourceColumn": "Group Age"
          },
          {
            "name": "SALES_DEAL_NAME",
            "dataType": "string",
            "sourceColumn": "SALES_DEAL_NAME"
          },
          {
            "name": "DATE_KEY",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "Program Name",
            "dataType": "string",
            "sourceColumn": "Program Name"
          },
          {
            "name": "Program Category",
            "dataType": "string",
            "sourceColumn": "Program Category"
          },
          {
            "name": "Program Type",
            "dataType": "string",
            "sourceColumn": "Program Type"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION"
          },
          {
            "name": "EFFECTIVE_FROM_DT",
            "dataType": "dateTime",
            "sourceColumn": "EFFECTIVE_FROM_DT"
          },
          {
            "name": "EFFECTIVE_TO_DT",
            "dataType": "dateTime",
            "sourceColumn": "EFFECTIVE_TO_DT"
          },
          {
            "name": "CUST_CARD_DESC",
            "dataType": "string",
            "sourceColumn": "CUST_CARD_DESC"
          },
          {
            "name": "SALES_DEAL",
            "dataType": "string",
            "sourceColumn": "SALES_DEAL"
          },
          {
            "name": "MKT_Customer",
            "dataType": "string",
            "sourceColumn": "MKT_CUSTOMER"
          },
          {
            "name": "PROGRAM_LENGTH",
            "dataType": "int64",
            "sourceColumn": "PROGRAM_LENGTH"
          },
          {
            "name": "MKT.Year",
            "dataType": "string",
            "sourceColumn": "MKT.Year"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT TOP 1 [INVOICE_NUM]",
                "      ,[INVOICE_ITEM]",
                "      ,[PRODUCT_WID]",
                "      ,[PLANT_WID]",
                "      ,[INVOICED_ON_DT_WID]",
                "      ,[Program_wid]",
                "      ,[NET_AMT]",
                "      ,[DISCOUNT_AMT]",
                "      ,[INVOICE_TYPE]",
                "      ,[CHANNEL_CODE]",
                "      ,[CUSTOMER_SOLD_TO_WID]",
                "      ,[INVOICED_QTY]",
                "      ,[CUST_TYPE_MONTH]",
                "      ,[CUST_TYPE_YEAR]",
                "      ,[Group_age]",
                "      ,[SALES_DEAL]",
                "      ,[SALES_DEAL_NAME]",
                "      ,[DATE_KEY]",
                "      ,[PROGRAM_NAME]",
                "      ,[PROGRAM_CATEGORY]",
                "      ,[PROGRAM_TYPE]",
                "      ,[MKT_YEAR]",
                "      ,[REGION]",
                "      ,[EFFECTIVE_FROM_DT]",
                "      ,[EFFECTIVE_TO_DT]",
                "      ,[CUST_CARD_DESC]",
                "      ,[MKT_CUSTOMER]",
                ", PROGRAM_LENGTH",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_MAR_F]",
                "  where [INVOICED_ON_DT_WID] >= 20190101\"),",
                "     #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},   {\"INVOICE_TYPE\", \"Invoice Type\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{ {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns1\",{ {\"Invoice Quantity\", \"Qty\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"SALES_DEAL\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROGRAM_CATEGORY\", \"Program Category\"}, {\"PROGRAM_TYPE\", \"Program Type\"}, {\"MKT_YEAR\", \"MKT.Year\"}, {\"PROGRAM_NAME\", \"Program Name\"}}),",
                "    #\"Renamed Columns5\" = Table.RenameColumns(#\"Renamed Columns4\",{{\"Group_age\", \"Group Age\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns5\",{{\"EFFECTIVE_TO_DT\", type date}, {\"EFFECTIVE_FROM_DT\", type date}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Invoice Type] <> \"ZRE\" and [Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZVC\" and [Invoice Type] <> \"ZW2\" and [Invoice Type] <> \"ZWA\"  and [Invoice Type] <> \"ZPI\" ))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT TOP 1 [INVOICE_NUM]",
                  "      ,[INVOICE_ITEM]",
                  "      ,[PRODUCT_WID]",
                  "      ,[PLANT_WID]",
                  "      ,[INVOICED_ON_DT_WID]",
                  "      ,[Program_wid]",
                  "      ,[NET_AMT]",
                  "      ,[DISCOUNT_AMT]",
                  "      ,[INVOICE_TYPE]",
                  "      ,[CHANNEL_CODE]",
                  "      ,[CUSTOMER_SOLD_TO_WID]",
                  "      ,[INVOICED_QTY]",
                  "      ,[CUST_TYPE_MONTH]",
                  "      ,[CUST_TYPE_YEAR]",
                  "      ,[Group_age]",
                  "      ,[SALES_DEAL]",
                  "      ,[SALES_DEAL_NAME]",
                  "      ,[DATE_KEY]",
                  "      ,[PROGRAM_NAME]",
                  "      ,[PROGRAM_CATEGORY]",
                  "      ,[PROGRAM_TYPE]",
                  "      ,[MKT_YEAR]",
                  "      ,[REGION]",
                  "      ,[EFFECTIVE_FROM_DT]",
                  "      ,[EFFECTIVE_TO_DT]",
                  "      ,[CUST_CARD_DESC]",
                  "      ,[MKT_CUSTOMER]",
                  ", PROGRAM_LENGTH",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_MAR_F]",
                  "  where [INVOICED_ON_DT_WID] >= 20190101\"),",
                  "     #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},   {\"INVOICE_TYPE\", \"Invoice Type\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{ {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                  "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns1\",{ {\"Invoice Quantity\", \"Qty\"}}),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"SALES_DEAL\"}),",
                  "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROGRAM_CATEGORY\", \"Program Category\"}, {\"PROGRAM_TYPE\", \"Program Type\"}, {\"MKT_YEAR\", \"MKT.Year\"}, {\"PROGRAM_NAME\", \"Program Name\"}}),",
                  "    #\"Renamed Columns5\" = Table.RenameColumns(#\"Renamed Columns4\",{{\"Group_age\", \"Group Age\"}}),",
                  "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns5\",{{\"EFFECTIVE_TO_DT\", type date}, {\"EFFECTIVE_FROM_DT\", type date}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Invoice Type] <> \"ZRE\" and [Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZVC\" and [Invoice Type] <> \"ZW2\" and [Invoice Type] <> \"ZWA\"  and [Invoice Type] <> \"ZPI\" ))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": ". Net Amt",
            "expression": " [. All Net Amt]",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amt (LY)",
            "expression": [
              " CALCULATE([. All Net Amt], DATEADD('Dim - Time'[Date], -1, YEAR) , ",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Customer",
            "expression": [
              " CALCULATE(DISTINCTCOUNT('Dim - Customer'[Customer Code]), RELATEDTABLE('Fact - ALL Sales Invoice Line'), ALL('Dim - Time'),  FILTER('Fact - aLL Sales Invoice Line', 'Fact - aLL Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - ALL Sales Invoice Line'[INVOICE TYPE] <> \"ZS2\" && 'Fact - ALL Sales Invoice Line'[INVOICE TYPE]<> \"ZPI\" ),",
              "FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\",\"Payer\"}))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Customer (LY)",
            "expression": [
              " CALCULATE([# Customer], DATEADD('Dim - Time'[Date], -1, YEAR),",
              "  ALLEXCEPT('Fact - aLL Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - aLL Sales Invoice Line'[Customer Type (Month)],'Fact - aLL Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],",
              "'Fact - All Sales Invoice Line'[Group_age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender],",
              " 'Dim - Plant'[Tier], 'Fact - aLL Sales Invoice Line'[MKT_Customer], 'Fact - aLL Sales Invoice Line'[CUST_CARD_DESC]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Cust Transaction (PC)",
            "expression": [
              " COUNTROWS(GROUPBY('Fact - All Sales Invoice Line',",
              " 'Fact - All Sales Invoice Line'[PLANT_WID], 'Fact - All Sales Invoice Line'[Customer WID], 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Cust Transaction (PC) (LY)",
            "expression": [
              " CALCULATE([# Cust Transaction (PC)], ",
              "DATEADD('Dim - Time'[Date], -1, YEAR),",
              "  ALLEXCEPT('Fact - aLL Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - aLL Sales Invoice Line'[Customer Type (Month)],'Fact - aLL Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - aLL Sales Invoice Line'[MKT_Customer], 'Fact - aLL Sales Invoice Line'[CUST_CARD_DESC]))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Active Plant",
            "expression": " DISTINCTCOUNT('Fact - All Sales Invoice Line'[PLANT_WID])",
            "formatString": "#,0"
          },
          {
            "name": ". MKT Net Amt (LY)",
            "expression": [
              " CALCULATE([. Net Amt], ",
              "FILTER(",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC]), ",
              "DATESBETWEEN('Fact - All Sales Invoice Line'[Invoice Date], [StartDT LY], [EndDT LY])))",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt/Store (LY)",
            "expression": " CALCULATE([AVG Net Amt/Store]/ [MKT Net Amt/Store (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Net Amt/Store (CK)",
            "expression": " CALCULATE([AVG Net Amt/Store]/ [MKT Net Amt/Store (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Active Plant (CK)",
            "expression": " CALCULATE([# Active Plant]/[# MKT Active Plant (CK)]-1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MKT Net Amt/Store (LY)",
            "expression": " CALCULATE([. MKT Net Amt (LY)]/[# MKT Active Plant (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt/Qty (CK)",
            "expression": " CALCULATE([AVG Net Amt/Qty (In)]/[AVG MKT Net Amt/Qty (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Cust Transaction (CK)",
            "expression": " CALCULATE([# Cust Transaction (PC)]/ [# MKT Cust Transaction (CK)]-1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% MKT Cust Transaction (LY)",
            "expression": " CALCULATE([# Cust Transaction (PC)]/ [# MKT Cust Transaction (LY)]-1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% MKT Customer/Store/Day (CK)",
            "expression": " CALCULATE([AVG Customer/Store/Day]/ [AVG MKT Customer/Store (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Net Qty (CK)",
            "expression": " CALCULATE([. Net Qty]/[. MKT Net Qty (CK)] -1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG MKT Net Amt/Qty (CK)",
            "expression": " CALCULATE([. MKT Net Amt (CK)]/[. MKT Net Qty (CK)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Customer/Store/Day (LY)",
            "expression": [
              " ",
              "\tCALCULATE([AVG Customer/Store/Day],",
              "\tFILTER(ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER],",
              "\t 'Dim - Plant'[PLANT KIND], 'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand],'Dim - Customer'[CUST_CARD_DESC],'Dim - Plant'[Plant Code], 'Dim - Plant'[PLANT NAME], 'Dim - Plant'[Sales District Name], 'Fact - Sales Invoice Line'[Group Age]),",
              "\t'Fact - Sales Invoice Line'[Program Category] = SELECTEDVALUE('Fact - Sales Invoice Line'[PROGRAM CATEGORY]) &&",
              "\tVALUE('Fact - Sales Invoice Line'[MKT.Year]) = value(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1 &&",
              "\t 'Fact - Sales Invoice Line'[Program Category] <> BLANK()))",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "% Net Amt (LY)",
            "expression": [
              " CALCULATE([. Net Amt]/[. Net Amt (LY)]-1,",
              "USERELATIONSHIP('Dim - Time'[Date], 'Fact - Sales Invoice Line'[Invoice Date]))",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Net Amt (LY)",
            "expression": [
              " CALCULATE([. Net Amt]/[. MKT Net Amt (LY)] -1)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Net Amt/Day",
            "expression": [
              " CALCULATE([. Net Amt]/ DISTINCTCOUNT('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID]))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Qty (LY)",
            "expression": " CALCULATE([. Net Qty]/[. MKT Net Qty (LY)] -1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". MKT Net Qty (LY)",
            "expression": [
              " CALCULATE([# All Qty],",
              "FILTER(",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC]), ",
              "DATESBETWEEN('Fact - All Sales Invoice Line'[Invoice Date], [StartDT LY], [EndDT LY])))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Customer (LY)",
            "expression": [
              " CALCULATE([# Customer],",
              "FILTER(",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC]), ",
              "DATESBETWEEN('Fact - All Sales Invoice Line'[Invoice Date], [StartDT LY], [EndDT LY])))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Customer (LY)",
            "expression": " CALCULATE([# Customer]/[# MKT Customer (LY)] -1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "# MKT Cust Transaction (LY)",
            "expression": [
              " CALCULATE([# Cust Transaction (PC)],",
              "FILTER(",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC]), ",
              "DATESBETWEEN('Fact - All Sales Invoice Line'[Invoice Date], [StartDT LY], [EndDT LY])))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Ticket Size (LY)",
            "expression": " CALCULATE([AVG Ticket Size]/[AVG MKT Ticket Size (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Ticket Size",
            "expression": [
              " CALCULATE([. Net Amt]/[# Cust Transaction (PC)],",
              "FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"})",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AVG Ticket Size (LY)",
            "expression": " CALCULATE([. Net Amt (LY)]/[# Cust Transaction (PC) (LY)] )",
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Ticket Size (LY)",
            "expression": " CALCULATE([. MKT Net Amt (LY)]/[# MKT Cust Transaction (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "% Ticket Size (LY)",
            "expression": " CALCULATE([AVG Ticket Size]/[AVG Ticket Size (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG MKT Qty/Bill (LY)",
            "expression": " CALCULATE([. MKT Net Qty (LY)]/[# MKT Bill (LY)])",
            "formatString": "#,0.00"
          },
          {
            "name": "# MKT Bill (LY)",
            "expression": [
              " CALCULATE([# Bill],",
              "FILTER(",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC]), ",
              "DATESBETWEEN('Fact - All Sales Invoice Line'[Invoice Date], [StartDT LY], [EndDT LY])))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Bill",
            "expression": [
              " CALCULATE(DISTINCTCOUNT('Fact - All Sales Invoice Line'[Invoice Number]),",
              " FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[INVOICE TYPE] <> \"ZS2\" && 'Fact - All Sales Invoice Line'[INVOICE TYPE]<> \"ZPI\"))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AVG Net Amt/Bill",
            "expression": " CALCULATE([. Net Amt]/[# Bill])",
            "formatString": "#,0"
          },
          {
            "name": "% Qty/Bill (LY)",
            "expression": " CALCULATE([AVG Qty/Bill]/[AVG Qty/Bill (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Qty/Bill",
            "expression": " CALCULATE([. Net Qty]/[# Bill])",
            "formatString": "#,0.00"
          },
          {
            "name": "AVG Qty/Bill (LY)",
            "expression": " CALCULATE([. Net Qty (LY)]/[# Bill (LY)])",
            "formatString": "#,0.00"
          },
          {
            "name": "# Bill (LY)",
            "expression": [
              "CALCULATE([# Bill], DATEADD('Dim - Time'[Date], -1, YEAR),  ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Net Qty",
            "expression": " [# All Qty]",
            "formatString": "#,0.00"
          },
          {
            "name": ". Net Qty (LY)",
            "expression": [
              " CALCULATE([# All Qty], DATEADD('Dim - Time'[Date], -1, YEAR),  ",
              "ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND], 'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - All Sales Invoice Line'[MKT_Customer]))",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "% MKT Qty/Bill (LY)",
            "expression": " CALCULATE([AVG Qty/Bill]/[AVG MKT Qty/Bill (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Net Amt/Bill (LY)",
            "expression": " CALCULATE([. Net Amt (LY)]/[# Bill (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Net Amt/Bill (LY)",
            "expression": " CALCULATE([. MKT Net Amt (LY)]/[# MKT Bill (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG Net Amt/Store",
            "expression": " CALCULATE([. Net Amt]/[# Active Plant])",
            "formatString": "#,0"
          },
          {
            "name": "AVG Customer/Store",
            "expression": " CALCULATE([# Customer]/[# Active Plant])",
            "formatString": "#,0.00"
          },
          {
            "name": "AVG Net Amt/Store/Day",
            "expression": " CALCULATE([AVG Net Amt/Store]/DISTINCTCOUNT('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID]))",
            "formatString": "#,0"
          },
          {
            "name": "AVG Customer/Store/Day",
            "expression": [
              " CALCULATE([AVG Customer/Store]/ ",
              "DISTINCTCOUNT('Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Active Plant (LY)",
            "expression": [
              " CALCULATE([# Active Plant], FILTER(",
              "ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t'Fact - Sales Invoice Line'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - Sales Invoice Line'[MKT.Year]) = value(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Active Plant (LY)",
            "expression": " CALCULATE([# Active Plant]/[# MKT Active Plant (LY)]-1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Day",
            "expression": "CALCULATE(DISTINCTCOUNT('Fact - Sales Invoice Line'[INVOICED_ON_DT_WID]))"
          },
          {
            "name": "AVG MKT Net Amt/Day (LY)",
            "expression": [
              " CALCULATE([AVG Net Amt/Day],FILTER(ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER], 'Dim - Plant'[PLANT KIND],",
              "\t 'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand],",
              "\t 'Dim - Plant'[Plant Code], 'Dim - Plant'[PLANT NAME], 'Dim - Plant'[Sales District Name]), ",
              "\t'Fact - Sales Invoice Line'[Program Category] = SELECTEDVALUE( 'Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - Sales Invoice Line'[MKT.Year]) = value(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt/Day (LY)",
            "expression": " CALCULATE([AVG Net Amt/Day]/[AVG MKT Net Amt/Day (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Net Amt/Bill (LY)",
            "expression": " CALCULATE([AVG Net Amt/Bill]/[AVG Net Amt/Bill (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Net Amt/Bill (LY)",
            "expression": " CALCULATE([AVG Net Amt/Bill]/[AVG MKT Net Amt/Bill (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Net Amt/Qty (In)",
            "expression": " CALCULATE([. Net Amt]/[. Net Qty], 'Fact - Sales Invoice Line'[Program Type] = \"2. Trong CT\")",
            "formatString": "#,0"
          },
          {
            "name": "AVG Net Amt/Qty (LY)",
            "expression": " CALCULATE([. Net Amt (LY)]/[. Net Qty (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Net Amt/Qty (LY)",
            "expression": " CALCULATE([. MKT Net Amt (LY)]/[. MKT Net Qty (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt/Qty (LY)",
            "expression": " CALCULATE([AVG Net Amt/Qty (In)]/[AVG MKT Net Amt/Qty (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Net Amt/Qty (LY)",
            "expression": " CALCULATE([AVG Net Amt/Qty (In)]/[AVG Net Amt/Qty (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG Net Amt/Qty (before)",
            "expression": " CALCULATE([. Net Amt]/[. Net Qty], 'Fact - Sales Invoice Line'[Program Type] = \"1. Trước CT\")",
            "formatString": "#,0"
          },
          {
            "name": "% Net Amt/Qty (B4)",
            "expression": " CALCULATE([AVG Net Amt/Qty (In)]/[AVG Net Amt/Qty (before)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Date Lost Customer",
            "expression": [
              "",
              "CALCULATE (       ",
              "    EOMONTH ( MAX ( 'Fact - Sales Invoice Line'[Invoice Date]),24), ",
              "    REMOVEFILTERS ('Dim - Time') ",
              ")"
            ]
          },
          {
            "name": ". MKT Net Amt",
            "expression": [
              "CALCULATE([. ALL Net Amt], FILTER(ALLEXCEPT('Fact - All Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER], 'Dim - Plant'[PLANT KIND],",
              " 'Fact - All Sales Invoice Line'[Customer Type (Month)],'Fact - All Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand],'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - All Sales Invoice Line'[Group_age], 'Dim - Plant'[Sales District Name], 'Fact - All Sales Invoice Line'[CUST_CARD_DESC], 'Dim - Customer'[GENDER]), 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] >= MIN('Dim - Program'[EFFECTIVE_FROM_DT] )  &&",
              "'Fact - ALL Sales Invoice Line'[INVOICED_ON_DT_WID] <= MAX('Dim - Program'[EFFECTIVE_TO_DT]))",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "All Customer",
            "expression": [
              " CALCULATE([# All Customer],",
              "    ALL('Dim - Product'),",
              "    ALL('Dim - Plant'),",
              "    ALL('Fact - All Sales Invoice Line'),",
              "    FILTER('Dim - Program', VALUE('Dim - Program'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) &&",
              "    'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "),",
              "   FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] IN {\"One-time\", \"Payer\"})",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Cust Transaction (CK)",
            "expression": [
              " \t",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR)",
              "\tRETURN CALCULATE( [# Cust Transaction (PC)],",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt (CK)",
            "expression": "\tDIVIDE([. All Net Amt], [. MKT Net Amt (CK)], 0) -1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". MKT Net Amt (CK)",
            "expression": [
              " ",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR)\t\t\t",
              "\tRETURN CALCULATE([. Net Amt], ",
              "\t\tALL('Dim - Time'),",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Customer (CK)",
            "expression": " DIVIDE([# Customer] , [# MKT Customer (CK)],0) -1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "AVG MKT Ticket Size (CK)",
            "expression": " CALCULATE([. MKT Net Amt (CK)]/ [# MKT Cust Transaction (CK)] )",
            "formatString": "#,0"
          },
          {
            "name": "% MKT Ticket Size (CK)",
            "expression": " CALCULATE([AVG Ticket Size]/ [AVG MKT Ticket Size (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". MKT Net Qty (CK)",
            "expression": [
              "",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR)\t\t\t",
              "\tRETURN CALCULATE([. Net Qty], ",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Net Amt/Bill (CK)",
            "expression": " CALCULATE([. MKT Net Amt (CK)]/[# MKT Bill (CK)])",
            "formatString": "#,0"
          },
          {
            "name": "% MKT Net Amt/Bill (CK)",
            "expression": " CALCULATE([AVG Net Amt/Bill]/[AVG MKT Net Amt/Bill (CK)])-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AVG MKT Net Amt/Day (CK)",
            "expression": [
              "",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR)\t\t\t",
              "RETURN\tCALCULATE([AVG Net Amt/Day], ",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER], 'Dim - Plant'[PLANT KIND], 'Dim - Product'[RPT_Product Group 4 Name],",
              "\t\t 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Plant'[Plant Code],",
              "\t\t  'Dim - Plant'[PLANT NAME], 'Dim - Plant'[Sales District Name]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Customer (CK)",
            "expression": [
              "",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR)\t\t\t",
              "\tRETURN CALCULATE([# Customer], ",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Bill (CK)",
            "expression": [
              "",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - aLL Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - aLL Sales Invoice Line'[Invoice Date]),-1, YEAR)",
              "\t\t\t",
              "\tRETURN CALCULATE([# Bill], ",
              "\t\tALLEXCEPT('Fact - aLL Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - aLL Sales Invoice Line'[Customer Type (Month)],'Fact - aLL Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - aLL Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - aLL Sales Invoice Line'[MKT_Customer], 'Fact - ALL Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t'Dim - Time'[Date]  <= CK_EDate))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Qty/Bill (CK)",
            "expression": " CALCULATE([. MKT Net Qty (CK)]/[# MKT Bill (CK)])",
            "formatString": "#,0.00"
          },
          {
            "name": "% MKT Qty/Bill (CK)",
            "expression": " CALCULATE([AVG Qty/Bill]/[AVG MKT Qty/Bill (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Net Amt/Day (CK)",
            "expression": " CALCULATE([AVG Net Amt/Day]/[AVG MKT Net Amt/Day (CK)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "# MKT Active Plant (CK)",
            "expression": [
              " ",
              " /*",
              "    VAR CK_SDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\t--VAR CK_EDate = VALUE(FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\"))",
              "*/",
              "    VAR CK_SDate = DATEADD(FIRSTDATE('Fact - ALL Sales Invoice Line'[Invoice Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE('Fact - aLL Sales Invoice Line'[Invoice Date]),-1, YEAR)",
              "",
              "RETURN CALCULATE([# Active Plant], ",
              "\tALLEXCEPT('Fact - aLL Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - aLL Sales Invoice Line'[Customer Type (Month)],'Fact - aLL Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - aLL Sales Invoice Line'[Group_Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - aLL Sales Invoice Line'[MKT_Customer], 'Fact - aLL Sales Invoice Line'[CUST_CARD_DESC]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t'Dim - Time'[Date]  <= CK_EDate))",
              "\t",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Customer/Store (LY)",
            "expression": " CALCULATE([# MKT Customer (LY)]/[# MKT Active Plant (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG MKT Customer/Store (CK)",
            "expression": " CALCULATE([# MKT Customer (CK)]/[# MKT Active Plant (CK)])",
            "formatString": "#,0"
          },
          {
            "name": "MKT Net Amt/Store (CK)",
            "expression": " CALCULATE([. MKT Net Amt (CK)]/[# MKT Active Plant (CK)])",
            "formatString": "#,0"
          },
          {
            "name": "% Net Amt (Target)",
            "expression": " CALCULATE([. Net Amt]/[. Target Marketing])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "%Net Amt (Region)",
            "expression": " CALCULATE([. Net Amt]/ CALCULATE([. Net Amt], ALL('Dim - Plant')))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Net Qty (LY)",
            "expression": " CALCULATE([. Net Qty]/[. Net Qty (LY)]-1)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". MKT Net Amt(Corr)",
            "expression": [
              " CALCULATE([. Net Amt], ",
              "",
              "REMOVEFILTERS('Fact - Condition'[Saledeal_ParentGrp]))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "Date New Customer",
            "expression": [
              " ",
              "CALCULATE (",
              "    MIN ( 'Dim - Time'[Date] ),",
              "    ALLEXCEPT ('Fact - All Sales Invoice Line',",
              "        'Dim - Customer'[Customer Code],",
              "        'Dim - Customer', 'Dim - Plant', 'Dim - Product'",
              "    )",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Fact - Purchase Requisition",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "PURCH_RQSTN_NUM",
            "dataType": "string",
            "sourceColumn": "PURCH_RQSTN_NUM"
          },
          {
            "name": "PURCH_RQSTN_ITEM",
            "dataType": "string",
            "sourceColumn": "PURCH_RQSTN_ITEM"
          },
          {
            "name": "PURCH_RQSTN_TYPE",
            "dataType": "string",
            "sourceColumn": "PURCH_RQSTN_TYPE"
          },
          {
            "name": "PURCH_RQSTN_STATUS",
            "dataType": "string",
            "sourceColumn": "PURCH_RQSTN_STATUS"
          },
          {
            "name": "REQUESTED_QTY",
            "dataType": "double",
            "sourceColumn": "REQUESTED_QTY"
          },
          {
            "name": "UOM_CODE",
            "dataType": "string",
            "sourceColumn": "UOM_CODE"
          },
          {
            "name": "UNIT_PRICE",
            "dataType": "double",
            "sourceColumn": "UNIT_PRICE"
          },
          {
            "name": "PURCH_GROUP",
            "dataType": "string",
            "sourceColumn": "PURCH_GROUP"
          },
          {
            "name": "STORAGE_LOC",
            "dataType": "string",
            "sourceColumn": "STORAGE_LOC"
          },
          {
            "name": "REQUESTOR",
            "dataType": "string",
            "sourceColumn": "REQUESTOR"
          },
          {
            "name": "MRP_CONTROLLER_WID",
            "dataType": "string",
            "sourceColumn": "MRP_CONTROLLER_WID"
          },
          {
            "name": "SUBMITTED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "SUBMITTED_ON_DT"
          },
          {
            "name": "RESUBMITTED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "RESUBMITTED_ON_DT"
          },
          {
            "name": "ORDERED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "ORDERED_ON_DT",
            "summarizeBy": "none"
          },
          {
            "name": "ITEM_DELIVERY_DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "ITEM_DELIVERY_DATE_KEY"
          },
          {
            "name": "SUPPLIER_WID",
            "dataType": "int64",
            "sourceColumn": "SUPPLIER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PURCH_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_NUM"
          },
          {
            "name": "PURCH_ORDER_ITEM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_ITEM"
          },
          {
            "name": "MRP_AREA_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_AREA_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT",
            "summarizeBy": "none"
          },
          {
            "name": "DELETE_FLG",
            "dataType": "boolean",
            "sourceColumn": "DELETE_FLG"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PURCHASE_REQUISITION_F = Source{[Schema=\"dbo\",Item=\"W_PURCHASE_REQUISITION_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_PURCHASE_REQUISITION_F,{\"INTEGRATION_ID\", \"LINE_TEXT\", \"DOC_CURR_CODE\", \"LANGUAGE_CODE\", \"CHANGED_ON_DT\", \"TENANT_ID\", \"X_CUSTOM\", \"LAST_UPDATED_DT\", \"DATASOURCE_NUM_ID\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fiter",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Filter",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Filter]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " DATATABLE(\"Filter\", STRING,{ {\"New\"}, {\"Returning\"}, {\"1\"}})"
            }
          }
        ]
      },
      {
        "name": "Fact - Finance",
        "columns": [
          {
            "name": "POSTED_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "POSTED_ON_DT_WID"
          },
          {
            "name": "TRANSACTION_DT",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_DT"
          },
          {
            "name": "PAYMENT_DUE_DT",
            "dataType": "string",
            "sourceColumn": "PAYMENT_DUE_DT"
          },
          {
            "name": "ACCT_DOC_NUM",
            "dataType": "string",
            "sourceColumn": "ACCT_DOC_NUM"
          },
          {
            "name": "ACCT_DOC_ITEM",
            "dataType": "int64",
            "sourceColumn": "ACCT_DOC_ITEM"
          },
          {
            "name": "ACCT_DOC_TYPE",
            "dataType": "string",
            "sourceColumn": "ACCT_DOC_TYPE"
          },
          {
            "name": "DOC_QTY",
            "dataType": "double",
            "sourceColumn": "DOC_QTY"
          },
          {
            "name": "DOC_AMT",
            "dataType": "double",
            "sourceColumn": "DOC_AMT"
          },
          {
            "name": "LOC_AMT",
            "dataType": "double",
            "sourceColumn": "LOC_AMT"
          },
          {
            "name": "DOC_TAX_AMT",
            "dataType": "double",
            "sourceColumn": "DOC_TAX_AMT"
          },
          {
            "name": "LOC_TAX_AMT",
            "dataType": "double",
            "sourceColumn": "LOC_TAX_AMT"
          },
          {
            "name": "PAYMENT_AMT",
            "dataType": "double",
            "sourceColumn": "PAYMENT_AMT"
          },
          {
            "name": "DOC_STATUS",
            "dataType": "string",
            "sourceColumn": "DOC_STATUS"
          },
          {
            "name": "DOC_CURR_CODE",
            "dataType": "string",
            "sourceColumn": "DOC_CURR_CODE"
          },
          {
            "name": "LOC_CURR_CODE",
            "dataType": "string",
            "sourceColumn": "LOC_CURR_CODE"
          },
          {
            "name": "LOC_EXCHANGE_RATE",
            "dataType": "double",
            "sourceColumn": "LOC_EXCHANGE_RATE"
          },
          {
            "name": "EXCHANGE_RATE_TYPE",
            "dataType": "string",
            "sourceColumn": "EXCHANGE_RATE_TYPE"
          },
          {
            "name": "BASE_UOM_CODE",
            "dataType": "string",
            "sourceColumn": "BASE_UOM_CODE"
          },
          {
            "name": "DB_CR_IND",
            "dataType": "string",
            "sourceColumn": "DB_CR_IND"
          },
          {
            "name": "GL_ACCOUNT_TYPE",
            "dataType": "string",
            "sourceColumn": "GL_ACCOUNT_TYPE"
          },
          {
            "name": "OFFSETTING_ACCT_CODE",
            "dataType": "string",
            "sourceColumn": "OFFSETTING_ACCT_CODE"
          },
          {
            "name": "OFFSETTING_ACCT_TYPE",
            "dataType": "string",
            "sourceColumn": "OFFSETTING_ACCT_TYPE"
          },
          {
            "name": "CUSTOMER_SOLD_TO_CODE",
            "dataType": "string",
            "sourceColumn": "CUSTOMER_SOLD_TO_CODE"
          },
          {
            "name": "POSTING_TYPE",
            "dataType": "string",
            "sourceColumn": "POSTING_TYPE"
          },
          {
            "name": "TRANSACTION_TYPE",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_TYPE"
          },
          {
            "name": "PAYMENT_TERM_DAY",
            "dataType": "int64",
            "sourceColumn": "PAYMENT_TERM_DAY"
          },
          {
            "name": "REF_DOC_NUM",
            "dataType": "string",
            "sourceColumn": "REF_DOC_NUM"
          },
          {
            "name": "REF_PAYMENT_NUM",
            "dataType": "string",
            "sourceColumn": "REF_PAYMENT_NUM"
          },
          {
            "name": "TAX_CODE",
            "dataType": "string",
            "sourceColumn": "TAX_CODE"
          },
          {
            "name": "BANK_ID",
            "dataType": "string",
            "sourceColumn": "BANK_ID"
          },
          {
            "name": "ACTIVITY_TYPE_CODE",
            "dataType": "string",
            "sourceColumn": "ACTIVITY_TYPE_CODE"
          },
          {
            "name": "CLEARING_DOC_NUM",
            "dataType": "string",
            "sourceColumn": "CLEARING_DOC_NUM"
          },
          {
            "name": "CLEARING_DOC_ITEM",
            "dataType": "string",
            "sourceColumn": "CLEARING_DOC_ITEM"
          },
          {
            "name": "CLEARING_DOC_DT",
            "dataType": "string",
            "sourceColumn": "CLEARING_DOC_DT"
          },
          {
            "name": "SALES_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "SALES_ORDER_NUM"
          },
          {
            "name": "SALES_INVOICE_NUM",
            "dataType": "string",
            "sourceColumn": "SALES_INVOICE_NUM"
          },
          {
            "name": "PURCH_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_NUM"
          },
          {
            "name": "PURCH_ORDER_ITEM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_ITEM"
          },
          {
            "name": "ASSET_NUMBER",
            "dataType": "string",
            "sourceColumn": "ASSET_NUMBER"
          },
          {
            "name": "ASSET_SUBNUMBER",
            "dataType": "string",
            "sourceColumn": "ASSET_SUBNUMBER"
          },
          {
            "name": "ASSET_TRANSACTION_TYPE",
            "dataType": "string",
            "sourceColumn": "ASSET_TRANSACTION_TYPE"
          },
          {
            "name": "TRANSACTION_SOURCE",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_SOURCE"
          },
          {
            "name": "TRANSACTION_NUM",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_NUM"
          },
          {
            "name": "CANCELLED_TRX_NUM",
            "dataType": "string",
            "sourceColumn": "CANCELLED_TRX_NUM"
          },
          {
            "name": "DOC_HEADER_TEXT",
            "dataType": "string",
            "sourceColumn": "DOC_HEADER_TEXT"
          },
          {
            "name": "LINE_ITEM_TEXT",
            "dataType": "string",
            "sourceColumn": "LINE_ITEM_TEXT"
          },
          {
            "name": "CTRL_AREA_CODE",
            "dataType": "string",
            "sourceColumn": "CTRL_AREA_CODE"
          },
          {
            "name": "BASELINE_DT",
            "dataType": "string",
            "sourceColumn": "BASELINE_DT"
          },
          {
            "name": "CANCELLED_FLG",
            "dataType": "boolean",
            "sourceColumn": "CANCELLED_FLG"
          },
          {
            "name": "ASSIGNMENT_NUM",
            "dataType": "string",
            "sourceColumn": "ASSIGNMENT_NUM"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "string",
            "sourceColumn": "CREATED_ON_DT"
          },
          {
            "name": "PROGRAM_WID",
            "dataType": "int64",
            "sourceColumn": "PROGRAM_WID"
          },
          {
            "name": "GL_ACCOUNT_CODE",
            "dataType": "string",
            "sourceColumn": "GL_ACCOUNT_CODE"
          },
          {
            "name": "TRX_FISCAL_PERIOD",
            "dataType": "int64",
            "sourceColumn": "TRX_FISCAL_PERIOD"
          },
          {
            "name": "POSTED_ON_DT",
            "dataType": "string",
            "sourceColumn": "POSTED_ON_DT"
          },
          {
            "name": "PRODUCT_CODE",
            "dataType": "string",
            "sourceColumn": "PRODUCT_CODE"
          },
          {
            "name": "PROFIT_CENTER_CODE",
            "dataType": "string",
            "sourceColumn": "PROFIT_CENTER_CODE"
          },
          {
            "name": "COST_CENTER_CODE",
            "dataType": "string",
            "sourceColumn": "COST_CENTER_CODE"
          },
          {
            "name": "COST_ELEMENT_CODE",
            "dataType": "string",
            "sourceColumn": "COST_ELEMENT_CODE"
          },
          {
            "name": "CUSTOMER_CODE",
            "dataType": "string",
            "sourceColumn": "CUSTOMER_CODE"
          },
          {
            "name": "SUPPLIER_CODE",
            "dataType": "string",
            "sourceColumn": "SUPPLIER_CODE"
          },
          {
            "name": "PAYMENT_TERM_CODE",
            "dataType": "string",
            "sourceColumn": "PAYMENT_TERM_CODE"
          },
          {
            "name": "LEDGER_CODE",
            "dataType": "string",
            "sourceColumn": "LEDGER_CODE"
          },
          {
            "name": "COMPANY_CODE",
            "dataType": "string",
            "sourceColumn": "COMPANY_CODE"
          },
          {
            "name": "INV_ORG_CODE",
            "dataType": "string",
            "sourceColumn": "INV_ORG_CODE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_GL_POSTED_TRANSACTION_F = Source{[Schema=\"dbo\",Item=\"W_VW_GL_POSTED_TRANSACTION_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_VW_GL_POSTED_TRANSACTION_F,{\"CHANGED_ON_DT\", \"TENANT_ID\", \"X_CUSTOM\", \"LAST_UPDATED_DT\", \"SECONDARY_JE_FLG\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Gift Amt",
            "expression": [
              "CALCULATE(SUM([DOC_AMT]), ",
              "\t\t\tFILTER('Fact - Finance', LEFT('Fact - Finance'[GL_ACCOUNT_CODE],6) = \"005119\")",
              "\t\t\t)"
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Fact - Marketing Spend",
        "columns": [
          {
            "name": "PROGRAM_WID",
            "dataType": "int64",
            "sourceColumn": "PROGRAM_WID"
          },
          {
            "name": "Cost Group",
            "dataType": "string",
            "sourceColumn": "COST_GROUP"
          },
          {
            "name": "Item Cost",
            "dataType": "string",
            "sourceColumn": "ITEM_COST"
          },
          {
            "name": "COST",
            "dataType": "double",
            "sourceColumn": "COST"
          },
          {
            "name": "Program Category",
            "dataType": "string",
            "sourceColumn": "PROGRAM_CATEGORY"
          },
          {
            "name": "MKT.Year",
            "dataType": "string",
            "sourceColumn": "MKT.Year"
          },
          {
            "name": "CHARGEBY",
            "dataType": "string",
            "sourceColumn": "CHARGEBY"
          },
          {
            "name": "Date_key",
            "dataType": "int64",
            "sourceColumn": "Date_key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_SPEND_MKT = Source{[Schema=\"dbo\",Item=\"W_VW_SPEND_MKT\"]}[Data]",
                "in",
                "    dbo_W_VW_SPEND_MKT"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Sale Deals",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PROGRAM_CODE",
            "dataType": "string",
            "sourceColumn": "PROGRAM_CODE"
          },
          {
            "name": "PROGRAM_NAME",
            "dataType": "string",
            "sourceColumn": "PROGRAM_NAME"
          },
          {
            "name": "EFFECTIVE_FROM_DT",
            "dataType": "int64",
            "sourceColumn": "EFFECTIVE_FROM_DT"
          },
          {
            "name": "EFFECTIVE_TO_DT",
            "dataType": "int64",
            "sourceColumn": "EFFECTIVE_TO_DT"
          },
          {
            "name": "SD_Category",
            "dataType": "string",
            "sourceColumn": "SD_Category"
          },
          {
            "name": "SALEDEAL_ParentGrp",
            "dataType": "string",
            "sourceColumn": "SALEDEAL_ParentGrp"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_Z_SALE_PROGRAM_D = Source{[Schema=\"dbo\",Item=\"W_VW_SALE_PROGRAM_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_Z_SALE_PROGRAM_D,{\"DATASOURCE_NUM_ID\", \"PROGRAM_CATEGORY\", \"DATE_KEY\", \"APPLY_RANGE\", \"APPLY_PROD_GRP\", \"TIME\", \"YEAR\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Customer Payer",
        "columns": [
          {
            "name": "Customer Code",
            "dataType": "string",
            "sourceColumn": "Customer Code"
          },
          {
            "name": "Customer Name",
            "dataType": "string",
            "sourceColumn": "Customer Name"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT CUST_CODE, CUST_NAME, ROW_WID",
                "        from W_CUSTOMER_D",
                "        where DATASOURCE_NUM_ID = 1\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"CUST_CODE\", \"Customer Code\"}, {\"CUST_NAME\", \"Customer Name\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - All Sales Invoice Line",
        "columns": [
          {
            "name": "INVOICED_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "INVOICED_ON_DT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice Number",
            "dataType": "string",
            "sourceColumn": "Invoice Number"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "Qty"
          },
          {
            "name": "Net Amount",
            "dataType": "double",
            "sourceColumn": "Net Amount"
          },
          {
            "name": "Tax Amount",
            "dataType": "double",
            "sourceColumn": "Tax Amount"
          },
          {
            "name": "Discount Amount",
            "dataType": "double",
            "sourceColumn": "Discount Amount"
          },
          {
            "name": "Gross Weight",
            "dataType": "double",
            "sourceColumn": "Gross Weight"
          },
          {
            "name": "Net Weight",
            "dataType": "double",
            "sourceColumn": "Net Weight"
          },
          {
            "name": "Channel Code",
            "dataType": "string",
            "sourceColumn": "Channel Code"
          },
          {
            "name": "Invoice Type",
            "dataType": "string",
            "sourceColumn": "Invoice Type"
          },
          {
            "name": "Customer WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Customer WID"
          },
          {
            "name": "Q10",
            "dataType": "double",
            "sourceColumn": "Q10"
          },
          {
            "name": "Labour Cost",
            "dataType": "double",
            "sourceColumn": "Labour Cost"
          },
          {
            "name": "Gold Amount",
            "dataType": "double",
            "sourceColumn": "Gold Amount"
          },
          {
            "name": "Other Amount",
            "dataType": "double",
            "sourceColumn": "Other Amount"
          },
          {
            "name": "Type Plant",
            "dataType": "string",
            "sourceColumn": "Type Plant"
          },
          {
            "name": "Invoice_Hour",
            "dataType": "string",
            "sourceColumn": "Invoice_Hour"
          },
          {
            "name": "Group_age",
            "dataType": "string",
            "sourceColumn": "Group_age"
          },
          {
            "name": "PRODUCT_INVENTORY_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_INVENTORY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "HAOLAI_AMT",
            "dataType": "double",
            "sourceColumn": "HAOLAI_AMT"
          },
          {
            "name": "SALES_PERSON",
            "dataType": "string",
            "sourceColumn": "SALES_PERSON"
          },
          {
            "name": "DELIVERY_PRIORITY",
            "dataType": "string",
            "sourceColumn": "DELIVERY_PRIORITY"
          },
          {
            "name": "SHIPPING_CONDITION",
            "dataType": "string",
            "sourceColumn": "SHIPPING_CONDITION"
          },
          {
            "name": "PROGRAM_CODE",
            "dataType": "string",
            "sourceColumn": "PROGRAM_CODE"
          },
          {
            "name": "KOL_AMT",
            "dataType": "double",
            "sourceColumn": "KOL_AMT"
          },
          {
            "type": "calculated",
            "name": "Invoice Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": " DATE(left('Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID], 4), mid('Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID], 5,2), right('Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID], 2))",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "PROGRAM_NAME",
            "dataType": "string",
            "sourceColumn": "PROGRAM_NAME"
          },
          {
            "name": "DOC_CONDITION_NUM",
            "dataType": "string",
            "sourceColumn": "DOC_CONDITION_NUM"
          },
          {
            "name": "CUSTOMER_PAYER_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_PAYER_WID"
          },
          {
            "name": "UNIT_PRICE",
            "dataType": "double",
            "sourceColumn": "UNIT_PRICE"
          },
          {
            "name": "Customer Type (Month)",
            "dataType": "string",
            "sourceColumn": "Customer Type (Month)"
          },
          {
            "name": "Customer Type (Year)",
            "dataType": "string",
            "sourceColumn": "Customer Type (Year)"
          },
          {
            "name": "SALES_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "SALES_ORDER_NUM"
          },
          {
            "name": "Price Range",
            "dataType": "string",
            "sourceColumn": "Price Range"
          },
          {
            "name": "TRAFFIC",
            "dataType": "int64",
            "sourceColumn": "TRAFFIC",
            "summarizeBy": "none"
          },
          {
            "name": "Palexy_AGEID",
            "dataType": "int64",
            "sourceColumn": "Palexy_AGEID",
            "summarizeBy": "none"
          },
          {
            "name": "INVOICED_BASE_QTY",
            "dataType": "double",
            "sourceColumn": "INVOICED_BASE_QTY"
          },
          {
            "name": "Cost Amount",
            "dataType": "double",
            "sourceColumn": "Cost Amount"
          },
          {
            "name": "PAYMENT_METHOD_CODE",
            "dataType": "string",
            "sourceColumn": "PAYMENT_METHOD_CODE"
          },
          {
            "name": "PAYMENT_TERM_WID",
            "dataType": "int64",
            "sourceColumn": "PAYMENT_TERM_WID",
            "summarizeBy": "none"
          },
          {
            "name": "ConditionID",
            "dataType": "string",
            "sourceColumn": "ConditionID"
          },
          {
            "name": "SLOC_WID",
            "dataType": "int64",
            "sourceColumn": "SLOC_WID"
          },
          {
            "name": "Profit Amount",
            "dataType": "double",
            "sourceColumn": "Profit Amount"
          },
          {
            "name": "CUST_CARD_DESC",
            "dataType": "string",
            "sourceColumn": "CUST_CARD_DESC"
          },
          {
            "name": "MKT_CUSTOMER",
            "dataType": "string",
            "sourceColumn": "MKT_CUSTOMER"
          },
          {
            "name": "Lunar Date",
            "dataType": "dateTime",
            "sourceColumn": "LUNAR_DT"
          }
        ],
        "partitions": [
          {
            "name": "Partition 2021",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                "      ,[INVOICE_NUM]",
                "      ,[PRODUCT_WID]",
                "      ,[INVOICED_QTY]",
                "      ,[INVOICED_BASE_QTY]",
                "--      ,[GROSS_AMT]",
                "      ,[NET_AMT]",
                "      ,[UNIT_PRICE]",
                "      ,[COST_AMT]",
                "      ,[TAX_AMT]",
                "--      ,[EXCHANGE_RATE]",
                " --     ,[INVOICE_ITEM]",
                "      ,[DISCOUNT_AMT]",
                "--      ,[SALES_UOM_CODE]",
                "      ,[GROSS_WEIGHT]",
                "      ,[NET_WEIGHT]",
                "--      ,[WEIGHT_UOM]",
                "      ,[PAYMENT_METHOD_CODE]",
                "      ,[CHANNEL_CODE]",
                "      ,[SALES_ORDER_NUM]",
                "--      ,[SALES_ORDER_ITEM]",
                "      ,[INVOICE_TYPE]",
                "      ,[CUSTOMER_SOLD_TO_WID]",
                "--      ,[TAX_CODE]",
                "--      ,[CREATED_ON_DT]",
                "--      ,[BATCH]",
                " --     ,[ORIGINAL_VALUE]",
                "      ,[COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[INVOICE_Q10_QTY]",
                "--      ,[PROD_CAT_WID]",
                "      ,[LABOUR_COST]",
                "      ,[GOLD_AMT]",
                "      ,[ORTHER_AMT]",
                "      ,[PRICE_RANGE]",
                "      ,[Invoice_Hour]",
                "--      ,[Age_trans]",
                "      ,[TYPE_PLANT]",
                "      ,[CUST_TYPE_MONTH]",
                "      ,[CUST_TYPE_YEAR]",
                "      ,[SALES_PERSON]",
                "      ,[DOC_CONDITION_NUM]",
                "--      ,[CUST_TYPE_COMPANY]",
                "      ,[PAYMENT_TERM_WID]",
                "      ,[Group_age]",
                "      ,[PRODUCT_INVENTORY_WID]",
                "      ,[HAOLAI_AMT]",
                "      ,[DELIVERY_PRIORITY]",
                "      ,[SHIPPING_CONDITION]",
                "      ,[PROGRAM_CODE]",
                "      ,[PAYMENT_TERMS_CODE]",
                "      ,[KOL_AMT]",
                "      ,[PROGRAM_NAME]",
                "      ,CUSTOMER_PAYER_WID",
                "      ,TRAFFIC",
                "      ,Palexy_AGEID",
                "      ,STORAGE_LOC_CODE",
                "      ,ConditionID",
                "      ,[SLOC_WID]",
                "      ,[PROFIT_AMT]",
                ",CUST_CARD_DESC",
                ",MKT_CUSTOMER",
                ",LUNAR_DT",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                "  WHERE [INVOICED_ON_DT_WID] >= 20220101\") ,",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                  "      ,[INVOICE_NUM]",
                  "      ,[PRODUCT_WID]",
                  "      ,[INVOICED_QTY]",
                  "      ,[INVOICED_BASE_QTY]",
                  "--      ,[GROSS_AMT]",
                  "      ,[NET_AMT]",
                  "      ,[UNIT_PRICE]",
                  "      ,[COST_AMT]",
                  "      ,[TAX_AMT]",
                  "--      ,[EXCHANGE_RATE]",
                  " --     ,[INVOICE_ITEM]",
                  "      ,[DISCOUNT_AMT]",
                  "--      ,[SALES_UOM_CODE]",
                  "      ,[GROSS_WEIGHT]",
                  "      ,[NET_WEIGHT]",
                  "--      ,[WEIGHT_UOM]",
                  "      ,[PAYMENT_METHOD_CODE]",
                  "      ,[CHANNEL_CODE]",
                  "      ,[SALES_ORDER_NUM]",
                  "--      ,[SALES_ORDER_ITEM]",
                  "      ,[INVOICE_TYPE]",
                  "      ,[CUSTOMER_SOLD_TO_WID]",
                  "--      ,[TAX_CODE]",
                  "--      ,[CREATED_ON_DT]",
                  "--      ,[BATCH]",
                  " --     ,[ORIGINAL_VALUE]",
                  "      ,[COMPANY_WID]",
                  "      ,[PLANT_WID]",
                  "      ,[INVOICE_Q10_QTY]",
                  "--      ,[PROD_CAT_WID]",
                  "      ,[LABOUR_COST]",
                  "      ,[GOLD_AMT]",
                  "      ,[ORTHER_AMT]",
                  "      ,[PRICE_RANGE]",
                  "      ,[Invoice_Hour]",
                  "--      ,[Age_trans]",
                  "      ,[TYPE_PLANT]",
                  "      ,[CUST_TYPE_MONTH]",
                  "      ,[CUST_TYPE_YEAR]",
                  "      ,[SALES_PERSON]",
                  "      ,[DOC_CONDITION_NUM]",
                  "--      ,[CUST_TYPE_COMPANY]",
                  "      ,[PAYMENT_TERM_WID]",
                  "      ,[Group_age]",
                  "      ,[PRODUCT_INVENTORY_WID]",
                  "      ,[HAOLAI_AMT]",
                  "      ,[DELIVERY_PRIORITY]",
                  "      ,[SHIPPING_CONDITION]",
                  "      ,[PROGRAM_CODE]",
                  "      ,[PAYMENT_TERMS_CODE]",
                  "      ,[KOL_AMT]",
                  "      ,[PROGRAM_NAME]",
                  "      ,CUSTOMER_PAYER_WID",
                  "      ,TRAFFIC",
                  "      ,Palexy_AGEID",
                  "      ,STORAGE_LOC_CODE",
                  "      ,ConditionID",
                  "      ,[SLOC_WID]",
                  "      ,[PROFIT_AMT]",
                  ",CUST_CARD_DESC",
                  ",MKT_CUSTOMER",
                  ",LUNAR_DT",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                  "  WHERE [INVOICED_ON_DT_WID] >= 20220101\") ,",
                  "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                  "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                  "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                  "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2020",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                "      ,[INVOICE_NUM]",
                "      ,[PRODUCT_WID]",
                "      ,[INVOICED_QTY]",
                "      ,[INVOICED_BASE_QTY]",
                "--      ,[GROSS_AMT]",
                "      ,[NET_AMT]",
                "      ,[UNIT_PRICE]",
                "      ,[COST_AMT]",
                "      ,[TAX_AMT]",
                "--      ,[EXCHANGE_RATE]",
                " --     ,[INVOICE_ITEM]",
                "      ,[DISCOUNT_AMT]",
                "--      ,[SALES_UOM_CODE]",
                "      ,[GROSS_WEIGHT]",
                "      ,[NET_WEIGHT]",
                "--      ,[WEIGHT_UOM]",
                "      ,[PAYMENT_METHOD_CODE]",
                "      ,[CHANNEL_CODE]",
                "      ,[SALES_ORDER_NUM]",
                "--      ,[SALES_ORDER_ITEM]",
                "      ,[INVOICE_TYPE]",
                "      ,[CUSTOMER_SOLD_TO_WID]",
                "--      ,[TAX_CODE]",
                "--      ,[CREATED_ON_DT]",
                "--      ,[BATCH]",
                " --     ,[ORIGINAL_VALUE]",
                "      ,[COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[INVOICE_Q10_QTY]",
                "--      ,[PROD_CAT_WID]",
                "      ,[LABOUR_COST]",
                "      ,[GOLD_AMT]",
                "      ,[ORTHER_AMT]",
                "      ,[PRICE_RANGE]",
                "      ,[Invoice_Hour]",
                "--      ,[Age_trans]",
                "      ,[TYPE_PLANT]",
                "      ,[CUST_TYPE_MONTH]",
                "      ,[CUST_TYPE_YEAR]",
                "      ,[SALES_PERSON]",
                "      ,[DOC_CONDITION_NUM]",
                "--      ,[CUST_TYPE_COMPANY]",
                "      ,[PAYMENT_TERM_WID]",
                "      ,[Group_age]",
                "      ,[PRODUCT_INVENTORY_WID]",
                "      ,[HAOLAI_AMT]",
                "      ,[DELIVERY_PRIORITY]",
                "      ,[SHIPPING_CONDITION]",
                "      ,[PROGRAM_CODE]",
                "      ,[PAYMENT_TERMS_CODE]",
                "      ,[KOL_AMT]",
                "      ,[PROGRAM_NAME]",
                "      ,CUSTOMER_PAYER_WID",
                "      ,TRAFFIC",
                "      ,Palexy_AGEID",
                "      ,STORAGE_LOC_CODE",
                "      ,ConditionID",
                "      ,[SLOC_WID]",
                "      ,[PROFIT_AMT]",
                ",CUST_CARD_DESC",
                ",MKT_CUSTOMER",
                ",LUNAR_DT",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                "  WHERE [INVOICED_ON_DT_WID] < 20220101 and [INVOICED_ON_DT_WID] >= 20200101\") ,",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                  "      ,[INVOICE_NUM]",
                  "      ,[PRODUCT_WID]",
                  "      ,[INVOICED_QTY]",
                  "      ,[INVOICED_BASE_QTY]",
                  "--      ,[GROSS_AMT]",
                  "      ,[NET_AMT]",
                  "      ,[UNIT_PRICE]",
                  "      ,[COST_AMT]",
                  "      ,[TAX_AMT]",
                  "--      ,[EXCHANGE_RATE]",
                  " --     ,[INVOICE_ITEM]",
                  "      ,[DISCOUNT_AMT]",
                  "--      ,[SALES_UOM_CODE]",
                  "      ,[GROSS_WEIGHT]",
                  "      ,[NET_WEIGHT]",
                  "--      ,[WEIGHT_UOM]",
                  "      ,[PAYMENT_METHOD_CODE]",
                  "      ,[CHANNEL_CODE]",
                  "      ,[SALES_ORDER_NUM]",
                  "--      ,[SALES_ORDER_ITEM]",
                  "      ,[INVOICE_TYPE]",
                  "      ,[CUSTOMER_SOLD_TO_WID]",
                  "--      ,[TAX_CODE]",
                  "--      ,[CREATED_ON_DT]",
                  "--      ,[BATCH]",
                  " --     ,[ORIGINAL_VALUE]",
                  "      ,[COMPANY_WID]",
                  "      ,[PLANT_WID]",
                  "      ,[INVOICE_Q10_QTY]",
                  "--      ,[PROD_CAT_WID]",
                  "      ,[LABOUR_COST]",
                  "      ,[GOLD_AMT]",
                  "      ,[ORTHER_AMT]",
                  "      ,[PRICE_RANGE]",
                  "      ,[Invoice_Hour]",
                  "--      ,[Age_trans]",
                  "      ,[TYPE_PLANT]",
                  "      ,[CUST_TYPE_MONTH]",
                  "      ,[CUST_TYPE_YEAR]",
                  "      ,[SALES_PERSON]",
                  "      ,[DOC_CONDITION_NUM]",
                  "--      ,[CUST_TYPE_COMPANY]",
                  "      ,[PAYMENT_TERM_WID]",
                  "      ,[Group_age]",
                  "      ,[PRODUCT_INVENTORY_WID]",
                  "      ,[HAOLAI_AMT]",
                  "      ,[DELIVERY_PRIORITY]",
                  "      ,[SHIPPING_CONDITION]",
                  "      ,[PROGRAM_CODE]",
                  "      ,[PAYMENT_TERMS_CODE]",
                  "      ,[KOL_AMT]",
                  "      ,[PROGRAM_NAME]",
                  "      ,CUSTOMER_PAYER_WID",
                  "      ,TRAFFIC",
                  "      ,Palexy_AGEID",
                  "      ,STORAGE_LOC_CODE",
                  "      ,ConditionID",
                  "      ,[SLOC_WID]",
                  "      ,[PROFIT_AMT]",
                  ",CUST_CARD_DESC",
                  ",MKT_CUSTOMER",
                  ",LUNAR_DT",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                  "  WHERE [INVOICED_ON_DT_WID] < 20220101 and [INVOICED_ON_DT_WID] >= 20200101\") ,",
                  "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                  "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                  "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                  "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2019",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                "      ,[INVOICE_NUM]",
                "      ,[PRODUCT_WID]",
                "      ,[INVOICED_QTY]",
                "      ,[INVOICED_BASE_QTY]",
                "--      ,[GROSS_AMT]",
                "      ,[NET_AMT]",
                "      ,[UNIT_PRICE]",
                "      ,[COST_AMT]",
                "      ,[TAX_AMT]",
                "--      ,[EXCHANGE_RATE]",
                " --     ,[INVOICE_ITEM]",
                "      ,[DISCOUNT_AMT]",
                "--      ,[SALES_UOM_CODE]",
                "      ,[GROSS_WEIGHT]",
                "      ,[NET_WEIGHT]",
                "--      ,[WEIGHT_UOM]",
                "      ,[PAYMENT_METHOD_CODE]",
                "      ,[CHANNEL_CODE]",
                "      ,[SALES_ORDER_NUM]",
                "--      ,[SALES_ORDER_ITEM]",
                "      ,[INVOICE_TYPE]",
                "      ,[CUSTOMER_SOLD_TO_WID]",
                "--      ,[TAX_CODE]",
                "--      ,[CREATED_ON_DT]",
                "--      ,[BATCH]",
                " --     ,[ORIGINAL_VALUE]",
                "      ,[COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[INVOICE_Q10_QTY]",
                "--      ,[PROD_CAT_WID]",
                "      ,[LABOUR_COST]",
                "      ,[GOLD_AMT]",
                "      ,[ORTHER_AMT]",
                "      ,[PRICE_RANGE]",
                "      ,[Invoice_Hour]",
                "--      ,[Age_trans]",
                "      ,[TYPE_PLANT]",
                "      ,[CUST_TYPE_MONTH]",
                "      ,[CUST_TYPE_YEAR]",
                "      ,[SALES_PERSON]",
                "      ,[DOC_CONDITION_NUM]",
                "--      ,[CUST_TYPE_COMPANY]",
                "      ,[PAYMENT_TERM_WID]",
                "      ,[Group_age]",
                "      ,[PRODUCT_INVENTORY_WID]",
                "      ,[HAOLAI_AMT]",
                "      ,[DELIVERY_PRIORITY]",
                "      ,[SHIPPING_CONDITION]",
                "      ,[PROGRAM_CODE]",
                "      ,[PAYMENT_TERMS_CODE]",
                "      ,[KOL_AMT]",
                "      ,[PROGRAM_NAME]",
                "      ,CUSTOMER_PAYER_WID",
                "      ,TRAFFIC",
                "      ,Palexy_AGEID",
                "      ,STORAGE_LOC_CODE",
                "      ,ConditionID",
                "      ,[SLOC_WID]",
                "      ,[PROFIT_AMT]",
                ",CUST_CARD_DESC",
                ",MKT_CUSTOMER",
                ",LUNAR_DT",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                "  WHERE [INVOICED_ON_DT_WID] >= 20190101 and [INVOICED_ON_DT_WID] < 20200101\") ,",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                  "      ,[INVOICE_NUM]",
                  "      ,[PRODUCT_WID]",
                  "      ,[INVOICED_QTY]",
                  "      ,[INVOICED_BASE_QTY]",
                  "--      ,[GROSS_AMT]",
                  "      ,[NET_AMT]",
                  "      ,[UNIT_PRICE]",
                  "      ,[COST_AMT]",
                  "      ,[TAX_AMT]",
                  "--      ,[EXCHANGE_RATE]",
                  " --     ,[INVOICE_ITEM]",
                  "      ,[DISCOUNT_AMT]",
                  "--      ,[SALES_UOM_CODE]",
                  "      ,[GROSS_WEIGHT]",
                  "      ,[NET_WEIGHT]",
                  "--      ,[WEIGHT_UOM]",
                  "      ,[PAYMENT_METHOD_CODE]",
                  "      ,[CHANNEL_CODE]",
                  "      ,[SALES_ORDER_NUM]",
                  "--      ,[SALES_ORDER_ITEM]",
                  "      ,[INVOICE_TYPE]",
                  "      ,[CUSTOMER_SOLD_TO_WID]",
                  "--      ,[TAX_CODE]",
                  "--      ,[CREATED_ON_DT]",
                  "--      ,[BATCH]",
                  " --     ,[ORIGINAL_VALUE]",
                  "      ,[COMPANY_WID]",
                  "      ,[PLANT_WID]",
                  "      ,[INVOICE_Q10_QTY]",
                  "--      ,[PROD_CAT_WID]",
                  "      ,[LABOUR_COST]",
                  "      ,[GOLD_AMT]",
                  "      ,[ORTHER_AMT]",
                  "      ,[PRICE_RANGE]",
                  "      ,[Invoice_Hour]",
                  "--      ,[Age_trans]",
                  "      ,[TYPE_PLANT]",
                  "      ,[CUST_TYPE_MONTH]",
                  "      ,[CUST_TYPE_YEAR]",
                  "      ,[SALES_PERSON]",
                  "      ,[DOC_CONDITION_NUM]",
                  "--      ,[CUST_TYPE_COMPANY]",
                  "      ,[PAYMENT_TERM_WID]",
                  "      ,[Group_age]",
                  "      ,[PRODUCT_INVENTORY_WID]",
                  "      ,[HAOLAI_AMT]",
                  "      ,[DELIVERY_PRIORITY]",
                  "      ,[SHIPPING_CONDITION]",
                  "      ,[PROGRAM_CODE]",
                  "      ,[PAYMENT_TERMS_CODE]",
                  "      ,[KOL_AMT]",
                  "      ,[PROGRAM_NAME]",
                  "      ,CUSTOMER_PAYER_WID",
                  "      ,TRAFFIC",
                  "      ,Palexy_AGEID",
                  "      ,STORAGE_LOC_CODE",
                  "      ,ConditionID",
                  "      ,[SLOC_WID]",
                  "      ,[PROFIT_AMT]",
                  ",CUST_CARD_DESC",
                  ",MKT_CUSTOMER",
                  ",LUNAR_DT",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                  "  WHERE [INVOICED_ON_DT_WID] >= 20190101 and [INVOICED_ON_DT_WID] < 20200101\") ,",
                  "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                  "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                  "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                  "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\"}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition BF 2019",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                "      ,[INVOICE_NUM]",
                "      ,[PRODUCT_WID]",
                "      ,[INVOICED_QTY]",
                "      ,[INVOICED_BASE_QTY]",
                "--      ,[GROSS_AMT]",
                "      ,[NET_AMT]",
                "      ,[UNIT_PRICE]",
                "      ,[COST_AMT]",
                "      ,[TAX_AMT]",
                "--      ,[EXCHANGE_RATE]",
                " --     ,[INVOICE_ITEM]",
                "      ,[DISCOUNT_AMT]",
                "--      ,[SALES_UOM_CODE]",
                "      ,[GROSS_WEIGHT]",
                "      ,[NET_WEIGHT]",
                "--      ,[WEIGHT_UOM]",
                "      ,[PAYMENT_METHOD_CODE]",
                "      ,[CHANNEL_CODE]",
                "      ,[SALES_ORDER_NUM]",
                "--      ,[SALES_ORDER_ITEM]",
                "      ,[INVOICE_TYPE]",
                "      ,[CUSTOMER_SOLD_TO_WID]",
                "--      ,[TAX_CODE]",
                "--      ,[CREATED_ON_DT]",
                "--      ,[BATCH]",
                " --     ,[ORIGINAL_VALUE]",
                "      ,[COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[INVOICE_Q10_QTY]",
                "--      ,[PROD_CAT_WID]",
                "      ,[LABOUR_COST]",
                "      ,[GOLD_AMT]",
                "      ,[ORTHER_AMT]",
                "      ,[PRICE_RANGE]",
                "      ,[Invoice_Hour]",
                "--      ,[Age_trans]",
                "      ,[TYPE_PLANT]",
                "      ,[CUST_TYPE_MONTH]",
                "      ,[CUST_TYPE_YEAR]",
                "      ,[SALES_PERSON]",
                "      ,[DOC_CONDITION_NUM]",
                "--      ,[CUST_TYPE_COMPANY]",
                "      ,[PAYMENT_TERM_WID]",
                "      ,[Group_age]",
                "      ,[PRODUCT_INVENTORY_WID]",
                "      ,[HAOLAI_AMT]",
                "      ,[DELIVERY_PRIORITY]",
                "      ,[SHIPPING_CONDITION]",
                "      ,[PROGRAM_CODE]",
                "      ,[PAYMENT_TERMS_CODE]",
                "      ,[KOL_AMT]",
                "      ,[PROGRAM_NAME]",
                "      ,CUSTOMER_PAYER_WID",
                "      ,TRAFFIC",
                "      ,Palexy_AGEID",
                "      ,STORAGE_LOC_CODE",
                "      ,ConditionID",
                "      ,[SLOC_WID]",
                "      ,[PROFIT_AMT]",
                ",CUST_CARD_DESC",
                ",MKT_CUSTOMER",
                ",LUNAR_DT",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                "  WHERE [INVOICED_ON_DT_WID] < 20190101\") ,",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\" }}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [INVOICED_ON_DT_WID]",
                  "      ,[INVOICE_NUM]",
                  "      ,[PRODUCT_WID]",
                  "      ,[INVOICED_QTY]",
                  "      ,[INVOICED_BASE_QTY]",
                  "--      ,[GROSS_AMT]",
                  "      ,[NET_AMT]",
                  "      ,[UNIT_PRICE]",
                  "      ,[COST_AMT]",
                  "      ,[TAX_AMT]",
                  "--      ,[EXCHANGE_RATE]",
                  " --     ,[INVOICE_ITEM]",
                  "      ,[DISCOUNT_AMT]",
                  "--      ,[SALES_UOM_CODE]",
                  "      ,[GROSS_WEIGHT]",
                  "      ,[NET_WEIGHT]",
                  "--      ,[WEIGHT_UOM]",
                  "      ,[PAYMENT_METHOD_CODE]",
                  "      ,[CHANNEL_CODE]",
                  "      ,[SALES_ORDER_NUM]",
                  "--      ,[SALES_ORDER_ITEM]",
                  "      ,[INVOICE_TYPE]",
                  "      ,[CUSTOMER_SOLD_TO_WID]",
                  "--      ,[TAX_CODE]",
                  "--      ,[CREATED_ON_DT]",
                  "--      ,[BATCH]",
                  " --     ,[ORIGINAL_VALUE]",
                  "      ,[COMPANY_WID]",
                  "      ,[PLANT_WID]",
                  "      ,[INVOICE_Q10_QTY]",
                  "--      ,[PROD_CAT_WID]",
                  "      ,[LABOUR_COST]",
                  "      ,[GOLD_AMT]",
                  "      ,[ORTHER_AMT]",
                  "      ,[PRICE_RANGE]",
                  "      ,[Invoice_Hour]",
                  "--      ,[Age_trans]",
                  "      ,[TYPE_PLANT]",
                  "      ,[CUST_TYPE_MONTH]",
                  "      ,[CUST_TYPE_YEAR]",
                  "      ,[SALES_PERSON]",
                  "      ,[DOC_CONDITION_NUM]",
                  "--      ,[CUST_TYPE_COMPANY]",
                  "      ,[PAYMENT_TERM_WID]",
                  "      ,[Group_age]",
                  "      ,[PRODUCT_INVENTORY_WID]",
                  "      ,[HAOLAI_AMT]",
                  "      ,[DELIVERY_PRIORITY]",
                  "      ,[SHIPPING_CONDITION]",
                  "      ,[PROGRAM_CODE]",
                  "      ,[PAYMENT_TERMS_CODE]",
                  "      ,[KOL_AMT]",
                  "      ,[PROGRAM_NAME]",
                  "      ,CUSTOMER_PAYER_WID",
                  "      ,TRAFFIC",
                  "      ,Palexy_AGEID",
                  "      ,STORAGE_LOC_CODE",
                  "      ,ConditionID",
                  "      ,[SLOC_WID]",
                  "      ,[PROFIT_AMT]",
                  ",CUST_CARD_DESC",
                  ",MKT_CUSTOMER",
                  ",LUNAR_DT",
                  "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_INVOICE_LINE_F] ",
                  "  WHERE [INVOICED_ON_DT_WID] < 20190101\") ,",
                  "    #\"Renamed Columns\" = Table.RenameColumns(#\"Source\",{{\"INVOICE_NUM\", \"Invoice Number\"}, {\"INVOICED_QTY\", \"Invoice Quantity\"}, {\"NET_AMT\", \"Net Amount\"}, {\"COST_AMT\", \"Cost Amount\"}, {\"TAX_AMT\", \"Tax Amount\"}, {\"DISCOUNT_AMT\", \"Discount Amount\"},  {\"GROSS_WEIGHT\", \"Gross Weight\"}, {\"NET_WEIGHT\", \"Net Weight\"},   {\"CHANNEL_CODE\", \"Channel Code\"},   {\"INVOICE_TYPE\", \"Invoice Type\"},   {\"LABOUR_COST\", \"Labour Cost\"}, {\"ORTHER_AMT\", \"Other Amount\"}, {\"GOLD_AMT\", \"Gold Amount\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{{\"PRICE_RANGE\", \"Price Range\"}, {\"TYPE_PLANT\", \"Type Plant\"}, {\"CUST_TYPE_MONTH\", \"Customer Type (Month)\"}, {\"CUST_TYPE_YEAR\", \"Customer Type (Year)\"}}),",
                  "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"CUSTOMER_SOLD_TO_WID\", \"Customer WID\"}}),",
                  "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Renamed Columns2\",{{\"INVOICE_Q10_QTY\", \"Q10\"}, {\"Invoice Quantity\", \"Qty\"}}),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns3\",null,\"#Not assign\",Replacer.ReplaceValue,{\"PROGRAM_CODE\"}),",
                  "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Replaced Value\",{{\"PROFIT_AMT\", \"Profit Amount\" }}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns4\", each ([Invoice Type] <> \"ZS2\" and [Invoice Type] <> \"ZRE\"))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": ". All Net Amt",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Net Amount]), FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZS2\" && 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZPI\"))",
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt (LM)",
            "expression": " CALCULATE([. All Net Amt], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt (LY)",
            "expression": " CALCULATE([. All Net Amt],  DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". Promotion_NetAmt",
            "expression": [
              " CALCULATE([. All Net Amt], 'Fact - All Sales Invoice Line'[Channel Code] <> \"60\", GROUPBY('Dim - Program', 'Dim - Program'[ROW_WID]),",
              "                            filter('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] >= min('Dim - Program'[EFFECTIVE_FROM_DT]) ",
              "                                && 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] <= Max('Dim - Program'[EFFECTIVE_TO_DT])))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Promotion_NetAmt LY",
            "expression": " CALCULATE([. Promotion_NetAmt], PREVIOUSYEAR('Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": "# All Active Plant",
            "expression": " DISTINCTCOUNT('Fact - All Sales Invoice Line'[PLANT_WID])",
            "formatString": "#,0"
          },
          {
            "name": "# All Cust Transaction (PC)",
            "expression": " COUNTROWS(GROUPBY('Fact - ALL Sales Invoice Line', 'Fact - All Sales Invoice Line'[PLANT_WID], 'Fact - All Sales Invoice Line'[Customer WID], 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID]))",
            "formatString": "#,0"
          },
          {
            "name": "# All Cust Transaction (PC) (LM)",
            "expression": " CALCULATE([# All Cust Transaction (PC)],DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": "# All Cust Transaction (PC) (LY)",
            "expression": " CALCULATE([# All Cust Transaction (PC)],  DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": "# All Customer",
            "expression": [
              " CALCULATE(DISTINCTCOUNT('Dim - Customer'[Customer Parent Code]), RELATEDTABLE('Fact - All Sales Invoice Line'), ALL('Dim - Time'),  FILTER('Fact - All Sales Invoice Line', NOT 'Fact - All Sales Invoice Line'[Invoice Type] in {\"ZRE\", \"ZS2\", \"ZPI\"}),",
              "FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\",\"Payer\" }))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# All Customer (LM)",
            "expression": " CALCULATE([# All Customer], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": "# All Customer (LY)",
            "expression": " CALCULATE([# All Customer],  DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": "# Invoice",
            "expression": " DISTINCTCOUNT('Fact - All Sales Invoice Line'[Invoice Number])",
            "formatString": "#,0"
          },
          {
            "name": "# Promotion_Trx (PC)",
            "expression": [
              " CALCULATE(COUNTROWS(GROUPBY('Fact - ALL Sales Invoice Line', 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID], 'Fact - All Sales Invoice Line'[Customer WID])), ",
              "                            filter('Fact - ALL Sales Invoice Line', 'Fact - ALL Sales Invoice Line'[INVOICED_ON_DT_WID] >= min('Dim - Program'[EFFECTIVE_FROM_DT]) ",
              "                                && 'Fact - ALL Sales Invoice Line'[INVOICED_ON_DT_WID] <= Max('Dim - Program'[EFFECTIVE_TO_DT])))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# All Qty (LM)",
            "expression": " CALCULATE([# All Qty], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": "# All Qty (LY)",
            "expression": " CALCULATE([# All Qty],  DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt (all Cust)",
            "expression": " CALCULATE([. All Net Amt], all('Dim - Product'[RPT_Product Group 4 Name]))",
            "formatString": "#,0"
          },
          {
            "name": "AVG Amt/Trx",
            "expression": " [. All Net Amt] / [# All Cust Transaction (PC)]",
            "formatString": "#,0"
          },
          {
            "name": "AVG Amt/Trx (LM)",
            "expression": " CALCULATE([. All Net Amt (LM)]/[# All Cust Transaction (PC) (LM)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG Amt/Trx (LY)",
            "expression": " CALCULATE([. All Net Amt (LY)]/[# All Cust Transaction (PC) (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG Qty/Trx",
            "expression": " [# All Qty] / [# All Cust Transaction (PC)]",
            "formatString": "#,0"
          },
          {
            "name": "AVG Qty/Trx (LM)",
            "expression": " CALCULATE([# All Qty (LM)]/[# All Customer (LM)])",
            "formatString": "#,0"
          },
          {
            "name": "AVG Qty/Trx (LY)",
            "expression": " CALCULATE([# All Qty (LY)]/[# All Cust Transaction (PC) (LY)])",
            "formatString": "#,0"
          },
          {
            "name": "# Cust lifecycle",
            "expression": [
              " ",
              "",
              "var acquisitionMonth = SELECTEDVALUE('Dim - Time'[!Order Quater Key])",
              "var selectedFutureMonth = SELECTEDVALUE('Dim - Future Quater'[Value])",
              "",
              "var currentCustomers = VALUES('Fact - All Sales Invoice Line'[Customer WID])",
              "var pastCustomers = CALCULATETABLE(VALUES('Fact - All Sales Invoice Line'[Customer WID]), ",
              "    ALL('Dim - Time'[Quater],'Dim - Time'[! Quater Key])",
              "    ,'Dim - Time'[!Order Quater Key]<acquisitionMonth)",
              "var newCustomers = EXCEPT(currentCustomers,pastCustomers)",
              "",
              "var customersFuturePeriods = CALCULATETABLE(VALUES('Fact - All Sales Invoice Line'[Customer WID]),",
              "ALL('Dim - Time'[Quater],'Dim - Time'[! Quater Key])",
              "    ,'Dim - Time'[!Order Quater Key] = acquisitionMonth+selectedFutureMonth )",
              "var newCustomersBuyingInFuturePeriods = INTERSECT(newCustomers, customersFuturePeriods)",
              "",
              "RETURN COUNTROWS(newCustomersBuyingInFuturePeriods)"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt Return",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Net Amount])*-1, FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] = \"ZRE\" ||'Fact - All Sales Invoice Line'[Invoice Type] = \"ZS2\"))",
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt Return (LM)",
            "expression": " CALCULATE([. All Net Amt Return],DATEADD('Dim - Time'[Date],-1,MONTH))",
            "formatString": "#,0"
          },
          {
            "name": ". All Net Amt Return (LY)",
            "expression": " CALCULATE([. All Net Amt Return], DATEADD('Dim - Time'[Date],-1,YEAR))",
            "formatString": "#,0"
          },
          {
            "name": "# All QTy Return",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Qty])*-1, FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] = \"ZRE\" ||'Fact - All Sales Invoice Line'[Invoice Type] = \"ZS2\"))"
          },
          {
            "name": "# All Qty Return (LM)",
            "expression": " CALCULATE([# All QTy Return], DATEADD('Dim - Time'[Date], -1, MONTH))"
          },
          {
            "name": "# All Qty return (LY)",
            "expression": " CALCULATE([# All QTy Return],  DATEADD('Dim - Time'[Date], -1, YEAR))"
          },
          {
            "name": ". All Labor Cost",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Labour Cost]), FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZS2\"))",
            "formatString": "#,0"
          },
          {
            "name": ". All Labor Cost (LM)",
            "expression": " CALCULATE([. All Labor Cost], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": ". All Labor Cost (LY)",
            "expression": " CALCULATE([. All Labor Cost], DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". All HaoLai Amt",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[HAOLAI_AMT]),  FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZS2\"))",
            "formatString": "#,0"
          },
          {
            "name": ". All HaoLai Amt (LY)",
            "expression": " CALCULATE([. All HaoLai Amt], DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". All HaoLai Amt (LM)",
            "expression": " CALCULATE([. All HaoLai Amt], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": "Q_cust_new",
            "expression": [
              " ",
              "        var firstOrderDate = [Date New Customer_q]",
              "        var minFilterDate = MIN('Dim - Time'[Date])",
              "        var MaxfilterDate = max('Dim - Time'[Date])",
              "        var new = and(firstOrderDate>=minFilterDate, firstOrderDate<= MaxfilterDate && [. All Net Amt])",
              "        var Returning = AND(not(firstOrderDate>=minFilterDate), firstOrderDate<= MaxfilterDate) && [. All Net Amt]",
              "        var result = SWITCH(TRUE(), new = TRUE(), \"new\", Returning = TRUE(), \"returning\")",
              "return result"
            ]
          },
          {
            "name": "Date New Customer_q",
            "expression": [
              " ",
              "CALCULATE (",
              "    MIN ( 'Fact - All Sales Invoice Line'[Invoice Date] ),",
              "    ALLEXCEPT(",
              "        'Fact - All Sales Invoice Line',",
              "        'Fact - All Sales Invoice Line'[Customer WID], 'Dim - Customer',",
              "        'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Plant', 'Dim - Product'",
              "    )",
              ")"
            ]
          },
          {
            "name": ". Net Weight",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Net Weight]))"
          },
          {
            "name": "# All Qty",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Qty]),FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[INVOICE TYPE] <> \"ZS2\" && 'Fact - All Sales Invoice Line'[INVOICE TYPE]<> \"ZPI\"))",
            "formatString": "#,0"
          },
          {
            "name": "% Net_Amt_LY",
            "expression": "if(ISBLANK([. All Net Amt (LY)]), 1, ([. All Net Amt]/[. All Net Amt (LY)]-1 ))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". Net Amt (YTD)",
            "expression": " CALCULATE([. All Net Amt],DATESYTD('Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amt LY (YTD)",
            "expression": " CALCULATE([. All Net Amt (LY)], DATESYTD('Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": "% Net_Amt_FC_FY",
            "expression": [
              " ",
              "DIVIDE (",
              "[. Net Amt (YTD)], if(ISBLANK([. Net Amt (FC) (Full Year)] ) = TRUE, 0, [. Net Amt (FC) (Full Year)]), 0)-1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Net_Amt_FC",
            "expression": [
              " ",
              "DIVIDE",
              "([. All Net Amt] , if(ISBLANK([. Net_Amt_FC] ) = TRUE, 0, [. Net_Amt_FC]),0)-1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Net Amt FC (YTD)",
            "expression": " CALCULATE(([. Net Amt (YTD)] / [. Net Amt FC (YTD)])-1)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". Net Amt FC (YTD)",
            "expression": " CALCULATE([. Net_Amt_FC], DATESYTD('Dim - Time'[Date]))"
          },
          {
            "name": "% All customer",
            "expression": " ([# All Customer]/[# All Customer (LY)])-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". All Gold Amt",
            "expression": " CALCULATE(sum('Fact - All Sales Invoice Line'[Gold Amount]), FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZS2\"))",
            "formatString": "#,0"
          },
          {
            "name": ". All Gold Amt (LY)",
            "expression": " CALCULATE([. All Gold Amt], DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": ". All Gold Amt (LM)",
            "expression": " CALCULATE([. All Gold Amt], DATEADD('Dim - Time'[Date], -1, MONTH))",
            "formatString": "#,0"
          },
          {
            "name": ". Net Amt (Saledeal)",
            "expression": [
              "CALCULATE([. All Net Amt],",
              "CROSSFILTER('Fact - Condition'[ConditionID], 'Fact - All Sales Invoice Line'[ConditionID], Both))"
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Fact - Condition",
        "columns": [
          {
            "name": "DOC_CONDITION_NUM",
            "dataType": "string",
            "sourceColumn": "DOC_CONDITION_NUM"
          },
          {
            "name": "CONDITION_TYPE",
            "dataType": "string",
            "sourceColumn": "CONDITION_TYPE"
          },
          {
            "name": "CONDITION_VALUE",
            "dataType": "double",
            "sourceColumn": "CONDITION_VALUE"
          },
          {
            "name": "INVOICE_WID",
            "dataType": "int64",
            "sourceColumn": "INVOICE_WID"
          },
          {
            "name": "INVOICE_NUM",
            "dataType": "string",
            "sourceColumn": "INVOICE_NUM"
          },
          {
            "name": "INVOICE_ITEM",
            "dataType": "string",
            "sourceColumn": "INVOICE_ITEM"
          },
          {
            "name": "INVOICED_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "INVOICED_ON_DT_WID"
          },
          {
            "name": "SALE_DEAL_WID",
            "dataType": "int64",
            "sourceColumn": "SALE_DEAL_WID"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "type": "calculated",
            "name": "ConditionID",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact - Condition'[INVOICED_ON_DT_WID]&\"_\"&'Fact - Condition'[INVOICE_NUM] &\"_\"&'Fact - Condition'[INVOICE_ITEM]"
          },
          {
            "type": "calculated",
            "name": "Saledeal_ParentGrp",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (RELATED('Dim - Sale Deals'[SALEDEAL_ParentGrp]) = \"Sale deal CT\" && 'Fact - Condition'[INVOICED_ON_DT_WID] >= RELATED('Dim - Sale Deals'[EFFECTIVE_FROM_DT]) && 'Fact - Condition'[INVOICED_ON_DT_WID] <=RELATED('Dim - Sale Deals'[EFFECTIVE_TO_DT]), RELATED('Dim - Sale Deals'[SALEDEAL_ParentGrp]),",
              "\tIF (RELATED('Dim - Sale Deals'[SALEDEAL_ParentGrp]) = \"Sale deal CT\" && 'Fact - Condition'[INVOICED_ON_DT_WID] > RELATED('Dim - Sale Deals'[EFFECTIVE_TO_DT]), \"Others\", RELATED('Dim - Sale Deals'[SALEDEAL_ParentGrp])",
              "))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_CONDITION_TYPE_F = Source{[Schema=\"dbo\",Item=\"W_VW_CONDITION_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_CONDITION_TYPE_F,{\"INTEGRATION_ID\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Discount Amt",
            "expression": [
              "CALCULATE(SUM([CONDITION_VALUE])*-1,",
              "CROSSFILTER('Fact - Condition'[ConditionID], 'Fact - All Sales Invoice Line'[ConditionID], Both))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Cust. Use Saledeal",
            "expression": [
              " ",
              "\tCALCULATE([# Customer],",
              "\t\tFilter('Fact - Condition', 'Fact - Condition'[. Discount Amt] >0))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# MKT Cust. Use Saledeal (LY)",
            "expression": [
              " CALCULATE([# MKT Cust. Use Saledeal],",
              "FILTER(",
              "ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER], 'Dim - Plant'[PLANT KIND], 'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)], 'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand],'Dim - Customer'[CUST_CARD_DESC],'Dim - Plant'[Plant Code], 'Dim - Plant'[PLANT NAME], 'Dim - Plant'[Sales District Name], 'Fact - Sales Invoice Line'[Group Age], 'Dim - Customer'[Gender], 'Fact - Sales Invoice Line'[CUST_CARD_DESC], 'Fact - Sales Invoice Line'[MKT_Customer]),",
              " 'Fact - Sales Invoice Line'[Program Category] = SELECTEDVALUE('Fact - Sales Invoice Line'[PROGRAM CATEGORY]) &&",
              "VALUE('Fact - Sales Invoice Line'[MKT.Year]) = value(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1 &&",
              " 'Fact - Sales Invoice Line'[Program Category] <> BLANK())",
              " )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% MKT Cust. Use Saledeal",
            "expression": [
              " ",
              "\t\t",
              "VAR X0 = CALCULATE([# Customer],",
              "\t\tREMOVEFILTERS('Fact - Condition'[Saledeal_ParentGrp]))",
              "\t",
              "RETURN [# MKT Cust. Use Saledeal]/X0"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MKT Discount Amt (LY)",
            "expression": [
              " CALCULATE(CALCULATE([. Discount Amt],",
              "CROSSFILTER('Fact - All Sales Invoice Line'[ConditionID], 'Fact - Condition'[ConditionID], Both),",
              "FILTER(",
              "ALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[PLANT KIND],'Fact - Sales Invoice Line'[Customer Type (Month)],'Fact - Sales Invoice Line'[Customer Type (Year)],  'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Customer'[CUST_CARD_DESC], 'Dim - Plant'[PLANT NAME],'Fact - Sales Invoice Line'[Group Age], 'Dim - Plant'[Sales District Name], 'Dim - Customer'[Gender], 'Dim - Plant'[Tier], 'Fact - Sales Invoice Line'[MKT_Customer], 'Fact - Sales Invoice Line'[CUST_CARD_DESC]), ",
              "",
              "'Fact - Sales Invoice Line'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "VALUE('Fact - Sales Invoice Line'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) - 1 &&",
              "  'Fact - Sales Invoice Line'[Program Category] <> BLANK())))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "MKT Discount / Revenue",
            "expression": " [. Discount Amt]/[. Net Amt]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "MKT Discount / Revenue (LY)",
            "expression": " [MKT Discount Amt (LY)]/[. MKT Net Amt (LY)]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Discount Amt (LY)",
            "expression": " [. Discount Amt]/ [MKT Discount Amt (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% MKT Discount / Revenue (LY)",
            "expression": " [MKT Discount / Revenue]/[MKT Discount / Revenue (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% MKT Cust. Use Saledeal (LY)",
            "expression": [
              "  ",
              "VAR X0 =  CALCULATE([# MKT Customer (LY)],",
              "\t\tREMOVEFILTERS('Fact - Condition'[Saledeal_ParentGrp]))",
              "RETURN [# MKT Cust. Use Saledeal (LY)]/X0"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          }
        ]
      },
      {
        "name": "Dim - Camera Age",
        "columns": [
          {
            "name": "Palexy AGEID",
            "dataType": "int64",
            "sourceColumn": "Palexy AGEID"
          },
          {
            "name": "Palexy Age",
            "dataType": "string",
            "sourceColumn": "Palexy Age"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;DW_RAW\",",
                "    dbo_PA_AGE_RANGE = Source{[Schema=\"dbo\",Item=\"PA_AGE_RANGE\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_PA_AGE_RANGE,{\"CREATION_DATE\", \"FILE_NAME\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"AGE_RANGE_ID\", \"Palexy AGEID\"}, {\"AGE_RANGE\", \"Palexy Age\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Camera InStore",
        "columns": [
          {
            "name": "DATE_WID",
            "dataType": "int64",
            "sourceColumn": "DATE_WID",
            "summarizeBy": "none"
          },
          {
            "name": "age_range",
            "dataType": "int64",
            "sourceColumn": "age_range",
            "summarizeBy": "none"
          },
          {
            "name": "duration",
            "dataType": "double",
            "sourceColumn": "duration",
            "summarizeBy": "sum"
          },
          {
            "name": "recording_time",
            "dataType": "int64",
            "sourceColumn": "recording_time",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "action_type",
            "dataType": "string",
            "sourceColumn": "action_type"
          },
          {
            "name": "Plant_wid",
            "dataType": "int64",
            "sourceColumn": "Plant_wid",
            "summarizeBy": "none"
          },
          {
            "name": "PERSON_WID",
            "dataType": "string",
            "sourceColumn": "PERSON_WID",
            "summarizeBy": "distinctCount"
          },
          {
            "name": "Area_ID",
            "dataType": "int64",
            "sourceColumn": "Area_ID",
            "summarizeBy": "none"
          },
          {
            "name": "SectionID",
            "dataType": "int64",
            "sourceColumn": "SectionID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",",
                "    \" SELECT ",
                "       [DATE_WID],",
                "\tCONCAT_WS('_','PA', [PERSON_WID] )   [PERSON_WID] ,",
                "\t   [age_range],",
                "\t   [duration],",
                "\t   [recording_time],",
                "\t   [action_type],",
                "\t   [Plant_wid],",
                "\t   [Area_ID],",
                "\t   SECTION_ID SectionID",
                "    FROM  [DW_RAW].[dbo].[W_PA_ICA_BASELINE_F] with (nolock) where (action_type <> 'do_transaction' or action_type is null) and DATE_WID >=20200101 \"",
                "   )",
                "in",
                "   Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",",
                  "    \" SELECT ",
                  "       [DATE_WID],",
                  "\t   [PERSON_WID],",
                  "\t   [age_range],",
                  "\t   [duration],",
                  "\t   [recording_time],",
                  "\t   [action_type],",
                  "\t   [Plant_wid],",
                  "\t   CONCAT_WS('_', [DATE_WID], [Plant_wid]) Store_date,",
                  "\t   CONCAT_WS('_', [DATE_WID], [Plant_wid],[recording_time]) Store_date_Hrs",
                  "    FROM  [DW_RAW].[dbo].[W_PA_ICA_BASELINE_F] with (nolock) \"",
                  "   )",
                  "in",
                  "   Source</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "# Visitors",
            "expression": [
              "",
              "\tVAR CK_SDate = CALCULATE(VALUES('Dim - Program'[EFFECTIVE_FROM_DT]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate = CALCULATE(VALUES('Dim - Program'[EFFECTIVE_TO_DT]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "RETURN CALCULATE([# Ttl Store Visitors], ",
              "\t\tALLEXCEPT('Fact - Sales Invoice Line', 'Dim - Plant'[REGION], 'Dim - Plant'[TIER], 'Dim - Plant'[PLANT KIND], 'Dim - Product'[RPT_Product Group 4 Name], 'Dim - Product'[RPT_Product Group 2 Name], 'Dim - Product'[RPT - Product Group 7 Name], 'Dim - Product'[Co-Operate Brand], 'Dim - Plant'[Plant Code], 'Dim - Plant'[PLANT NAME], 'Dim - Plant'[Sales District Name]),",
              "\t\tFILTER('Dim - Time', 'Dim - time'[row_wid] >= VALUE(CK_SDate) &&",
              "\t\t'Dim - time'[row_wid]  <= VALUE(CK_EDate)))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Ttl Store Visitors",
            "expression": [
              "",
              "CALCULATE(DISTINCTCOUNT([PERSON_WID]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% CR",
            "expression": [
              " CALCULATE( DIVIDE([# Customer],[# visitors],0),",
              "\tCROSSFILTER('Dim - Plant'[ROW_WID], 'Fact - Camera InStore'[Plant_wid],Both),",
              "\t'Dim - Plant'[Palexy ID]<> blank())"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "# Visitor (CK)",
            "expression": [
              " ",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate = FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\")",
              "",
              "RETURN ",
              "\tCALCULATE([# Ttl Store Visitors], DATEADD('Dim - Time'[Date], -1, YEAR),",
              "\t\tFILTER(ALL('Fact - Camera InStore'),",
              "\t\tVALUE('Fact - Camera InStore'[DATE_WID]) >= value(CK_SDate) && VALUE('Fact - Camera InStore'[DATE_WID]) <= value(CK_EDate)))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Visitor (CK)",
            "expression": " [# Visitors]/[# Visitor (CK)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "%CR (CK)",
            "expression": " DIVIDE([# Visitor (CK)], [# MKT Customer (CK)],0)-1",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Fact - ATL",
        "columns": [
          {
            "name": "Plant_wid",
            "dataType": "int64",
            "sourceColumn": "Plant_wid"
          },
          {
            "name": "PROGRAM_WID",
            "dataType": "int64",
            "sourceColumn": "PROGRAM_WID"
          },
          {
            "name": "Date_key",
            "dataType": "int64",
            "sourceColumn": "Date_key"
          },
          {
            "name": "Source",
            "dataType": "string",
            "sourceColumn": "Source"
          },
          {
            "name": "Layer",
            "dataType": "string",
            "sourceColumn": "Layer"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Impressions",
            "dataType": "double",
            "sourceColumn": "Impressions"
          },
          {
            "name": "Clicks",
            "dataType": "double",
            "sourceColumn": "Clicks"
          },
          {
            "name": "Reach",
            "dataType": "double",
            "sourceColumn": "Reach"
          },
          {
            "name": "Ads_Spend",
            "dataType": "double",
            "sourceColumn": "Ads_Spend"
          },
          {
            "name": "CTR",
            "dataType": "double",
            "sourceColumn": "CTR"
          },
          {
            "name": "Frequency",
            "dataType": "double",
            "sourceColumn": "Frequency"
          },
          {
            "name": "Engagement",
            "dataType": "int64",
            "sourceColumn": "Engagement"
          },
          {
            "name": "CPC",
            "dataType": "double",
            "sourceColumn": "CPC"
          },
          {
            "name": "users",
            "dataType": "int64",
            "sourceColumn": "users"
          },
          {
            "name": "newUsers",
            "dataType": "int64",
            "sourceColumn": "newUsers"
          },
          {
            "name": "pageviews",
            "dataType": "int64",
            "sourceColumn": "pageviews"
          },
          {
            "name": "sessions",
            "dataType": "int64",
            "sourceColumn": "sessions"
          },
          {
            "name": "bounceRate",
            "dataType": "double",
            "sourceColumn": "bounceRate"
          },
          {
            "name": "TimeOnPage",
            "dataType": "double",
            "sourceColumn": "TimeOnPage"
          },
          {
            "name": "Program Category",
            "dataType": "string",
            "sourceColumn": "PROGRAM_CATEGORY"
          },
          {
            "name": "PROGRAM_TYPE",
            "dataType": "string",
            "sourceColumn": "PROGRAM_TYPE"
          },
          {
            "name": "MKT.Year",
            "dataType": "string",
            "sourceColumn": "MKT.Year"
          },
          {
            "name": "SessionDuration",
            "dataType": "dateTime",
            "sourceColumn": "SessionDuration"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_Z_VW_ATL_MKT = Source{[Schema=\"dbo\",Item=\"W_VW_ATL_MKT\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Z_VW_ATL_MKT,{{\"Amount_Spent_VND\", \"Ads_Spend\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". Impressions",
            "expression": [
              " CALCULATE(SUM([Impressions]),",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Source], 'Fact - ATL'[Layer], 'Dim - Time'[Date]),",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Click",
            "expression": [
              " CALCULATE(SUM([Clicks]), ",
              "\tFILTER('Fact - ATL', 'Fact - ATL'[Layer] =\"Date\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Ads Spend",
            "expression": [
              " CALCULATE(SUM([Ads_Spend]),",
              "FILTER('Fact - ATL',  'Fact - ATL'[Layer] = \"Date\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". CTR",
            "expression": [
              " CALCULATE(",
              "\tDIVIDE([. Click], [. Impressions],0),",
              "\t\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Source], 'Fact - ATL'[Layer], 'Dim - Time'[Date]),",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "",
              "",
              "\t\t)",
              "\t\t)"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". CPC",
            "expression": "[. Ads Spend]/ [. Click]",
            "formatString": "#,0"
          },
          {
            "name": "# Users",
            "expression": [
              "",
              "VAR Last_date = VALUE(FORMAT(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]), \"yyyymmdd\"))",
              "",
              "RETURN CALCULATE(SUM([users]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) ",
              "))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# New Users",
            "expression": [
              "",
              "VAR Last_date = VALUE(FORMAT(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]), \"yyyymmdd\"))",
              "",
              "RETURN CALCULATE(SUM([newUsers]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer], 'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) ",
              "))",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# User (LY)",
            "expression": [
              " ",
              "",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Edate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\tVAR CK_EDate = FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\")",
              "",
              "",
              "RETURN CALCULATE(SUM([users]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1) ",
              "))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# New User (LY)",
            "expression": [
              "",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate0 = CALCULATE(VALUES('Dim - Program'[CK_DL_Edate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\tVAR CK_EDate = FORMAT(DATEADD(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]),-1, YEAR), \"yyyymmdd\")",
              "",
              "RETURN CALCULATE(SUM([newUsers]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer], 'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1) ",
              "))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Users (CK)",
            "expression": " [# Users]/[# User (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% New Users (LY)",
            "expression": " [# New Users]/[# New User (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". Impressions (LY)",
            "expression": [
              " ",
              "",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate = CALCULATE(VALUES('Dim - Program'[CK_DL_Edate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "",
              "RETURN ",
              "CALCULATE(SUM([Impressions]),",
              "DATEADD('Dim - Time'[Date], -1, YEAR),",
              "FILTER(ALL('Fact - ATL'), ",
              "VALUE('Fact - ATL'[Date_key]) >= value(CK_SDate) && VALUE('Fact - ATL'[Date_key]) <= value(CK_EDate)))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Ads Spend (LY)",
            "expression": [
              " CALCULATE([. Ads Spend],",
              "",
              "FILTER(All('Fact - ATL'),",
              "  'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". % Ads Spend",
            "expression": " [. Ads Spend]/[. Ads Spend (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". CTR (LY)",
            "expression": [
              " CALCULATE([. CTR],",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Source], 'Fact - ATL'[Layer]), ",
              "  'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Click (LY)",
            "expression": [
              " CALCULATE([. Click],",
              "FILTER(All('Fact - ATL'),",
              "  'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". CPC (LY)",
            "expression": "[. Ads Spend (LY)]/ [. Click (LY)]",
            "formatString": "#,0"
          },
          {
            "name": "% Impressions (LY)",
            "expression": " [. Impressions]/[. Impressions (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Click (LY)",
            "expression": " [. Click]/[. Click (LY)]-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% CTR (LY)",
            "expression": " [. CTR]/[. CTR (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Session duration",
            "expression": [
              " CALCULATE(SUM([SessionDuration]),",
              "\tFILTER('Fact - ATL', 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "H:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"LongTime\" FormatString=\"H:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": ". Session Duration (LY)",
            "expression": [
              " ",
              "",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate = CALCULATE(VALUES('Dim - Program'[CK_DL_Edate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "",
              "RETURN ",
              "CALCULATE(SUM([SessionDuration]),",
              "DATEADD('Dim - Time'[Date], -1, YEAR),",
              "\tFILTER('Fact - ATL',  'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "H:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"LongTime\" FormatString=\"H:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": ". Session duration IMC",
            "expression": [
              " CALCULATE(SUM([SessionDuration]),",
              "\tFILTER('Fact - ATL', 'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "H:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"LongTime\" FormatString=\"H:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": ". Session Duration IMC (LY)",
            "expression": [
              " ",
              "",
              "CALCULATE(SUM([SessionDuration]),",
              "",
              "\tFILTER('Fact - ATL',  'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "H:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"LongTime\" FormatString=\"H:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": ". Session duration IMC vs. Total",
            "expression": " [. Session duration IMC]/[. Session duration]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": ". Users IMC vs. Total",
            "expression": " [# Users IMC]/[# Users]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "# Days Ads.",
            "expression": [
              "CALCULATE(DISTINCTCOUNT([Date_key]),",
              "\tFILTER('Fact - ATL', 'Fact - ATL'[Layer] = \"Date\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ]
          },
          {
            "name": "# Days Ads. (LY)",
            "expression": [
              " CALCULATE(DISTINCTCOUNT([Date_key]),",
              "\tFILTER(ALL('Fact - ATL'), 'Fact - ATL'[Layer] = \"Date\" && 'Fact - ATL'[Source] IN {\"Google Ads\", \"Facebook Ads\"} &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "\t))",
              "",
              "",
              ""
            ]
          },
          {
            "name": "# Users IMC",
            "expression": [
              "",
              "VAR Last_date = VALUE(FORMAT(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]), \"yyyymmdd\"))",
              "",
              "RETURN CALCULATE(SUM([users]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer], 'Dim - Time'[Date]),  'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))",
              "",
              ""
            ]
          },
          {
            "name": "# New Users IMC",
            "expression": [
              "",
              "VAR Last_date = VALUE(FORMAT(LASTDATE('Fact - Sales Invoice Line'[Invoice Date]), \"yyyymmdd\"))",
              "",
              "RETURN CALCULATE(SUM([newUsers]), ",
              "FILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))",
              ""
            ],
            "formatString": "0"
          },
          {
            "name": ". Bounce",
            "expression": [
              " CALCULATE(SUM([bounceRate])/100,",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]),  'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Bounce (LY)",
            "expression": [
              " CALCULATE(SUM([bounceRate])/100,",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]), 'Fact - ATL'[Source] = \"Google Analytics\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Bounce IMC",
            "expression": [
              " CALCULATE(SUM([bounceRate])/100,",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]),  'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Bounce IMC (LY)",
            "expression": [
              " CALCULATE(SUM([bounceRate])/100,",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Layer],'Dim - Time'[Date]),  'Fact - ATL'[Source] = \"Google Analytics-IMC\" &&",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Bounce IMC vs. Total",
            "expression": " [. Bounce IMC]/[. Bounce]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Bounce IMC vs. Total (LY)",
            "expression": " [. Bounce IMC (LY)]/[. Bounce (LY)]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Reach",
            "expression": [
              " CALCULATE(SUM([Reach]),",
              "\tFILTER(ALLEXCEPT('Fact - ATL', 'Fact - ATL'[Source], 'Fact - ATL'[Layer],'Dim - Time'[Date]),",
              "\t 'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year]))",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Reach (LY)",
            "expression": [
              " ",
              "",
              "    VAR CK_SDate = ",
              "\t\tCALCULATE(VALUES('Dim - Program'[CK_DL_Sdate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "\t\t\t",
              "\tVAR CK_EDate = CALCULATE(VALUES('Dim - Program'[CK_DL_Edate]),",
              "\t\tFilter('Dim - Program', 'Dim - Program'[PROGRAM_CATEGORY] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY])",
              "\t\t\t&& 'Dim - Program'[MKT.Year] = SELECTEDVALUE('Dim - Program'[MKT.Year])))",
              "",
              "RETURN ",
              "CALCULATE(SUM([Reach]),",
              "\tFILTER('Fact - ATL',",
              "\t\t'Fact - ATL'[Program Category] = SELECTEDVALUE('Dim - Program'[Program_Category]) &&",
              "\t\tVALUE('Fact - ATL'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])-1)",
              "))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Reach (LY)",
            "expression": " [. Reach]/[. Reach (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". New Users IMC vs. Total",
            "expression": " [# New Users IMC]/[# New Users]",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "MKT_CAC",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]"
          },
          {
            "type": "calculated",
            "name": "Value 1",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "{BLANK()}"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": ". Acquisition Cost",
            "expression": [
              "",
              "",
              "\tVAR discount_customer = CALCULATE([. Discount Amt]/[# Customer], FILTER('Fact - Sales Invoice Line', 'Fact - Sales Invoice Line'[MKT_Customer] = \"Khách hàng mới\"))*-1",
              "RETURN  (discount_customer + [. Ads per Customer])",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Ads per Customer",
            "expression": [
              " CALCULATE(",
              "    DIVIDE([. Ttl MKT Cost], [All Customer], 0))"
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Ttl MKT Cost",
            "expression": [
              " CALCULATE(SUM('Fact - Marketing Spend'[Cost]), ",
              "\tFILTER('Fact - Marketing Spend', 'Fact - Marketing Spend'[Program Category] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY]) &&",
              "\tVALUE('Fact - Marketing Spend'[MKT.Year]) = SELECTEDVALUE('Dim - Program'[MKT.Year])",
              "\t))",
              "\t",
              "",
              "\t",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "MKT Cost / Revenue",
            "expression": [
              " CALCULATE([. Ttl MKT Cost]/[. Net Amt],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Ttl MKT Cost (LY)",
            "expression": [
              " CALCULATE(SUM('Fact - Marketing Spend'[Cost]), ",
              "\t",
              "\tFILTER(ALLEXCEPT('Fact - Marketing Spend','Fact - Marketing Spend'[Cost Group], 'Fact - Marketing Spend'[Item Cost]),",
              "\t 'Fact - Marketing Spend'[Program Category] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY]) &&",
              "\tVALUE('Fact - Marketing Spend'[MKT.Year]) = VALUE(SELECTEDVALUE('Dim - Program'[MKT.Year])) -1",
              "\t))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Ttl MKT Cost (LY)",
            "expression": " [. Ttl MKT Cost]/[. Ttl MKT Cost (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Cost / Revenue (LY)",
            "expression": [
              " ",
              "VAR LY= [. Ttl MKT Cost (LY)]/[. Net Amt (LY)]",
              "RETURN [MKT Cost / Revenue]/LY-1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MKT Cost /Revenue (LY)",
            "expression": [
              " CALCULATE([. Ttl MKT Cost (LY)]/[. Net Amt (LY)],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ". Ttl MKT Prog Cost (LY)",
            "expression": [
              " CALCULATE(SUM('Fact - MKT cost'[Total Cost]),",
              "\tFILTER('Fact - MKT cost', 'Fact - MKT cost'[Program Category] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY]) &&",
              "\tVALUE('Fact - MKT cost'[MKT.Year]) = SELECTEDVALUE('Dim - Program'[MKT.Year])-1",
              "\t))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": ". Ttl MKT Prog Cost",
            "expression": [
              " CALCULATE(SUM('Fact - MKT cost'[Total Cost]),",
              "\tFILTER('Fact - MKT cost', 'Fact - MKT cost'[Program Category] = SELECTEDVALUE('Dim - Program'[PROGRAM_CATEGORY]) &&",
              "\tVALUE('Fact - MKT cost'[MKT.Year]) = SELECTEDVALUE('Dim - Program'[MKT.Year])",
              "\t))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "MKT Prog Cost / Target (LY)",
            "expression": [
              " CALCULATE( [. Ttl MKT Prog Cost (LY)]/[. Target Marketing (LY)],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "MKT Prog Cost / Target",
            "expression": [
              " CALCULATE([. Ttl MKT Prog Cost]/[. Target Marketing],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MKT Prog Cost/ Revenue",
            "expression": [
              " CALCULATE([. Ttl MKT Prog Cost]/[. MKT Net Amt],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MKT Prog Cost/ Revenue (LY)",
            "expression": [
              " CALCULATE([. Ttl MKT Prog Cost (LY)]/[. MKT Net Amt (LY)],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% MKT Prog Cost/ Revenue",
            "expression": " [MKT Prog Cost/ Revenue]/ [MKT Prog Cost/ Revenue (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% MKT Prog Cost / Target",
            "expression": " [MKT Prog Cost / Target]/[MKT Prog Cost / Target (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "CPO",
            "expression": [
              " CALCULATE([. Ttl MKT Prog Cost]/[# Cust Transaction (PC)],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CPO (LY)",
            "expression": [
              " CALCULATE([. Ttl MKT Prog Cost (LY)]/[# MKT Cust Transaction (LY)],",
              "REMOVEFILTERS('Dim - Plant'),",
              "REMOVEFILTERS('Dim - Channel'))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Ttl MKT Prog Cost",
            "expression": "[. Ttl MKT Prog Cost]/[. Ttl MKT Prog Cost (LY)]-1",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Fact - MKT cost",
        "description": "Marketing cost summary",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Total Cost",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Total Cost]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MKT.Year",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact - Marketing Spend[MKT.Year]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Program Category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact - Marketing Spend[Program Category]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Date_key",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact - Marketing Spend[Date_key]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Cost Group",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact - Marketing Spend[Cost Group]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "CHARGEBY",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact - Marketing Spend[CHARGEBY]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "",
                "--var T1 = ",
                "SUMMARIZECOLUMNS(",
                " 'Fact - Marketing Spend'[MKT.Year],",
                " 'Fact - Marketing Spend'[Program Category],",
                " 'Fact - Marketing Spend'[Date_key],",
                " 'Fact - Marketing Spend'[Cost Group],",
                "  'Fact - Marketing Spend'[ChargeBy],",
                "",
                " \"Total Cost\", sum('Fact - Marketing Spend'[Cost]))",
                " ",
                "  /*",
                " Var T2 = SUMMARIZECOLUMNS( 'Dim - Time'[Year],",
                " 'Fact - Sales Invoice Line'[Program Category],",
                "'Dim - Time'[ROW_WID],",
                "  FILTER('Fact - Sales Invoice Line', 'Fact - Sales Invoice Line'[MKT.Year]<> blank()),",
                "  FILTER('Dim - Product', NOT 'Dim - Product'[RPT_Product Group 4 Name] IN {\"Đồng hồ\", \"Mắt kính\", \"Vàng miếng\"}),",
                "  FILTER('Dim - Plant', NOT 'Dim - Plant'[Plant Type] IN {\"DC\"}),",
                "  \"Cost Group\", IF( [. Discount Amt] >0, \"Discount Cost\") ,",
                "  \"ChargeBy\", IF( [. Discount Amt] >0, \"MKT\") ,",
                "",
                " \"Total Cost\", [. Discount Amt]",
                ")",
                "",
                " ",
                " return union(T2,T1) */"
              ]
            }
          }
        ]
      },
      {
        "name": "SC Measures",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": "SC .Net Qty Open",
            "expression": [
              " ",
              "",
              "VAR X = MIN('Dim - Time'[Date])",
              "return CALCULATE(sum('Fact - Inventory Transaction'[NET_QTY]), FILTER(All('Dim - Time'),'Dim - Time'[Date] < X))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Qty Close",
            "expression": [
              "",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Inventory Transaction'[net_qty]), FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Qty",
            "expression": [
              "",
              "var x = MIN('Dim - Time'[Date])",
              "VAR OPENING = CALCULATE(sum('Fact - Inventory Transaction'[NET_QTY]), FILTER(All('Dim - Time'),'Dim - Time'[Date] < X))",
              "",
              "VAR CLOSING =  [. Inven Net Qty]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC AVG .Net Qty",
            "expression": [
              "",
              "VAR _Year = MAX('Dim - Time'[Year])",
              "RETURN CALCULATE(",
              "\tAVERAGEX(",
              "\t\tFILTER(",
              "\t\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t\t),",
              "\t\t[SC .Net Qty]),",
              "\t",
              "\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))",
              "\t\t"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC AVG .Net Amt",
            "expression": [
              "",
              "VAR _Year = MAX('Dim - Time'[Year])",
              "RETURN CALCULATE(",
              "\tAVERAGEX(",
              "\tFILTER(",
              "\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t),",
              "\t[SC .Net Amt]),",
              "FILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC AVG #Q10",
            "expression": [
              "",
              "VAR _YEAR = MAX('Dim - Time'[Year])",
              "",
              "RETURN CALCULATE(",
              "\tAVERAGEX(",
              "\t\tFILTER(",
              "\t\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t\t),",
              "\t\t[SC #Q10]),",
              "\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Q10",
            "expression": [
              "",
              "",
              "\tVAR _currdate = MAX('Dim - Time'[Date])",
              "\tVAR CLOSING = CALCULATE(SUM('Fact - Inventory Transaction'[Q10]), FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))",
              "",
              "\tVAR X = MIN('Dim - Time'[Date])",
              "\tVAR OPENING = CALCULATE(SUM('Fact - Inventory Transaction'[Q10]), FILTER(ALL('Dim - Time'[Date]), 'Dim - Time'[Date] < X ))",
              "",
              "\tVAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "\tRETURN (OPENING + CLOSING)/_COUNT"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Q10 Open (LY)",
            "expression": [
              " ",
              "\tCALCULATE([SC #Q10 Open], DATEADD('Dim - Time'[Date],-1,YEAR))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt (LY)",
            "expression": [
              " ",
              "\t",
              "\tVAR CLOSING = CALCULATE( [SC .Net Amt Open (LY)], DATEADD('Dim - Time'[Date], -1, MONTH))",
              "\t",
              "\t",
              "\tVAR _COUNT = IF( [SC .Net Amt Open (LY)] <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "\tRETURN ( [SC .Net Amt Open (LY)] + CLOSING)/_COUNT",
              "\t",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Q10 Open",
            "expression": [
              "",
              "",
              "\tVAR X = MIN('Dim - Time'[Date])",
              "\tRETURN CALCULATE(sum('Fact - Inventory Transaction'[Q10]), FILTER(All('Dim - Time'),'Dim - Time'[Date] < X))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt Open",
            "expression": [
              "",
              "\tVAR X = MIN('Dim - Time'[Date])",
              "\treturn CALCULATE(sum('Fact - Inventory Transaction'[NET_AMT]), FILTER(All('Dim - Time'),'Dim - Time'[Date] < X))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt Open (LY)",
            "expression": [
              "",
              "\tCALCULATE([SC .Net Amt Open], DATEADD('Dim - Time'[Date], -1, YEAR))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Q10 (LY)",
            "expression": [
              " ",
              "\tVAR CLOSING = CALCULATE( [SC #Q10 Open (LY)] , DATEADD('Dim - Time'[Date], -1, MONTH))",
              "\t",
              "\tVAR _COUNT = IF( CLOSING <> BLANK(),1,0) +  IF(  [SC #Q10 Open (LY)] <> BLANK(),1,0)",
              "\tRETURN (CLOSING +  [SC #Q10 Open (LY)])/_COUNT"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Qty (LY)",
            "expression": [
              "",
              "VAR CLOSING = CALCULATE( [SC .Net Qty Open (LY)] , DATEADD('Dim - Time'[Date], -1, MONTH))",
              "",
              "VAR _COUNT = IF( CLOSING <> BLANK(),1,0) +  IF( [SC .Net Qty Open (LY)] <> BLANK(),1,0)",
              "RETURN (CLOSING +[SC .Net Qty Open (LY)] ) /_COUNT",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Qty Open (LY)",
            "expression": [
              "",
              "\tCALCULATE( [SC .Net Qty Open], DATEADD('Dim - Time'[Date], -1, YEAR))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt Quota (MTD)",
            "expression": [
              " CALCULATE(",
              "\tTOTALYTD(sum( 'Fact - Inventory Quota'[DINHMUC_TK_TB]), 'Dim - Time'[Date]),",
              "\t'Fact - Inventory Quota'[PLANT_TYPE] = \"DC\")",
              "\t"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt Quota (YTD)",
            "expression": [
              " CALCULATE(",
              "\tTOTALYTD(sum( 'Fact - Inventory Quota'[DINHMUC_TK_NAM]), 'Dim - Time'[Date]),",
              "\t'Fact - Inventory Quota'[PLANT_TYPE] = \"DC\")",
              "\t"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Q10 Mvmnt",
            "expression": " ABS(SUM('Fact - Inventory Transaction'[Q10]))"
          },
          {
            "name": "SC #Doc",
            "expression": [
              " ",
              "CALCULATE(DISTINCTCOUNT('Fact - Inventory Transaction'[MATERIAL_DOC_NUM]))"
            ]
          },
          {
            "name": "SC .Net Qty TurnOver",
            "expression": "DIVIDE( [SD AVG .All Net Qty] , [SC AVG .Net Qty], 0)",
            "formatString": "0.00"
          },
          {
            "name": "SC .Net Amt TurnOver",
            "expression": " DIVIDE( [SD AVG .All Cost Amt], [SC AVG .Net Amt], 0)",
            "formatString": "0.00"
          },
          {
            "name": "SC #Q10 TurnOver",
            "expression": " DIVIDE( [SD AVG #Q10], [SC AVG #Q10], 0)",
            "formatString": "0.00"
          },
          {
            "name": "SC .Net Amt Convert",
            "expression": [
              "",
              "\tVAR Last_Date = CALCULATE(MAX('Dim - Time'[Date] ), FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[. All Net Amt]>0))",
              "\tVAR First_Date =  Date(Year(Last_Date),1,1)    //MIN(  'Dim - Time'[Date] )",
              "\tVAR Running = CALCULATE(COUNTROWS(",
              "\t    DATESBETWEEN('Dim - Time'[Date],First_Date, Last_Date)))",
              "\t",
              "\tVAR Days = DATEDIFF(  Date(Year(Last_Date),1,1),  Last_Date,DAY)+1",
              "",
              "\t",
              "RETURN  days/([. Net Amt (YTD)]/[SC AVG .Net Amt])"
            ],
            "formatString": "0"
          },
          {
            "name": "SC #PO",
            "expression": [
              "",
              "CALCULATE(DISTINCTCOUNT('Fact - Purchase Order Line'[Order Number]),",
              "\tUSERELATIONSHIP('Fact - Purchase Order Line'[DELIVERY_DT], 'Dim - Time'[ROW_WID]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt_PO",
            "expression": [
              " CALCULATE(SUM('Fact - Purchase Order Line'[Net Amount]),",
              "\tUSERELATIONSHIP('Fact - Purchase Order Line'[DELIVERY_DT], 'Dim - Time'[ROW_WID]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Qty_PO",
            "expression": [
              " CALCULATE(sum('Fact - Purchase Order Line'[Order Qty]),",
              "\tUSERELATIONSHIP('Fact - Purchase Order Line'[DELIVERY_DT], 'Dim - Time'[ROW_WID]))"
            ]
          },
          {
            "name": "SC RCMD .Net Amt (Min)",
            "expression": [
              " ",
              "VAR StartQuarter = FORMAT(STARTOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "VAR EndQuarter = FORMAT(ENDOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "",
              "VAR SelectedDate =  MAX( 'Dim - Time'[Date])",
              "",
              "",
              "RETURN CALCULATE(",
              "\tSUM('Fact - SC Recommend'[VON_TON_MIN]),",
              "\t\tFILTER( 'Fact - SC Recommend', 'Fact - SC Recommend'[EFFECTIVE_FROM] <=  SelectedDate &&",
              "\t\t 'Fact - SC Recommend'[EFFECTIVE_TO] >= SelectedDate))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC RCMD .Net Amt (Max)",
            "expression": [
              " ",
              "VAR StartQuarter = FORMAT(STARTOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "VAR EndQuarter = FORMAT(ENDOFQUARTER( 'Dim - Time'[Date] ),\"YYYYMMDD\")",
              "",
              "VAR SelectedDate = MAX( 'Dim - Time'[Date])",
              "",
              "",
              "",
              "RETURN CALCULATE(",
              "\tSUM('Fact - SC Recommend'[VON_TON_MAX]),",
              "\t\tFILTER( 'Fact - SC Recommend', 'Fact - SC Recommend'[EFFECTIVE_FROM] <=  SelectedDate &&",
              "\t\t 'Fact - SC Recommend'[EFFECTIVE_TO] >= SelectedDate))",
              "\t\t "
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC RCMD .Qty (Min)",
            "expression": [
              " ",
              "VAR StartQuarter = FORMAT(STARTOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "VAR EndQuarter = FORMAT(ENDOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "",
              "VAR SelectedDate = MAX( 'Dim - Time'[Date])",
              "",
              "",
              "RETURN CALCULATE(",
              "\tSUM( 'Fact - SC Recommend'[MIN]),",
              "\t\tFILTER( 'Fact - SC Recommend', 'Fact - SC Recommend'[EFFECTIVE_FROM] <=  SelectedDate &&",
              "\t\t 'Fact - SC Recommend'[EFFECTIVE_TO] >= SelectedDate))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC RCMD .Qty (Max)",
            "expression": [
              " ",
              "VAR StartQuarter = FORMAT(STARTOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "VAR EndQuarter = FORMAT(ENDOFQUARTER('Dim - Time'[Date]),\"YYYYMMDD\")",
              "",
              "VAR SelectedDate = MAX( 'Dim - Time'[Date])",
              "",
              "",
              "RETURN CALCULATE(",
              "\tSUM('Fact - SC Recommend'[MAX]),",
              "\t\tFILTER( 'Fact - SC Recommend', 'Fact - SC Recommend'[EFFECTIVE_FROM] <=  SelectedDate &&",
              "\t\t 'Fact - SC Recommend'[EFFECTIVE_TO] >= SelectedDate))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC %RCMD (Total)",
            "expression": [
              " ",
              "",
              "VAR MaterialType = DISTINCT('Fact - SC Recommend'[MATERIAL_TYPE])",
              "",
              "VAR OnHands = CALCULATE([. Inven Net Qty], ",
              "\tFILTER('Dim - Product', 'Dim - Product'[Product Type Code] in  MaterialType ))",
              "",
              "RETURN",
              "\tDIVIDE([. Inven Net Qty], [SC RCMD .Qty (Min)], 0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "SC .Unrestricted Net Amt",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE(SUM ( 'Fact - Inventory Transaction'[UNRESTRICTED_AMT] ),",
              "\t FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ]
          },
          {
            "name": "SC .Unrestricted Q10",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "RETURN",
              "\tCALCULATE(SUM ( 'Fact - Inventory Transaction'[UNRESTRICTED_Q10] ),",
              "\t FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ]
          },
          {
            "name": "SC .Unrestricted Qty",
            "expression": [
              " ",
              "\tVAR _currdate = MAX('Dim - Time'[Date])",
              "\tVAR CLOSING = CALCULATE(SUM('Fact - Inventory Transaction'[UNRESTRICTED_QTY]), FILTER(ALLSELECTED('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))",
              "",
              "\tVAR X = MIN('Dim - Time'[Date])",
              "\tVAR OPENING = CALCULATE(SUM('Fact - Inventory Transaction'[UNRESTRICTED_QTY]), FILTER(ALL('Dim - Time'[Date]), 'Dim - Time'[Date] < X ))",
              "",
              "\tVAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "\tRETURN (OPENING + CLOSING)/_COUNT"
            ]
          },
          {
            "name": "SC .Net Amt Quota (Plant)",
            "expression": [
              " CALCULATE(",
              "\tTOTALYTD(sum( 'Fact - Inventory Quota'[DINHMUC_TK_TB]), 'Dim - Time'[Date]),",
              "\t'Fact - Inventory Quota'[PLANT_TYPE] <> \"DC\")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC RCMD .Qty (Missing)",
            "expression": [
              "",
              "",
              "VAR OnHands  = CALCULATE([. Inven Net Qty], ",
              "\tTREATAS(VALUES( 'Fact - SC Recommend'[BASIC_MATERIAL]),  'Dim - Product'[RPT_BASIC_MATERIAL]  ))",
              "",
              "RETURN",
              "",
              "IF ([SC RCMD .Qty (Min)] > ",
              "\tIF(ISBLANK(  OnHands  ),0,  OnHands ),",
              "\t\t [SC RCMD .Qty (Min)] -  OnHands ,0)",
              " "
            ],
            "formatString": "0"
          },
          {
            "name": "SC RCMD .Qty (%Missing)",
            "expression": " 1-[SC RCMD .Qty (Missing)]/[SC RCMD .Qty (Min)]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC .Net Qty Mvmnt",
            "expression": " SUM('Fact - Inventory Transaction'[NET_QTY])",
            "formatString": "#,0"
          },
          {
            "name": "SC .Net Amt Mvmnt",
            "expression": [
              " SUM('Fact - Inventory Transaction'[NET_AMT])",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #PO (GI)",
            "expression": [
              " CALCULATE([SC #PO], ",
              "\tFILTER( 'Fact - Inventory Transaction',",
              "\t\t 'Fact - Inventory Transaction'[VALUATION_TYPE_GROUP] = \"FG\" &&",
              "\t\t  'Fact - Inventory Transaction'[TRANSACTION_TYPE] in {\"GI\", \"Goods Issue\"}))",
              "\t\t  ",
              "\t"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #PO (GR)",
            "expression": [
              " CALCULATE([SC #PO], ",
              "\tFILTER( 'Fact - Inventory Transaction',",
              "\t\t 'Fact - Inventory Transaction'[VALUATION_TYPE_GROUP] = \"FG\" &&",
              "\t\t  'Fact - Inventory Transaction'[TRANSACTION_TYPE] in {\"GR\", \"Goods Receipt\"}))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SC #Plant Over Quota",
            "expression": [
              " ",
              "",
              "CALCULATE(",
              "COUNTROWS('Dim - Plant'),",
              "\t    FILTER('Dim - Plant',[. Net Amount] - [SC .Net Amt Quota (Plant)] >0) ,",
              "\t    FILTER('Dim - Plant', [SC .Net Amt Quota (Plant)] >0),",
              "\t    FILTER('Dim - Plant',[. Net Amount] >0),",
              "\t    FILTER('Dim - Plant', 'Dim - Plant'[Plant Type] = \"CH\")",
              "\t)",
              "\t",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "name": "SC %Plant Over Quota",
            "expression": " [SC #Plant Over Quota]/[# All Active Plant]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "PNJP AVG .Net Qty (Monthly)",
            "description": "PNJP Ton kho binh quan (Qty) theo thang",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP .Net Qty (Daily)])",
              " )"
            ],
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "SC %AVG .Net Qty (Monthly) CK",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, YEAR)",
              "",
              "",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Net Qty (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Net Qty (Daily)])",
              "\t\t\t ), 0)",
              "\t)"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC %AVG .Net Qty (Monthly) KT",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,MONTH)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, MONTH)",
              "",
              "",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Net Qty (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Net Qty (Daily)])",
              "\t\t\t ), 0)",
              "\t)"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PNJP AVG .Net Amt (Monthly)",
            "description": "PNJP Ton kho binh quan (Amt) theo thang",
            "expression": [
              "",
              "VAR _Min = MIN('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(",
              "    AVERAGEX(",
              "        FILTER(",
              "            ALLSELECTED( 'Dim - Time'[Date] ),",
              "            \t'Dim - Time'[Date] >= MIN('Dim - Time'[Date]) &&",
              "                        'Dim - Time'[Date] <= MAX ('Dim - Time'[Date] )",
              "            ),",
              "        [PNJP .Net Amt (Daily)])",
              " )"
            ],
            "isHidden": true
          },
          {
            "name": "SC %AVG .Net Amt (Monthly) CK",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, YEAR)",
              "",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Net Amt (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Net Amt (Daily)])",
              "\t\t\t ), 0)",
              "\t)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC %AVG .Net Amt (Monthly) KT",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1, MONTH)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, MONTH)",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Net Amt (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Net Amt (Daily)])",
              "\t\t\t ), 0)",
              "\t)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC %AVG #Q10 (Monthly) CK",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1,YEAR)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, YEAR)",
              "",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Q10 (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Q10 (Daily)])",
              "\t\t\t ), 0)",
              "\t)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC %AVG #Q10 (Monthly) KT",
            "expression": [
              "",
              "    VAR CK_SDate = DATEADD(FIRSTDATE( 'Dim - Time'[Date]),-1, MONTH)",
              "    VAR CK_EDate = DATEADD(LASTDATE ( 'Dim - Time'[Date]),-1, MONTH)",
              "",
              "RETURN ",
              "\tCALCULATE( DIVIDE([PNJP AVG .Q10 (Monthly)],",
              "\t\tCALCULATE(",
              "\t\t\t    AVERAGEX(",
              "\t\t\t        FILTER(",
              "\t\t\t            ALLSELECTED( 'Dim - Time'[Date] ),",
              "\t\t            \t\t'Dim - Time'[Date] >= CK_SDate &&",
              "\t\t\t                        'Dim - Time'[Date] <= CK_EDate ",
              "\t\t\t            ),",
              "\t\t\t        [PNJP .Q10 (Daily)])",
              "\t\t\t ), 0)",
              "\t)",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "SC .Net Amt",
            "expression": [
              "",
              "var x = MIN('Dim - Time'[Date])",
              "VAR OPENING = CALCULATE(sum('Fact - Inventory Transaction'[NET_AMT]), FILTER(All('Dim - Time'),'Dim - Time'[Date] < X))",
              "",
              "VAR CLOSING =  [. Net Amount]",
              "",
              "VAR _COUNT = IF( OPENING <> BLANK(),1,0) +  IF(CLOSING <> BLANK(),1,0)",
              "RETURN (OPENING + CLOSING)/_COUNT",
              ""
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "SD Addon",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": "YTD Actual vs Plan",
            "expression": [
              " ",
              "VAR ACTUAL = TOTALYTD( [. All Net Amt], 'Dim - Time'[Date])",
              "",
              "RETURN DIVIDE(ACTUAL, [. Net Amt (FC) (Full Year)]  ,0)-1",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Monthly Predictive",
            "expression": [
              " ",
              "\tVAR Last_Date = CALCULATE(MAX('Dim - Time'[Date]), FILTER( 'Fact - All Sales Invoice Line' , 'Fact - All Sales Invoice Line'[. All Net Amt]>0))",
              "\tVAR First_Date = MIN('Dim - Time'[Date])",
              "\tVAR Running = CALCULATE(COUNTROWS(",
              "\t    DATESBETWEEN('Dim - Time'[Date],First_Date, Last_Date)))",
              "\t",
              "\tVAR Days = DATEDIFF ( First_Date, ENDOFMONTH( 'Dim - Time'[Date] ), DAY)+1",
              "",
              "RETURN CALCULATE(TOTALMTD([. All Net Amt], 'Dim - Time'[Date])/Running)*Days"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Yearly Predictive",
            "expression": [
              " ",
              "\tVAR Last_Date = CALCULATE(MAX('Dim - Time'[Date] ), FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[. All Net Amt]>0))",
              "\tVAR First_Date =  Date(Year(Last_Date),1,1)    //MIN(  'Dim - Time'[Date] )",
              "\tVAR Running = CALCULATE(COUNTROWS(",
              "\t    DATESBETWEEN('Dim - Time'[Date],First_Date, Last_Date)))",
              "\t",
              "\tVAR Days = DATEDIFF(  Date(Year(Last_Date),1,1),   Date(Year(Last_Date),12,31),DAY)+1",
              "",
              "\t",
              "RETURN CALCULATE(TOTALYTD([. All Net Amt], 'Dim - Time'[Date])/Running)*Days"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Monthly Plan",
            "expression": " CALCULATE(TOTALMTD([. Net_Amt_FC], ENDOFMONTH('Dim - Time'[Date])))",
            "formatString": "#,0"
          },
          {
            "name": "Monthly Predict vs. Plan",
            "expression": " DIVIDE([Monthly Predictive], [Monthly Plan], 0)-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Yearly Predict vs. Plan",
            "expression": " DIVIDE([Yearly Predictive], [. Net Amt (FC) (Full Year)] , 0)-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "SD .All Q10",
            "expression": "SUM('Fact - All Sales Invoice Line'[Q10])",
            "formatString": "#,0.00"
          },
          {
            "name": "SD . Amt CLV",
            "expression": "  CALCULATE([. All Net Amt]/ [# All Customer] , FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"} ))",
            "formatString": "#,0"
          },
          {
            "name": "SD . Amt CLV (LY)",
            "expression": " CALCULATE([SD . Amt CLV], DATEADD('Dim - Time'[Date], -1, YEAR))",
            "formatString": "#,0"
          },
          {
            "name": "% SD . Amt CLV",
            "expression": [
              "",
              "IF  ([SD . Amt CLV] >0,  DIVIDE([SD . Amt CLV], [SD . Amt CLV (LY)], 0)-1,0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "# Store",
            "expression": [
              " CALCULATE( DISTINCTCOUNT('Dim - Plant'[Plant Code]),",
              "FILTER('Dim - Plant', 'Dim - Plant'[Active Flag] = 1)) "
            ],
            "formatString": "0"
          },
          {
            "name": "SD #Plant Curent",
            "expression": [
              " CALCULATE(DISTINCTCOUNT('Dim - Plant'[ROW_WID]),",
              "ALLEXCEPT('Dim - Plant', 'Dim - Plant'[REGION], 'Dim - Plant'[Sales District Name], 'Dim - Plant'[Tier (desc)]),",
              "FILTER(",
              "'Dim - Plant', 'Dim - Plant'[STATUS] IN { \"ĐANG HOẠT ĐỘNG\", \"ACT\"})",
              ")",
              " "
            ],
            "formatString": "0"
          },
          {
            "name": "First_tranx",
            "expression": [
              "",
              "CALCULATE (",
              "    MIN ( 'Fact - All Sales Invoice Line'[Invoice Date] ),",
              "    ALLEXCEPT(",
              "        'Fact - All Sales Invoice Line',",
              "        'Fact - All Sales Invoice Line'[Customer WID], 'Dim - Customer'",
              "    )",
              ")"
            ],
            "isHidden": true
          },
          {
            "name": "SD #New Customers",
            "expression": [
              " ",
              "",
              " VAR MinDate = MIN('Dim - Time'[Date])",
              " VAR CurrentTM = CALCULATETABLE(VALUES(  'Dim - Customer'[Customer Parent Code] ),",
              " \t FILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Invoice Type] <> \"ZRE\" &&",
              " \t \t 'Fact - All Sales Invoice Line'[INVOICE TYPE] <> \"ZS2\" &&",
              " \t \t  'Fact - All Sales Invoice Line'[INVOICE TYPE]<> \"ZPI\" && ",
              " \t \t  'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"}),",
              "\tFILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"}))\t",
              "\t",
              "VAR PriorCustomer = CALCULATETABLE(VALUES ('Dim - Customer'[Customer Parent Code] ),",
              "\tFILTER(ALL('Fact - All Sales Invoice Line'),",
              "\t\t'Fact - All Sales Invoice Line'[Invoice Date] < MinDate),\t\t",
              "\tFILTER (  'Dim - Customer', 'Dim - Customer'[Customer Parent Code] IN CurrentTM )",
              "\t\t)",
              "\t",
              "RETURN COUNTROWS(",
              "\tEXCEPT(CurrentTM,  PriorCustomer))"
            ],
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "SD %New Customers",
            "expression": " [SD #New Customers]/[# All Customer]",
            "formatString": "0.00%;-0.00%;0.00%",
            "isHidden": true
          },
          {
            "name": "SD #New Customers (LY)",
            "expression": " CALCULATE([SD #New Customers], DATEADD('Dim - Time'[Date],-1, YEAR))",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "SD AVG .All Net Amt",
            "description": "AVG Mthly Amt sales",
            "expression": [
              "",
              "VAR _Year = max('Dim - Time'[Year])",
              "RETURN ",
              "CALCULATE(",
              "\tAVERAGEX(",
              "\tFILTER(",
              "\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t),",
              "\t[. All Net Amt]),",
              "\t\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SD AVG .All Net Qty",
            "description": "AVG Mthly Quantity sales",
            "expression": [
              "",
              "",
              "VAR _Year = max('Dim - Time'[Year])",
              "",
              "RETURN ",
              "\tCALCULATE(",
              "\tAVERAGEX(",
              "\t\tFILTER(",
              "\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t),",
              "",
              "\t[# All Qty]),",
              "\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SD AVG #Q10",
            "expression": [
              "",
              "",
              "VAR _Year = max('Dim - Time'[Year])",
              "",
              "RETURN ",
              "\tCALCULATE(",
              "\tAVERAGEX(",
              "\t\tFILTER(",
              "\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t),",
              "",
              "\t[SD .All Q10]),",
              "\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "SD .Net Amt (MTD)",
            "expression": " CALCULATE(TOTALMTD( [. All Net Amt], 'Dim - Time'[Date]))",
            "formatString": "#,0"
          },
          {
            "name": "SD EMP. Target",
            "expression": [
              "",
              "VAR start_date = STARTOFMONTH('Dim - Time'[Date])",
              "",
              "VAR End_date = ENDOFMONTH('Dim - Time'[Date])",
              "",
              "RETURN sum('Fact - Employee Plan'[EMP Target])",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "SD EMP. Actual",
            "expression": [
              "",
              "VAR start_date = STARTOFMONTH('Dim - Time'[Date])",
              "",
              "VAR End_date = ENDOFMONTH('Dim - Time'[Date])",
              "",
              "RETURN CALCULATE(sum('Fact - All Sales Invoice Line'[Net Amount]),",
              "\tUSERELATIONSHIP('Fact - All Sales Invoice Line'[SALES_PERSON],",
              "\t 'Dim - Sales Person'[Employee Code]),",
              "",
              "\tFILTER(All('Dim - Time'), 'Dim - Time'[Date]>= start_date &&",
              "\t'Dim - Time'[Date] <= End_date)",
              "\t",
              "--\t,TREATAS( VALUES('Fact - Employee Plan'[Employee Code]),",
              "--\t'Fact - All Sales Invoice Line'[SALES_PERSON])",
              "\t",
              "\t)"
            ],
            "formatString": "#,0"
          },
          {
            "name": "SD EMP. %Target",
            "expression": " DIVIDE([SD EMP. Actual], [SD EMP. Target],0)-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "SD AVG .All Cost Amt",
            "expression": [
              "",
              "VAR _Year = max('Dim - Time'[Year])",
              "RETURN CALCULATE(",
              "AVERAGEX(",
              "\tFILTER(",
              "\t\tALLSELECTED( 'Dim - Time'[Month] ),",
              "\t\t            'Dim - Time'[Month] <= MAX ('Dim - Time'[Month] )",
              "\t\t),",
              "\tsum('Fact - All Sales Invoice Line'[Cost Amount])),",
              "\tFILTER('Dim - Time', 'Dim - Time'[Year] = _Year))"
            ],
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Dim - Product Level4",
        "columns": [
          {
            "name": "PROD_CAT2_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT2_CODE"
          },
          {
            "name": "PROD_CAT2_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT2_NAME"
          },
          {
            "name": "PROD_CAT3_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT3_CODE"
          },
          {
            "name": "PROD_CAT3_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT3_NAME"
          },
          {
            "name": "PROD_CAT4_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT4_CODE"
          },
          {
            "name": "PROD_CAT4_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT4_NAME"
          },
          {
            "name": "PROD_LV4_RPT",
            "dataType": "string",
            "sourceColumn": "PROD_LV4_RPT"
          },
          {
            "name": "PROD_CAT_WID",
            "dataType": "int64",
            "sourceColumn": "PROD_CAT_WID",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PROD_CAT_LV4_DH = Source{[Schema=\"dbo\",Item=\"W_PROD_CAT_LV4_DH\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_PROD_CAT_LV4_DH,{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"PROD_CAT1_NAME\", \"PROD_CAT1_CODE\", \"PROD_LV2_RPT\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"ROW_WID\", \"PROD_CAT_WID\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Inventory Quota",
        "columns": [
          {
            "name": "CHANNEL",
            "dataType": "int64",
            "sourceColumn": "CHANNEL",
            "summarizeBy": "none"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION"
          },
          {
            "name": "SC_RPT_PRD4_NAME",
            "dataType": "string",
            "sourceColumn": "SC_RPT_PRD4_NAME"
          },
          {
            "name": "SC_RPT_PRD4_CODE",
            "dataType": "string",
            "sourceColumn": "SC_RPT_PRD4_CODE"
          },
          {
            "name": "DINHMUC_TK_TB",
            "dataType": "double",
            "sourceColumn": "DINHMUC_TK_TB"
          },
          {
            "name": "DINHMUC_TK_NAM",
            "dataType": "double",
            "sourceColumn": "DINHMUC_TK_NAM"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "PROD_CAT_WID",
            "dataType": "int64",
            "sourceColumn": "PROD_CAT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          },
          {
            "name": "PLANT_TYPE",
            "dataType": "string",
            "sourceColumn": "PLANT_TYPE"
          },
          {
            "name": "Sloc WID",
            "dataType": "int64",
            "sourceColumn": "Sloc WID",
            "summarizeBy": "none"
          },
          {
            "name": "Sloc Code",
            "dataType": "string",
            "sourceColumn": "Sloc Code"
          },
          {
            "name": "Sloc Name",
            "dataType": "string",
            "sourceColumn": "Sloc Name"
          },
          {
            "name": "Q10",
            "dataType": "double",
            "sourceColumn": "Q10"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_INVENTORY_QUOTA = Source{[Schema=\"dbo\",Item=\"W_VW_INVENTORY_QUOTA\"]}[Data],",
                "    #\"Replaced Value\" = Table.ReplaceValue(dbo_W_VW_INVENTORY_QUOTA,null,0,Replacer.ReplaceValue,{\"DINHMUC_TK_TB\"}),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",null,0,Replacer.ReplaceValue,{\"DINHMUC_TK_NAM\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Replaced Value1\",{{\"PLANT_CODE\", \"Plant Code\"}, {\"TL_Q10\", \"Q10\"}, {\"SLOC_NAME\", \"Sloc Name\"}, {\"SLOC_CODE\", \"Sloc Code\"}, {\"SLOC_WID\", \"Sloc WID\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PNJP .Net Amt Quota",
            "expression": [
              " CALCULATE(",
              "\tTOTALYTD(sum( 'Fact - Inventory Quota'[DINHMUC_TK_TB]), 'Dim - Time'[Date]))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "PNJP #Q10 Quota",
            "expression": [
              " CALCULATE(",
              "\tTOTALYTD(sum( 'Fact - Inventory Quota'[Q10]), 'Dim - Time'[Date]))",
              ""
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Gem Group size",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "STT",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[ID]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Gem Group Size",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Gem Group Size]",
            "sortByColumn": "STT"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " DATATABLE(\"ID\", INTEGER, \"Gem Group Size\", STRING, {{1, \"Dưới 4.5 ly\"},",
                "{2,\"Từ 4.5 -> 5.4 ly\"},",
                "{3,\"Từ 5.4 -> 6.3 ly\"},",
                "{4,\"Từ 6.3 -> 7.2 ly\"},",
                "{5,\"Từ 7.2 -> 8.1 ly\"},",
                "{6,\"Trên 8.1 ly\"}",
                "})"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - SC Recommend",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "BASIC_MATERIAL",
            "dataType": "string",
            "sourceColumn": "BASIC_MATERIAL"
          },
          {
            "name": "GIA_VON",
            "dataType": "double",
            "sourceColumn": "GIA_VON",
            "formatString": "0"
          },
          {
            "name": "MIN",
            "dataType": "int64",
            "sourceColumn": "MIN"
          },
          {
            "name": "MAX",
            "dataType": "int64",
            "sourceColumn": "MAX"
          },
          {
            "name": "VON_TON_MIN",
            "dataType": "double",
            "sourceColumn": "VON_TON_MIN",
            "formatString": "0"
          },
          {
            "name": "VON_TON_MAX",
            "dataType": "double",
            "sourceColumn": "VON_TON_MAX",
            "formatString": "0"
          },
          {
            "name": "CAP",
            "dataType": "string",
            "sourceColumn": "CAP"
          },
          {
            "name": "GENDER",
            "dataType": "string",
            "sourceColumn": "GENDER"
          },
          {
            "name": "MATERIAL_TYPE",
            "dataType": "string",
            "sourceColumn": "MATERIAL_TYPE"
          },
          {
            "name": "EFFECTIVE_FROM",
            "dataType": "dateTime",
            "sourceColumn": "EFFECTIVE_FROM",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "EFFECTIVE_TO",
            "dataType": "dateTime",
            "sourceColumn": "EFFECTIVE_TO",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_SC_FG_RECOMMENDATIONS_F = Source{[Schema=\"dbo\",Item=\"W_SC_FG_RECOMMENDATIONS_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_SC_FG_RECOMMENDATIONS_F,{\"INTEGRATION_ID\", \"REGION\", \"FILE_WID\", \"CURRENT_FLG\",\"ROW_WID\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Camera Person",
        "columns": [
          {
            "name": "GENDER",
            "dataType": "int64",
            "sourceColumn": "Gender"
          },
          {
            "name": "ROW_WID",
            "dataType": "string",
            "sourceColumn": "ROW_WID"
          },
          {
            "name": "Dwell_Time",
            "dataType": "double",
            "sourceColumn": "Dwell_Time"
          },
          {
            "name": "Dwell_time_bucket",
            "dataType": "string",
            "sourceColumn": "Dwell_time_bucket"
          },
          {
            "name": "Style_Dwell_Time",
            "dataType": "double",
            "sourceColumn": "Style_Dwell_Time"
          },
          {
            "name": "Style_Time_bucket",
            "dataType": "string",
            "sourceColumn": "Style_Time_bucket"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",\" SELECT CONCAT_WS('_','PA', ROW_WID) ROW_WID, ",
                "\tCASE WHEN GENDER = 'F' THEN 0",
                "\t\tWHEN GENDER = 'M' THEN 1 ",
                "\t\tELSE 2 END Gender,",
                "\t1.0*(endtime - starttime)/1000 Dwell_Time,",
                "\tCASE WHEN ",
                "\t\t\t 1.0*(endtime - starttime)/1000 <300 THEN '0-5min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 <600 THEN '5-10min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 <900 THEN '10-15min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 <1800 THEN '15-30min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 <2700 THEN '30-45min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 <3600 THEN '45-60min'",
                "\t\tWHEN 1.0*(endtime - starttime)/1000 >3600 THEN 'More than 1h'",
                "\t\tEND Dwell_time_bucket,",
                "\t1.0*(Style_end - style_start)/1000 Style_Dwell_Time,",
                "\tCASE WHEN ",
                "\t\t\t 1.0*(Style_end - style_start)/1000 <300 THEN '0-5min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 <600 THEN '5-10min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 <900 THEN '10-15min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 <1800 THEN '15-30min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 <2700 THEN '30-45min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 <3600 THEN '45-60min'",
                "\t\tWHEN 1.0*(Style_end - style_start)/1000 >3600 THEN 'More than 1h'",
                "\t\tEND Style_Time_bucket",
                " FROM W_PA_PERSON_D WITH (NOLOCK) where starttime is not null",
                "",
                "/*UNION",
                "\tSELECT CAST(ROW_WID AS VARCHAR) ROW_WID, CASE WHEN GENDER ='Female' THEN 0",
                "\tWHEN GENDER ='Male' THEN 1 END Gender,",
                "\tNULL Dwell_Time, NULL Dwell_time_bucket,",
                "\tNULL Style_Dwell_Time,NULL Style_Time_bucket",
                "\tFROM pnj_rolap.dbo.W_CUSTOMER_D WITH (NOLOCK) WHERE DATASOURCE_NUM_ID = 1 and",
                "\tCUST_GRP not in ('ZDEP','Z005','Z006') */",
                "\"",
                "",
                ")",
                "in",
                "    Source"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",",
                  "    \"SELECT  [ROW_WID]",
                  "      ,[GENDER]",
                  "  FROM [DW_RAW].[dbo].[W_PA_PERSON_D]\"",
                  "   ),",
                  "    #\"Replaced Value\" = Table.ReplaceValue(Source,\"m\",\"Male\",Replacer.ReplaceValue,{\"GENDER\"}),",
                  "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"f\",\"Female\",Replacer.ReplaceText,{\"GENDER\"})",
                  "in",
                  "    #\"Replaced Value1\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Dim - Camera Stores",
        "columns": [
          {
            "name": "PA StoreID",
            "dataType": "int64",
            "sourceColumn": "PA StoreID"
          },
          {
            "name": "STORE_NAME",
            "dataType": "string",
            "sourceColumn": "STORE_NAME"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant Code"
          },
          {
            "name": "Plant_wid",
            "dataType": "int64",
            "sourceColumn": "Plant_wid"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;DW_RAW\",",
                "    dbo_PA_VW_STORE = Source{[Schema=\"dbo\",Item=\"PA_VW_STORE\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_PA_VW_STORE,{{\"PLANT_CODE\", \"Plant Code\"}, {\"STORE_ID\", \"PA StoreID\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Product Lot",
        "columns": [
          {
            "name": "Batch Number",
            "dataType": "string",
            "sourceColumn": "Batch Number"
          },
          {
            "name": "Gold Weight",
            "dataType": "double",
            "sourceColumn": "Gold Weight"
          },
          {
            "name": "Stone Weight",
            "dataType": "double",
            "sourceColumn": "Stone Weight"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Certificate 01",
            "dataType": "string",
            "sourceColumn": "Certificate 01"
          },
          {
            "name": "Certificate 02",
            "dataType": "string",
            "sourceColumn": "Certificate 02"
          },
          {
            "name": "BATCH_NUMBER2",
            "dataType": "string",
            "sourceColumn": "BATCH_NUMBER2"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                "      [BATCH_NUMBER]",
                "      ,[TL_VANG]",
                "      ,[TL_DA]",
                "      ,[KIEM_DINH01]",
                "      ,[KIEM_DINH02]",
                "      ,[ROW_WID]",
                "      ,[BATCH_NUMBER]",
                "  FROM [dbo].[W_PRODUCT_LOT_D]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"BATCH_NUMBER\", \"Batch Number\"}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{ {\"TL_VANG\", \"Gold Weight\"}, {\"TL_DA\", \"Stone Weight\"}, {\"KIEM_DINH01\", \"Certificate 01\"}, {\"KIEM_DINH02\", \"Certificate 02\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ",
                  "      ,[BATCH_NUMBER]",
                  "      ,[TL_VANG]",
                  "      ,[TL_DA]",
                  "      ,[KIEM_DINH01]",
                  "      ,[KIEM_DINH02]",
                  "      ,[ROW_WID]",
                  "  FROM [dbo].[W_PRODUCT_LOT_D]\"),",
                  "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"BATCH_NUMBER\", \"Batch Number\"}}),",
                  "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Renamed Columns\",{ {\"TL_VANG\", \"Gold Weight\"}, {\"TL_DA\", \"Stone Weight\"}, {\"KIEM_DINH01\", \"Certificate 01\"}, {\"KIEM_DINH02\", \"Certificate 02\"}})",
                  "in",
                  "    #\"Renamed Columns1\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Dim - Authoring Brands",
        "isHidden": true,
        "columns": [
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "Brands",
            "dataType": "string",
            "sourceColumn": "Brands"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_SYS_AUTHOR_BRAND_D = Source{[Schema=\"dbo\",Item=\"W_SYS_AUTHOR_BRAND_D\"]}[Data]",
                "in",
                "    dbo_W_SYS_AUTHOR_BRAND_D"
              ]
            }
          }
        ]
      },
      {
        "name": "CVR by Store by Date",
        "columns": [
          {
            "name": "DATE_WID",
            "dataType": "int64",
            "sourceColumn": "DATE_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "VISIT",
            "dataType": "int64",
            "sourceColumn": "VISIT",
            "formatString": "0"
          },
          {
            "name": "INTERACTION",
            "dataType": "int64",
            "sourceColumn": "INTERACTION"
          },
          {
            "type": "calculated",
            "name": "Conversion Rate",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " DIVIDE([CUSTOMERS],[VISIT],0)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "type": "calculated",
            "name": "Staff CVR",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " DIVIDE([CUSTOMERS], [INTERACTION],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "AMT",
            "dataType": "double",
            "sourceColumn": "AMT"
          },
          {
            "name": "CUSTOMERS",
            "dataType": "int64",
            "sourceColumn": "CUSTOMERS",
            "formatString": "0"
          },
          {
            "name": "QTY",
            "dataType": "double",
            "sourceColumn": "QTY"
          },
          {
            "type": "calculated",
            "name": "Basket size",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " DIVIDE([QTY], [CUSTOMERS],0)",
            "formatString": "0.0"
          },
          {
            "type": "calculated",
            "name": "Basket value",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": " DIVIDE([AMT], [CUSTOMERS],0)",
            "formatString": "#,0"
          },
          {
            "type": "calculated",
            "name": "Interaction Rate",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " DIVIDE([INTERACTION], [VISIT],0)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Interaction Time",
            "dataType": "double",
            "sourceColumn": "Interaction Time"
          },
          {
            "name": "Dwell Time",
            "dataType": "double",
            "sourceColumn": "Dwell Time"
          },
          {
            "name": "Layer",
            "dataType": "string",
            "sourceColumn": "Layer"
          },
          {
            "name": "Store_date",
            "dataType": "string",
            "sourceColumn": "Store_date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",",
                "\t\" SELECT * FROM W_VW_ICA_CVR_F;  \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"Interact_time\", \"Interaction Time\"}, {\"Dwell_Time\", \"Dwell Time\"}}) ",
                "",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Corr. Interaction Rate and Basket size",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),\t",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Rate],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket size]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Interaction Rate and Basket value",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),\t",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Rate],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket value]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Interaction Rate and Conversion Rate",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Rate],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Conversion Rate]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Interaction Time and Basket size",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Time],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket Size]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Interaction Time and Basket value",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Time],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket Value]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Interaction Time and Conversion Rate",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Interaction Time],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Conversion Rate]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Staff CVR and Basket size",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Staff CVR],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket Size]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Staff CVR and Basket value",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),\t",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Staff CVR],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Basket Value]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Staff CVR and Conversion Rate",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\", 'CVR by Store by Date'[Staff CVR],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Conversion Rate]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Corr. Dwell Time and Conversion Rate",
            "expression": [
              " ",
              "VAR CorrelTable = ",
              "FILTER (",
              "\tSELECTCOLUMNS('CVR by Store by Date', \"KeyIDs\", VALUES('CVR by Store by Date'[Store_date]),",
              "\t\t\"Value_X\",  'CVR by Store by Date'[Dwell Time],",
              "\t\t\"Value_Y\",  'CVR by Store by Date'[Conversion Rate]),",
              "\tAND (",
              "\t            NOT ( ISBLANK ( [Value_X] ) ),",
              "\t            NOT ( ISBLANK ( [Value_Y] ) ))",
              "            )",
              "",
              "VAR Count_Items =     COUNTROWS ( CorrelTable )",
              "VAR Sum_X =     SUMX ( CorrelTable, [Value_X] )",
              "VAR Sum_X2 =     SUMX ( CorrelTable, [Value_X] ^ 2 )",
              "VAR Sum_Y =     SUMX ( CorrelTable, [Value_Y] )",
              "VAR Sum_Y2 =     SUMX ( CorrelTable, [Value_Y] ^ 2 )",
              "VAR Sum_XY =     SUMX ( CorrelTable, [Value_X] * [Value_Y] )",
              "VAR Pearson_Numerator =     Count_Items * Sum_XY - Sum_X * Sum_Y",
              "VAR Pearson_Denominator_X =     Count_Items * Sum_X2 - Sum_X ^ 2",
              "VAR Pearson_Denominator_Y =     Count_Items * Sum_Y2 - Sum_Y ^ 2",
              "VAR Pearson_Denominator =     SQRT ( Pearson_Denominator_X * Pearson_Denominator_Y )",
              "",
              "RETURN",
              "    DIVIDE ( Pearson_Numerator, Pearson_Denominator )"
            ],
            "formatString": "0.00"
          }
        ]
      },
      {
        "name": "Fact - Employee Plan",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Plant_wid"
          },
          {
            "name": "EMP Target",
            "dataType": "double",
            "sourceColumn": "Employee Target"
          },
          {
            "name": "Effect_from",
            "dataType": "int64",
            "sourceColumn": "Effect_from"
          },
          {
            "name": "Employee Code",
            "dataType": "string",
            "sourceColumn": "Employee Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT  ",
                "\tEMPLOYEE_CODE, FORECAST_REVENUE, Plant_wid, MONTH_START_WID",
                "  FROM [PNJ_ROLAP].[dbo].[W_INC_EMP_BONUS_CONFIG_D] where FORECAST_REVENUE is not null\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"FORECAST_REVENUE\", \"Employee Target\"}, {\"MONTH_START_WID\", \"Effect_from\"}, {\"EMPLOYEE_CODE\", \"Employee Code\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Camera Area",
        "columns": [
          {
            "name": "AREA_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "AREA_ID"
          },
          {
            "name": "Floor",
            "dataType": "string",
            "sourceColumn": "Floor"
          },
          {
            "name": "STORE_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "STORE_ID"
          },
          {
            "name": "Brands",
            "dataType": "string",
            "sourceColumn": "Brands"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;DW_RAW\",",
                "    dbo_PA_AREA = Source{[Schema=\"dbo\",Item=\"PA_AREA\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_PA_AREA,{\"FILE_NAME\", \"CREATION_DATE\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"AREA_NAME\", \"Floor\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Gem Size - SAP",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "STT",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[STT]",
            "summarizeBy": "none"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Gem Size (SAP)",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Gem Size (SAP)]",
            "sortByColumn": "STT"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " DATATABLE(\"STT\", INTEGER, \"Gem Size (SAP)\", STRING, {",
                "{1, \"Dưới 3.5\"}",
                ",{2, \"Từ 3.5 - dưới 4.0 ly\"}",
                ",{3, \"Từ 4.0 - dưới 5.0 ly\"}",
                ",{4, \"Từ 5.0 - dưới 6.0 ly\"}",
                ",{5, \"Trên 6.0 ly\"}",
                "})"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Gem Size - MKT",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "STT",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[STT]",
            "summarizeBy": "none"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Gem Size (MKT)",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Gem Size (SAP)]",
            "sortByColumn": "STT"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                " DATATABLE(\"STT\", INTEGER, \"Gem Size (SAP)\", STRING, {",
                "{1, \"Dưới 6.0\"}",
                ",{2, \"Từ 6.0 - dưới 6.3 ly\"}",
                ",{3, \"Từ 6.3 - dưới 7.2 ly\"}",
                ",{4, \"Từ 7.2 - dưới 8.0 ly\"}",
                ",{5, \"Từ 8.0 - dưới 8.2 ly\"}",
                ",{6, \"Từ 8.2 - dưới 8.9 ly\"}",
                ",{7, \"Từ 8.9 - dưới 9.1 ly\"}",
                ",{8, \"Từ 9.1 - dưới 9.5 ly\"}",
                ",{9, \"Trên 9.5 ly\"}",
                "",
                "",
                "})"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Production Plan Order",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "description": "Production Plan Agre",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Sales Order Num",
            "dataType": "string",
            "sourceColumn": "Sales Order Num"
          },
          {
            "name": "Planned Order",
            "dataType": "string",
            "sourceColumn": "Planned Order"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "MRP_CONTROLLER_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_CONTROLLER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Total Planned Qty",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Planned Qty",
            "summarizeBy": "none"
          },
          {
            "name": "Require Date",
            "dataType": "int64",
            "sourceColumn": "Require Date",
            "summarizeBy": "none"
          },
          {
            "name": "Production Order",
            "dataType": "string",
            "sourceColumn": "Production Order"
          },
          {
            "name": "Internal Date",
            "dataType": "int64",
            "sourceColumn": "Internal Date",
            "summarizeBy": "none"
          },
          {
            "name": "Production Oder Qty",
            "dataType": "double",
            "sourceColumn": "Production Oder Qty"
          },
          {
            "name": "Production Order Status",
            "dataType": "string",
            "sourceColumn": "Production Order Status"
          },
          {
            "name": "SO Type",
            "dataType": "string",
            "sourceColumn": "SO Type"
          },
          {
            "name": "Actual Delivery DT",
            "dataType": "int64",
            "sourceColumn": "ACTUAL_DEL_DT",
            "summarizeBy": "none"
          },
          {
            "name": "ALLOCATED_QTY",
            "dataType": "double",
            "sourceColumn": "ALLOCATED_QTY",
            "formatString": "0"
          },
          {
            "name": "Actual Delivery Qty",
            "dataType": "double",
            "sourceColumn": "Actual Delivery Qty"
          },
          {
            "name": "PPA_CREATED_DT",
            "dataType": "int64",
            "sourceColumn": "PPA_CREATED_DT"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT"
          },
          {
            "name": "Cancel Flag",
            "dataType": "boolean",
            "sourceColumn": "Cancel Flag"
          },
          {
            "name": "SO_CREATED_DT",
            "dataType": "int64",
            "sourceColumn": "SO_CREATED_DT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"",
                "    SELECT [PLANT_WID]",
                "      ,[PLANNED_ORDER]",
                "      ,[PRODUCT_WID]",
                "      ,[MRP_CONTROLLER_WID]",
                "      ,[TOTAL_PLANNED_QTY]",
                "      ,[ALLOCATED_QTY]",
                "      ,[CREATED_ON_DT]",
                "      ,[REQUIRE_DATE]",
                "      ,[PRODUCTION_ORDER]",
                "      ,[INTERNAL_DATE]",
                "      ,[PRODUCTION_ORDER_QTY]",
                "      ,[PRODUCTION_ORDER_STATUS]",
                "      ,[ACT_GR_QTY]",
                "      ,[SALES_ORDER_NUM]",
                "--      ,[SALES_ORDER_ITEM]",
                "      ,[SALES_ORDER_TYPE]",
                "--      ,[REQUIREMENT_DT]",
                "      ,ACTUAL_DEL_DT",
                "      ,SO_CREATED_DT",
                "      ,PPA_CREATED_DT",
                ",CANCEL_PRODUCTION_ORDER_FLG",
                "",
                "",
                "FROM [PNJ_ROLAP].[dbo].[W_VW_PRODUCTION_PLAN_ORDER_F]\"),  ",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"SALES_ORDER_NUM\", \"Sales Order Num\"}, {\"PLANNED_ORDER\", \"Planned Order\"}, {\"TOTAL_PLANNED_QTY\", \"Total Planned Qty\"}, {\"REQUIRE_DATE\", \"Require Date\"}, {\"PRODUCTION_ORDER\", \"Production Order\"}, {\"INTERNAL_DATE\", \"Internal Date\"}, {\"PRODUCTION_ORDER_QTY\", \"Production Oder Qty\"}, {\"PRODUCTION_ORDER_STATUS\", \"Production Order Status\"}, {\"SALES_ORDER_TYPE\", \"SO Type\"}, {\"ACT_GR_QTY\", \"Actual Delivery Qty\"}, {\"CANCEL_PRODUCTION_ORDER_FLG\", \"Cancel Flag\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PLO Order .Qty",
            "expression": " SUM('Fact - Production Plan Order'[ALLOCATED_QTY])",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Fact - Production Plan Agreement",
        "columns": [
          {
            "name": "Order Type",
            "dataType": "string",
            "sourceColumn": "Order Type"
          },
          {
            "name": "MRP",
            "dataType": "string",
            "sourceColumn": "MRP"
          },
          {
            "name": "Prity Of Gold",
            "dataType": "double",
            "sourceColumn": "Prity Of Gold",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "INVENTORY_PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "INVENTORY_PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Production Planned",
            "dataType": "string",
            "sourceColumn": "Production Planned"
          },
          {
            "name": "Customer Requirement DT",
            "dataType": "int64",
            "sourceColumn": "Customer Requirement DT",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Created DT",
            "dataType": "int64",
            "sourceColumn": "Customer Created DT",
            "summarizeBy": "none"
          },
          {
            "name": "Sales Requirement DT",
            "dataType": "int64",
            "sourceColumn": "Sales Requirement DT",
            "summarizeBy": "none"
          },
          {
            "name": "Sales Create DT",
            "dataType": "int64",
            "sourceColumn": "Sales Create DT",
            "summarizeBy": "none"
          },
          {
            "name": "TO_DATE",
            "dataType": "int64",
            "sourceColumn": "TO_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCTION_PLANNED_ALLOCATED",
            "dataType": "double",
            "sourceColumn": "PRODUCTION_PLANNED_ALLOCATED"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PRODUCTION_PLAN_AGREEMENT_F = Source{[Schema=\"dbo\",Item=\"W_PRODUCTION_PLAN_AGREEMENT_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_PRODUCTION_PLAN_AGREEMENT_F,{\"DATASOURCE_NUM_ID\", \"FILE_WID\", \"INTEGRATION_ID\", \"PRD_GROUP_4_CODE\", \"PRD_GROUP_4_NAME\", \"PRODUCT_GROUP_7\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"ORDER_TYPE\", \"Order Type\"}, {\"PURITY_OF_GOLD\", \"Prity Of Gold\"}, {\"PRODUCTION_PLANNED\", \"Production Planned\"}, {\"SALES_REQUIREMENT_DATE\", \"Sales Requirement DT\"}, {\"SALES_CREATE_DATE\", \"Sales Create DT\"}, {\"CUSTOMER_CREATE_DATE\", \"Customer Created DT\"}, {\"CUSTOMER_REQUIREMENT_DATE\", \"Customer Requirement DT\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Agreement .Qty",
            "expression": [
              "CALCULATE(sum([PRODUCTION_PLANNED_ALLOCATED]),",
              "USERELATIONSHIP('Dim - Time'[ROW_WID], 'Fact - Production Plan Agreement'[Sales Create DT]))"
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Camera Gender",
        "columns": [
          {
            "name": "ids",
            "dataType": "int64",
            "sourceColumn": "ids"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",\"SELECT * from PA_gender\")",
                "in",
                "\tSource"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Camera Hour",
        "columns": [
          {
            "name": "Hrs",
            "dataType": "int64",
            "sourceColumn": "Hrs",
            "summarizeBy": "none"
          },
          {
            "name": "Hours",
            "dataType": "string",
            "sourceColumn": "Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",\"SELECT * from W_PA_HOUR\")",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Camera Sections",
        "columns": [
          {
            "name": "CAMERA_SECTION_ID",
            "dataType": "int64",
            "sourceColumn": "CAMERA_SECTION_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Section name",
            "dataType": "string",
            "sourceColumn": "Section name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;DW_RAW\",\"SELECT CAMERA_SECTION_ID, SECTION_NAME FROM dbo.PA_CAMERA_SECTION WITH (NOLOCK) where section_name is not null\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"SECTION_NAME\", \"Section name\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Time Compare",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          },
          {
            "name": "DAY_NAME",
            "dataType": "string",
            "sourceColumn": "DAY_NAME"
          },
          {
            "name": "DAY_OF_MONTH",
            "dataType": "int64",
            "sourceColumn": "DAY_OF_MONTH"
          },
          {
            "name": "DAY_OF_WEEK",
            "dataType": "int64",
            "sourceColumn": "DAY_OF_WEEK"
          },
          {
            "name": "MONTH_NAME",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Prev. Date",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "Prev. Date",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [ROW_WID]",
                "      ,[CALENDAR_DATE]",
                "      ,[DAY_NAME]",
                "      ,[DAY_OF_MONTH]",
                "      ,[DAY_OF_WEEK]",
                "      ,[MONTH_NAME]",
                "      ,[PER_NAME_YEAR]",
                "      ,[PER_NAME_MONTH]",
                "  FROM [PNJ_ROLAP].[dbo].[W_DAY_D]\"),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"CALENDAR_DATE\", type date}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"PER_NAME_YEAR\", \"Year\"}, {\"CALENDAR_DATE\", \"Prev. Date\"}, {\"PER_NAME_MONTH\", \"Month\"} }),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Year\", Int64.Type}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type1\", each [Year] >= 2015)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - MRP Controller",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "MRP Code",
            "dataType": "string",
            "sourceColumn": "MRP Code"
          },
          {
            "name": "MRP Name",
            "dataType": "string",
            "sourceColumn": "MRP Name"
          },
          {
            "name": "MRP Description",
            "dataType": "string",
            "sourceColumn": "MRP Description"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_MRP_CONTROLLER_D = Source{[Schema=\"dbo\",Item=\"W_MRP_CONTROLLER_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_MRP_CONTROLLER_D,{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"BUSN_AREA_CODE\", \"PROFIT_CENTER_WID\", \"RECIPIENT_TYPE\", \"OBJECT_ID\", \"TENANT_ID\", \"TELEPHONE_NUM\", \"PURCH_GRP_WID\", \"RECIPIENT_NAME\", \"PURCH_GRP_CODE\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"MRP_NAME\", \"MRP Name\"}, {\"MRP_DESC\", \"MRP Description\"}, {\"MRP_CODE\", \"MRP Code\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Time (Lunar)",
        "columns": [
          {
            "name": "LUNAR_DT",
            "dataType": "int64",
            "sourceColumn": "LUNAR_DT"
          },
          {
            "name": "Lunar Day",
            "dataType": "int64",
            "sourceColumn": "Lunar Day"
          },
          {
            "name": "Lunar Year",
            "dataType": "int64",
            "sourceColumn": "Lunar Year"
          },
          {
            "name": "Day Name",
            "dataType": "string",
            "sourceColumn": "Day Name"
          },
          {
            "name": "Lunar Date",
            "dataType": "dateTime",
            "sourceColumn": "Lunar Date",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          },
          {
            "type": "calculated",
            "name": "Lunar LY",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": " DATEADD('Dim - Time (Lunar)'[Lunar Date],-1,YEAR)"
          },
          {
            "name": "Calendar Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"select LUNAR_DATE_WID LUNAR_DT,LUNAR_DAY,LUNAR_YEAR,DAY_NAME,",
                "\tconvert(date, convert(varchar(8), LUNAR_DATE_WID),120) LUNAR_DATE, ROW_WID, CALENDAR_DATE",
                " FROM W_DAY_D where CAL_YEAR >= 2020 and lunar_month in (1,12)\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"LUNAR_DATE\", \"Lunar Date\"}, {\"LUNAR_YEAR\", \"Lunar Year\"}, {\"LUNAR_DAY\", \"Lunar Day\"}, {\"DAY_NAME\", \"Day Name\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Lunar Date\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"CALENDAR_DATE\", \"Calendar Date\"}})",
                "in ",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Inventory Aging",
        "columns": [
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "BATCH_WID",
            "dataType": "int64",
            "sourceColumn": "BATCH_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Net Qty",
            "dataType": "double",
            "sourceColumn": "Net Qty"
          },
          {
            "name": "First GR",
            "dataType": "dateTime",
            "sourceColumn": "First GR"
          },
          {
            "name": "Last GR",
            "dataType": "dateTime",
            "sourceColumn": "Last GR"
          },
          {
            "name": "Aging",
            "dataType": "int64",
            "sourceColumn": "Aging"
          },
          {
            "type": "calculated",
            "name": "Aging group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "if(ISBLANK( 'Fact - Inventory Aging'[Aging]), BLANK(),",
              "if(and ('Fact - Inventory Aging'[Aging]>=0 ,'Fact - Inventory Aging'[Aging]<=90), \"a. <=3 months\",",
              "\tif('Fact - Inventory Aging'[Aging]<=180, \"b. 3 - 6 months\",",
              "\tif('Fact - Inventory Aging'[Aging]<=270, \"c. 6 - 9 months\",",
              "\tif('Fact - Inventory Aging'[Aging]<=365, \"d. 9 - 12 months\",",
              "\tif('Fact - Inventory Aging'[Aging] >365, \"e. >12 months\"))))))"
            ]
          },
          {
            "name": "Last Sold",
            "dataType": "dateTime",
            "sourceColumn": "Last Sold"
          },
          {
            "name": "_END",
            "dataType": "int64",
            "sourceColumn": "_END"
          },
          {
            "name": "First Sold",
            "dataType": "dateTime",
            "sourceColumn": "First Sold"
          },
          {
            "type": "calculated",
            "name": "Last Sold group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "if(ISBLANK( 'Fact - Inventory Aging'[Time Last Sold]), \"f. Chưa bán\",",
              "if(and ('Fact - Inventory Aging'[Time Last Sold]>=0 ,'Fact - Inventory Aging'[Time Last Sold]<=3), \"a. <=3 months\",",
              "\tif('Fact - Inventory Aging'[Time Last Sold]<=6, \"b. 3 - 6 months\",",
              "\tif('Fact - Inventory Aging'[Time Last Sold]<=9, \"c. 6 - 9 months\",",
              "\tif('Fact - Inventory Aging'[Time Last Sold]<=12, \"d. 9 - 12 months\",",
              "\tif('Fact - Inventory Aging'[Time Last Sold] >12, \"e. >12 months\"))))))"
            ]
          },
          {
            "name": "Time Last Sold",
            "dataType": "int64",
            "sourceColumn": "Time Last Sold"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT PRODUCT_WID,PLANT_WID,BATCH_WID,_START,_END,_CURRENT,QTY, Aging,LAST_SOLD,FIRST_SOLD,TIME_SOLD FROM W_VW_INVENTORY_AGE_F\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"QTY\", \"Net Qty\"}, {\"_START\", \"First GR\"} ,{\"_CURRENT\", \"Last GR\"}, {\"LAST_SOLD\", \"Last Sold\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"FIRST_SOLD\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"FIRST_SOLD\", \"First Sold\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"Last GR\", type date}, {\"First GR\", type date}, {\"Last Sold\", type date}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Changed Type1\",{{\"TIME_SOLD\", \"Time Last Sold\"}})",
                "in",
                "    #\"Renamed Columns2\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "DateMax",
            "expression": [
              " ",
              "VAR MaxDate = CALCULATE(MAX('Dim - Time'[Date]), CROSSFILTER( 'Dim - Time'[Date], 'Fact - Inventory Aging'[Last GR], Both )) ",
              "RETURN",
              "IF",
              "(",
              "       MaxDate < TODAY(),",
              "       TODAY(),",
              "       MaxDate ",
              "    )"
            ],
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "#Gobal Stock Aging",
            "expression": [
              " ",
              "VAR TEMP = SUMMARIZE('Fact - Inventory Aging','Fact - Inventory Aging'[PRODUCT_WID],",
              "    'Fact - Inventory Aging'[BATCH_WID],",
              "    \"Agingx\", DATEDIFF(MIN('Fact - Inventory Aging'[First GR]), [DateMax], DAY))",
              "",
              "return AVERAGEX(TEMP,[Agingx])"
            ],
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "#Current Stock Aging_old",
            "expression": [
              " ",
              "",
              "VAR _CURRENT =  TODAY()",
              "VAR TEMP = SUMMARIZE('Fact - Inventory Aging','Fact - Inventory Aging'[PRODUCT_WID],",
              "    'Fact - Inventory Aging'[BATCH_WID],",
              "    \"Agingx\", DATEDIFF(MAX('Fact - Inventory Aging'[Last GR]) , _CURRENT , DAY))",
              "",
              "return AVERAGEX(TEMP,[Agingx])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "#Current Stock Aging",
            "expression": " AVERAGEX('Fact - Inventory Aging', 'Fact - Inventory Aging'[Aging])"
          }
        ]
      },
      {
        "name": "Fact - Sales Order Line",
        "columns": [
          {
            "name": "SO Number",
            "dataType": "string",
            "sourceColumn": "SO Number"
          },
          {
            "name": "SO Item",
            "dataType": "string",
            "sourceColumn": "SO Item"
          },
          {
            "name": "ORDER_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "ORDER_ON_DT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SALES_ORDER_CAT",
            "dataType": "string",
            "sourceColumn": "SALES_ORDER_CAT"
          },
          {
            "name": "SO Type",
            "dataType": "string",
            "sourceColumn": "SO Type"
          },
          {
            "name": "ORDER_QTY",
            "dataType": "double",
            "sourceColumn": "ORDER_QTY"
          },
          {
            "name": "Net Amt",
            "dataType": "double",
            "sourceColumn": "Net Amt"
          },
          {
            "name": "COST_AMT",
            "dataType": "double",
            "sourceColumn": "COST_AMT"
          },
          {
            "name": "TAX_AMT",
            "dataType": "double",
            "sourceColumn": "TAX_AMT"
          },
          {
            "name": "NET_PRICE",
            "dataType": "double",
            "sourceColumn": "NET_PRICE"
          },
          {
            "name": "BASE_UOM_CODE",
            "dataType": "string",
            "sourceColumn": "BASE_UOM_CODE"
          },
          {
            "name": "SALES_UOM_CODE",
            "dataType": "string",
            "sourceColumn": "SALES_UOM_CODE"
          },
          {
            "name": "UOM_CONVERSION",
            "dataType": "double",
            "sourceColumn": "UOM_CONVERSION"
          },
          {
            "name": "GROSS_WEIGHT",
            "dataType": "double",
            "sourceColumn": "GROSS_WEIGHT"
          },
          {
            "name": "NET_WEIGHT",
            "dataType": "double",
            "sourceColumn": "NET_WEIGHT"
          },
          {
            "name": "REF_DOC_NUM",
            "dataType": "string",
            "sourceColumn": "REF_DOC_NUM"
          },
          {
            "name": "STORAGE_LOC_CODE",
            "dataType": "string",
            "sourceColumn": "STORAGE_LOC_CODE"
          },
          {
            "name": "Channel Code",
            "dataType": "string",
            "sourceColumn": "Channel Code"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CUSTOMER_SOLD_TO_LOC_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_SOLD_TO_LOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "VOUCHER",
            "dataType": "string",
            "sourceColumn": "VOUCHER"
          },
          {
            "name": "VOUCHER_WID",
            "dataType": "int64",
            "sourceColumn": "VOUCHER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Discount Amount",
            "dataType": "double",
            "sourceColumn": "Discount Amount"
          },
          {
            "name": "STORAGE_LOC_WID",
            "dataType": "int64",
            "sourceColumn": "STORAGE_LOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SERI",
            "dataType": "string",
            "sourceColumn": "SERI"
          },
          {
            "name": "PSI_FLG",
            "dataType": "boolean",
            "sourceColumn": "PSI_FLG"
          },
          {
            "name": "DC_FLG",
            "dataType": "boolean",
            "sourceColumn": "DC_FLG"
          },
          {
            "name": "Requirement Delivery DT",
            "dataType": "int64",
            "sourceColumn": "Requirement Delivery DT",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery DT",
            "dataType": "int64",
            "sourceColumn": "Delivery DT",
            "summarizeBy": "none"
          },
          {
            "name": "GI DT",
            "dataType": "int64",
            "sourceColumn": "GI DT",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Qty",
            "dataType": "double",
            "sourceColumn": "Delivery Qty"
          },
          {
            "name": "Open Delivery Qty",
            "dataType": "double",
            "sourceColumn": "Open Delivery Qty"
          },
          {
            "type": "calculated",
            "name": "SO Created PLan",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " LOOKUPVALUE('Fact - Production Plan Agreement'[Customer Created DT], 'Fact - Production Plan Agreement'[Customer Requirement DT], 'Fact - Sales Order Line'[Requirement Delivery DT])"
          },
          {
            "type": "calculated",
            "name": "SO Created Ontime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if(ISBLANK('Fact - Sales Order Line'[SO Created PLan]), \"\", If('Fact - Sales Order Line'[Create On] - 'Fact - Sales Order Line'[SO Created PLan] > 0, \"Dung Quy Dinh\", \"Sai Quy Dinh\"))"
          },
          {
            "name": "Create On",
            "dataType": "int64",
            "sourceColumn": "Create On",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"",
                "    SELECT [SALES_ORDER_NUM]",
                "      ,[SALES_ORDER_ITEM]",
                "      ,[ORDER_ON_DT_WID]",
                "      ,[SALES_ORDER_CAT]",
                "      ,[SALES_ORDER_TYPE]",
                "      ,[ORDER_QTY]",
                "      ,[NET_AMT]",
                "      ,[COST_AMT]",
                "      ,[TAX_AMT]",
                "      ,[NET_PRICE]",
                "      ,[BASE_UOM_CODE]",
                "      ,[SALES_UOM_CODE]",
                "      ,[UOM_CONVERSION]",
                "      ,[GROSS_WEIGHT]",
                "      ,[NET_WEIGHT]",
                "      ,[WEIGHT_UOM]",
                "      ,[VOLUME]",
                "      ,[VOLUME_UOM]",
                "      ,[CURRENCY_CODE]",
                "      ,[SALES_PROD_CAT]",
                "      ,[ITEM_TYPE_CODE]",
                "      ,[REF_DOC_NUM]",
                "      ,[REF_DOC_ITEM]",
                "      ,[STORAGE_LOC_CODE]",
                "      ,[CUSTOMER_CAT]",
                "      ,[ROUTE_CODE]",
                "      ,[CONDITION_PRICE]",
                "      ,[CONDITION_UOM]",
                "      ,[PROFIT_CENTER_CODE]",
                "      ,[DELIVERY_GROUP]",
                "      ,[SALES_ORG_CODE]",
                "      ,[CHANNEL_CODE]",
                "      ,[SALES_DIVISION_CODE]",
                "      ,[DEPOT_CODE]",
                "      ,[SALES_TEAM_CODE]",
                "      ,[BRANCH_CODE]",
                "      ,[REGION_CODE]",
                "      ,[PROVINCE_CODE]",
                "      ,[DELIVERY_TEAM_CODE]",
                "      ,[CTRL_AREA_CODE]",
                "      ,[SALES_PERSON_CODE]",
                "      ,[ORDER_REASON_CODE]",
                "      ,[ORDER_REJECTION_CODE]",
                "      ,[REJECT_STATUS]",
                "      ,[SALES_ORDER_DESC]",
                "      ,[HEADER_PROMOTION_DESC]",
                "      ,[PROMOTION_CODE]",
                "      ,[PROMOTION_DESC]",
                "      ,[PSI_FLG]",
                "      ,[DC_FLG]",
                "      ,[DISCOUNT_LINE_FLG]",
                "      ,[FREE_ITEM_FLG]",
                "      ,[RETURN_ITEM_FLG]",
                "      ,[PRODUCT_WID]",
                "      ,[CUSTOMER_SOLD_TO_LOC_WID]",
                "      ,[COMPANY_WID]",
                "      ,[PLANT_WID]",
                "      ,[LAST_CHANGED_BY]",
                "      ,[CREATED_ON_DT]",
                "      ,[CHANGED_ON_DT]",
                "      ,[DELETE_FLG]",
                "      ,[X_CUSTOM]",
                "      ,[TENANT_ID]",
                "      ,[LAST_UPDATED_DT]",
                "      ,[SALES_DEAL_WID]",
                "      ,[VOUCHER]",
                "      ,[VOUCHER_WID]",
                "      ,[DISCOUNT_AMT]",
                "      ,[STORAGE_LOC_WID]",
                "      ,[SERI]",
                "      ,[DOC_CONDITION_TYPE]",
                "      ,[PO_TYPE]",
                "      ,[CUST_CARD_DESC]",
                "      ,[REQ_DELIVERY_DT]",
                "      ,[DELIVERY_DT]",
                "      ,[GI_DT]",
                "      ,[DELIVERY_QTY]",
                "      ,[OPEN_DEL_QTY]",
                "      ,CREATED_ON_DT",
                "  FROM [PNJ_ROLAP].[dbo].[W_SALES_ORDER_LINE_F] WHERE DELETE_FLG is null and (DELIVERY_DELETE_FLG is null or DELIVERY_DELETE_FLG = 0) \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"SALES_ORDER_NUM\", \"SO Number\"}, {\"SALES_ORDER_ITEM\", \"SO Item\"}, {\"SALES_ORDER_TYPE\", \"SO Type\"}, {\"NET_AMT\", \"Net Amt\"}, {\"CHANNEL_CODE\", \"Channel Code\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"SALES_DIVISION_CODE\", \"SALES_ORG_CODE\", \"CONDITION_PRICE\", \"CONDITION_UOM\", \"PROFIT_CENTER_CODE\", \"DELIVERY_GROUP\", \"CUSTOMER_CAT\", \"ROUTE_CODE\", \"REF_DOC_ITEM\", \"WEIGHT_UOM\", \"VOLUME\", \"VOLUME_UOM\", \"CURRENCY_CODE\", \"SALES_PROD_CAT\", \"ITEM_TYPE_CODE\",\"DEPOT_CODE\", \"SALES_TEAM_CODE\", \"BRANCH_CODE\", \"REGION_CODE\", \"PROVINCE_CODE\", \"DELIVERY_TEAM_CODE\", \"CTRL_AREA_CODE\", \"SALES_PERSON_CODE\", \"ORDER_REASON_CODE\", \"ORDER_REJECTION_CODE\", \"REJECT_STATUS\", \"SALES_ORDER_DESC\", \"HEADER_PROMOTION_DESC\", \"PROMOTION_CODE\", \"PROMOTION_DESC\", \"DISCOUNT_LINE_FLG\", \"FREE_ITEM_FLG\", \"RETURN_ITEM_FLG\", \"LAST_CHANGED_BY\", \"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"DELETE_FLG\", \"X_CUSTOM\", \"TENANT_ID\", \"LAST_UPDATED_DT\", \"SALES_DEAL_WID\", \"DOC_CONDITION_TYPE\", \"PO_TYPE\", \"CUST_CARD_DESC\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"DISCOUNT_AMT\", \"Discount Amount\"}, {\"GI_DT\", \"GI DT\"}, {\"DELIVERY_QTY\", \"Delivery Qty\"}, {\"OPEN_DEL_QTY\", \"Open Delivery Qty\"}, {\"DELIVERY_DT\", \"Delivery DT\"}, {\"REQ_DELIVERY_DT\", \"Requirement Delivery DT\"}, {\"CREATED_ON_DT2\", \"Create On\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Sales Person",
        "columns": [
          {
            "name": "Employee_Wid",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Employee_Wid"
          },
          {
            "name": "Employee Code",
            "dataType": "string",
            "sourceColumn": "Employee Code"
          },
          {
            "name": "Employee Name",
            "dataType": "string",
            "sourceColumn": "Employee Name"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "type": "calculated",
            "name": "Full Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Dim - Sales Person'[Employee Code]&\" - \"&'Dim - Sales Person'[Employee Name]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT  ROW_WID, CUST_CODE, CUST_NAME,GENDER from W_CUSTOMER_D where CUST_GRP = 'ZEPE'\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"CUST_CODE\", \"Employee Code\"}, {\"CUST_NAME\", \"Employee Name\"}, {\"GENDER\", \"Gender\"}, {\"ROW_WID\", \"Employee_Wid\"}})",
                "in ",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - SO Schedule Line",
        "columns": [
          {
            "name": "SO Number",
            "dataType": "string",
            "sourceColumn": "SO Number"
          },
          {
            "name": "SO Item",
            "dataType": "string",
            "sourceColumn": "SO Item"
          },
          {
            "name": "Schedule Item",
            "dataType": "int64",
            "sourceColumn": "Schedule Item",
            "summarizeBy": "none"
          },
          {
            "name": "ORDER_ON_DT_WID",
            "dataType": "int64",
            "sourceColumn": "ORDER_ON_DT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Order Qty",
            "dataType": "double",
            "sourceColumn": "Order Qty"
          },
          {
            "name": "Confirm Qty",
            "dataType": "double",
            "sourceColumn": "Confirm Qty"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CUSTOMER_SOLD_TO_LOC_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_SOLD_TO_LOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT",
            "summarizeBy": "none"
          },
          {
            "name": "REQ_DELIVERY_DT",
            "dataType": "int64",
            "sourceColumn": "REQ_DELIVERY_DT",
            "summarizeBy": "none"
          },
          {
            "name": "DELIVERY_DT",
            "dataType": "int64",
            "sourceColumn": "DELIVERY_DT",
            "summarizeBy": "none"
          },
          {
            "name": "GI Date",
            "dataType": "int64",
            "sourceColumn": "GI Date",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Qty",
            "dataType": "double",
            "sourceColumn": "Delivery Qty"
          },
          {
            "name": "Open Del Qty",
            "dataType": "double",
            "sourceColumn": "Open Del Qty",
            "summarizeBy": "max"
          },
          {
            "type": "calculated",
            "name": "SO Ontime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if(AND('Fact - SO Schedule Line'[REQ_DELIVERY_DT] - 'Fact - SO Schedule Line'[GI Date] >= 0, 'Fact - SO Schedule Line'[Delivery Qty] >0), \"Dung Hen\", \"Tre Hen\")"
          },
          {
            "name": "PURCH_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_NUM"
          },
          {
            "name": "SO Type",
            "dataType": "string",
            "sourceColumn": "SO Type"
          },
          {
            "name": "REASON_REJECTION",
            "dataType": "string",
            "sourceColumn": "REASON_REJECTION"
          },
          {
            "name": "SO_TYPE_WID",
            "dataType": "int64",
            "sourceColumn": "SO_TYPE_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_SO_SCHEDULE_LINE_F = Source{[Schema=\"dbo\",Item=\"W_VW_SO_SCHEDULE_LINE_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_SO_SCHEDULE_LINE_F,{\"ROW_WID\", \"DATASOURCE_NUM_ID\", \"INTEGRATION_ID\", \"CHANGED_ON_DT\", \"DELETE_FLG\", \"X_CUSTOM\", \"TENANT_ID\", \"LAST_UPDATED_DT\", \"LAST_CHANGED_BY\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"CONFIRMED_QTY\", \"Confirm Qty\"}, {\"SALES_UOM_CODE\", \"UOM\"}, {\"DELIVERY_QTY\", \"Delivery Qty\"}, {\"OPEN_DEL_QTY\", \"Open Del Qty\"}, {\"ORDER_QTY\", \"Order Qty\"}, {\"SCHEDULE_LINE_NUM\", \"Schedule Item\"}, {\"SALES_ORDER_ITEM\", \"SO Item\"}, {\"SALES_ORDER_NUM\", \"SO Number\"}, {\"GI_DT\", \"GI Date\"}, {\"SALES_ORDER_TYPE\", \"SO Type\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each ([REASON_REJECTION] = \"          \"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Booklet Quota",
        "columns": [
          {
            "name": "Date_Key",
            "dataType": "int64",
            "sourceColumn": "Date_Key",
            "summarizeBy": "none"
          },
          {
            "name": "TO_DATE",
            "dataType": "int64",
            "sourceColumn": "TO_DATE"
          },
          {
            "name": "Stage",
            "dataType": "string",
            "sourceColumn": "Stage"
          },
          {
            "name": "STK Keeper Code",
            "dataType": "string",
            "sourceColumn": "STK Keeper Code"
          },
          {
            "name": "STK Keeper Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "STK Keeper Name"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "TurnOver Qty",
            "dataType": "double",
            "sourceColumn": "TurnOver Qty"
          },
          {
            "name": "TurnOver Q10",
            "dataType": "double",
            "sourceColumn": "TurnOver Q10"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT * from W_DM_VQ_DAUSO_F\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"LAST_UPDATED_DT\", \"DATASOURCE_NUM_ID\", \"INTEGRATION_ID\", \"FILE_WID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"TURNOVER_QTY\", \"TurnOver Qty\"}, {\"TURNOVER_Q10\", \"TurnOver Q10\"}, {\"MA_NV\", \"Employee Code\"}, {\"MA_DAU_SO\", \"STK Keeper Code\"}, {\"DAU_SO\", \"STK Keeper Name\"}, {\"CONG_DOAN\", \"Stage\"}, {\"FROM_DATE\", \"Date_Key\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"Employee Code\"}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Removed Columns1\",{\"BOOKLET_WID\"})",
                "in",
                "    #\"Removed Columns2\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PNJP Keeper TurnOver .Q10",
            "expression": [
              "",
              "VAR SelectedDate = MAX('Dim - Time'[ROW_WID])",
              "",
              "RETURN CALCULATE(",
              "\tAVERAGEX('Fact - Booklet Quota', 'Fact - Booklet Quota'[TurnOver Q10]),",
              "\t\tFILTER( 'Fact - Booklet Quota', 'Fact - Booklet Quota'[Date_Key] <=  SelectedDate &&",
              "\t\t 'Fact - Booklet Quota'[TO_DATE] >= SelectedDate))"
            ]
          },
          {
            "name": "PNJP Keeper TurnOver .Qty",
            "expression": [
              "",
              "VAR SelectedDate = MAX('Dim - Time'[ROW_WID])",
              "",
              "RETURN CALCULATE(",
              "\t\tAVERAGEX('Fact - Booklet Quota', 'Fact - Booklet Quota'[TurnOver Qty]),",
              "\t\tFILTER( 'Fact - Booklet Quota', 'Fact - Booklet Quota'[Date_Key] <=  SelectedDate &&",
              "\t\t 'Fact - Booklet Quota'[TO_DATE] >= SelectedDate))",
              ""
            ]
          }
        ]
      },
      {
        "name": "Fact - Capacity Segment",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "CAPACITY_ID",
            "dataType": "int64",
            "sourceColumn": "CAPACITY_ID"
          },
          {
            "name": "NO_IND_CAPACITY",
            "dataType": "int64",
            "sourceColumn": "NO_IND_CAPACITY"
          },
          {
            "name": "START_TIME",
            "dataType": "int64",
            "sourceColumn": "START_TIME"
          },
          {
            "name": "END_TIME",
            "dataType": "int64",
            "sourceColumn": "END_TIME"
          },
          {
            "name": "BREAK_DURATION",
            "dataType": "int64",
            "sourceColumn": "BREAK_DURATION"
          },
          {
            "name": "CAPACITY_UTILIZATION",
            "dataType": "int64",
            "sourceColumn": "CAPACITY_UTILIZATION"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "Total Resource",
            "dataType": "double",
            "sourceColumn": "Total Resource"
          },
          {
            "name": "FACT_CAL_ID",
            "dataType": "string",
            "sourceColumn": "FACT_CAL_ID"
          },
          {
            "name": "WORK_CENTER_WID",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_WID"
          },
          {
            "name": "OBJECT_ID",
            "dataType": "string",
            "sourceColumn": "OBJECT_ID"
          },
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_WORKCENTER_CAPACITY_SEGMENT_D = Source{[Schema=\"dbo\",Item=\"W_VW_WORKCENTER_CAPACITY_SEGMENT_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_WORKCENTER_CAPACITY_SEGMENT_D,{{\"TOTAL_RESOURCE\", \"Total Resource\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ".PNJP Total Resource",
            "expression": " CALCULATE(sum('Fact - Capacity Segment'[Total Resource]))",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Work Center",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "WORK_CENTER_NUM",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "WORK_CENTER_NAME",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_NAME"
          },
          {
            "name": "WORK_CENTER_CATEGORY",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_CATEGORY"
          },
          {
            "name": "OBJECT_ID",
            "dataType": "string",
            "sourceColumn": "OBJECT_ID"
          },
          {
            "name": "OBJECT_TYPE",
            "dataType": "string",
            "sourceColumn": "OBJECT_TYPE"
          },
          {
            "name": "INV_ORG_CODE",
            "dataType": "string",
            "sourceColumn": "INV_ORG_CODE"
          },
          {
            "name": "CAPACITY_ID",
            "dataType": "string",
            "sourceColumn": "CAPACITY_ID"
          },
          {
            "name": "CAPACITY_NAME",
            "dataType": "string",
            "sourceColumn": "CAPACITY_NAME"
          },
          {
            "name": "CAPACITY_PLANNER_GROUP",
            "dataType": "string",
            "sourceColumn": "CAPACITY_PLANNER_GROUP"
          },
          {
            "name": "CAPACITY_CATEGORY",
            "dataType": "string",
            "sourceColumn": "CAPACITY_CATEGORY"
          },
          {
            "name": "CAPACITY_BASE_UOM",
            "dataType": "string",
            "sourceColumn": "CAPACITY_BASE_UOM"
          },
          {
            "name": "FACTORY_CALENDAR_ID",
            "dataType": "string",
            "sourceColumn": "FACTORY_CALENDAR_ID"
          },
          {
            "name": "BREAK_TIME",
            "dataType": "double",
            "sourceColumn": "BREAK_TIME"
          },
          {
            "name": "WORK_CENTER_GROUP",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_GROUP"
          },
          {
            "name": "DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION"
          },
          {
            "name": "IS_TP",
            "dataType": "boolean",
            "sourceColumn": "IS_TP",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "WC_DEFFECTS",
            "dataType": "int64",
            "sourceColumn": "WC_DEFFECTS"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_WORK_CENTER_D = Source{[Schema=\"dbo\",Item=\"W_WORK_CENTER_D\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_WORK_CENTER_D,{\"CURRENT_FLG\", \"DELETED_FLG\", \"TENANT_ID\", \"X_CUSTOM\", \"LAST_UPDATED_DT\", \"NOTE\", \"EFFECTIVE_FROM_DT\", \"EFFECTIVE_TO_DT\", \"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"COST_CENTER_CODE\", \"COST_CENTER_NAME\", \"ACTIVITY_TYPE_CODE\", \"COST_CENTER_WID\", \"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"LANGUAGE_CODE\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Q10 Quota Daily",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "GI Plan Q10",
            "dataType": "int64",
            "sourceColumn": "GI Plan Q10"
          },
          {
            "name": "Sloc Wid",
            "dataType": "int64",
            "sourceColumn": "Sloc Wid",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT DATE DATE_KEY, F0.PLANT_WID, F1.ROW_WID STORAGE_LOC_WID,XUAT_Q10_KH FROM  W_DM_TK_NVL_F F0",
                "\t\t\tINNER JOIN W_STORAGE_LOC_D F1 ON  F0.PLANT_WID = F1.PLANT_WID AND F0.SLOC = F1.SLOC_CODE\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"XUAT_Q10_KH\", \"GI Plan Q10\"}, {\"STORAGE_LOC_WID\", \"Sloc Wid\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PNJP .Q10 GI Plan",
            "expression": "SUM([GI Plan Q10])",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Fact - Planned Order Time Rule",
        "columns": [
          {
            "name": "CUSTOMER_REQUIREMENT_DATE",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_REQUIREMENT_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "CUSTOMER_CREATE_DATE",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_CREATE_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "SALES_REQUIREMENT_DATE",
            "dataType": "int64",
            "sourceColumn": "SALES_REQUIREMENT_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "SALES_CREATE_DATE",
            "dataType": "int64",
            "sourceColumn": "SALES_CREATE_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_PRODUCTION_PLAN_AGREEMENT_TIME_F = Source{[Schema=\"dbo\",Item=\"W_VW_PRODUCTION_PLAN_AGREEMENT_TIME_F\"]}[Data]",
                "in",
                "    dbo_W_VW_PRODUCTION_PLAN_AGREEMENT_TIME_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Resource Usage",
        "columns": [
          {
            "name": "OPERATION_UNIT",
            "dataType": "string",
            "sourceColumn": "OPERATION_UNIT"
          },
          {
            "name": "BASE_QTY",
            "dataType": "double",
            "sourceColumn": "BASE_QTY"
          },
          {
            "name": "BREAK_TIME",
            "dataType": "int64",
            "sourceColumn": "BREAK_TIME"
          },
          {
            "name": "STANDARD_VALUE_UNIT",
            "dataType": "string",
            "sourceColumn": "STANDARD_VALUE_UNIT"
          },
          {
            "name": "STANDARD_VALUE",
            "dataType": "double",
            "sourceColumn": "STANDARD_VALUE"
          },
          {
            "name": "QUEUE_TIME",
            "dataType": "int64",
            "sourceColumn": "QUEUE_TIME"
          },
          {
            "name": "SETUP_TIME",
            "dataType": "int64",
            "sourceColumn": "SETUP_TIME"
          },
          {
            "name": "PROCESSING_TIME",
            "dataType": "int64",
            "sourceColumn": "PROCESSING_TIME"
          },
          {
            "name": "TEARDOWN",
            "dataType": "int64",
            "sourceColumn": "TEARDOWN"
          },
          {
            "name": "WAIT_TIME",
            "dataType": "int64",
            "sourceColumn": "WAIT_TIME"
          },
          {
            "name": "MOVE_TIME",
            "dataType": "int64",
            "sourceColumn": "MOVE_TIME"
          },
          {
            "name": "GROUP_ID",
            "dataType": "string",
            "sourceColumn": "GROUP_ID"
          },
          {
            "name": "CONTROL_KEY",
            "dataType": "string",
            "sourceColumn": "CONTROL_KEY"
          },
          {
            "name": "WORK_CENTER_WID",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_WID"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "PRICE",
            "dataType": "double",
            "sourceColumn": "PRICE"
          },
          {
            "name": "CONFIRMATION",
            "dataType": "string",
            "sourceColumn": "CONFIRMATION"
          },
          {
            "name": "CAPACITY_REQ_ID",
            "dataType": "string",
            "sourceColumn": "CAPACITY_REQ_ID"
          },
          {
            "name": "FACT_CAL_ID",
            "dataType": "string",
            "sourceColumn": "FACT_CAL_ID"
          },
          {
            "name": "ORDER_TYPE",
            "dataType": "string",
            "sourceColumn": "ORDER_TYPE"
          },
          {
            "name": "ORDER_CATEGORY",
            "dataType": "int64",
            "sourceColumn": "ORDER_CATEGORY"
          },
          {
            "name": "PRODUCTION_PROCESS_NO",
            "dataType": "string",
            "sourceColumn": "PRODUCTION_PROCESS_NO"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "BOM_STATUS",
            "dataType": "string",
            "sourceColumn": "BOM_STATUS"
          },
          {
            "name": "MRP_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_WID"
          },
          {
            "name": "CAPACITY_WID",
            "dataType": "int64",
            "sourceColumn": "CAPACITY_WID"
          },
          {
            "name": "COUNTER_ID",
            "dataType": "string",
            "sourceColumn": "COUNTER_ID"
          },
          {
            "name": "LASTEST_START_DT3",
            "dataType": "int64",
            "sourceColumn": "LASTEST_START_DT3"
          },
          {
            "name": "LASTEST_FINISH_DT",
            "dataType": "int64",
            "sourceColumn": "LASTEST_FINISH_DT"
          },
          {
            "name": "CURRENT_NODE_QTY",
            "dataType": "double",
            "sourceColumn": "CURRENT_NODE_QTY"
          },
          {
            "name": "PREV_NODE_QTY",
            "dataType": "double",
            "sourceColumn": "PREV_NODE_QTY"
          },
          {
            "name": "NEXT_NODE_WID",
            "dataType": "int64",
            "sourceColumn": "NEXT_NODE_WID"
          },
          {
            "name": "CURRENT_NODE_WID",
            "dataType": "int64",
            "sourceColumn": "CURRENT_NODE_WID"
          },
          {
            "name": "LASTEST_START_DT",
            "dataType": "string",
            "sourceColumn": "LASTEST_START_DT"
          },
          {
            "type": "calculated",
            "name": "LASTEST_FINISH_DATEKEY",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LEFT('Fact - Resource Usage'[LASTEST_FINISH_DT], 8)"
          },
          {
            "name": "OPERATION_ACTIVITY_NUM",
            "dataType": "string",
            "sourceColumn": "OPERATION_ACTIVITY_NUM"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS"
          },
          {
            "name": "STATUS_DESC",
            "dataType": "string",
            "sourceColumn": "STATUS_DESC"
          },
          {
            "name": "SYS_STATUS_WC",
            "dataType": "string",
            "sourceColumn": "SYS_STATUS_WC"
          },
          {
            "name": "FINAL_STATUS",
            "dataType": "string",
            "sourceColumn": "FINAL_STATUS"
          },
          {
            "name": "Operation Task List",
            "dataType": "string",
            "sourceColumn": "Operation Task List"
          },
          {
            "name": "Confirm Qty",
            "dataType": "double",
            "sourceColumn": "Confirm Qty"
          },
          {
            "name": "Qty Order",
            "dataType": "double",
            "sourceColumn": "Qty Order"
          },
          {
            "name": "Operation Qty",
            "dataType": "double",
            "sourceColumn": "Operation Qty"
          },
          {
            "name": "Production Order",
            "dataType": "string",
            "sourceColumn": "Production Order"
          },
          {
            "name": "Tast Node",
            "dataType": "string",
            "sourceColumn": "Tast Node"
          },
          {
            "name": "Current Node",
            "dataType": "string",
            "sourceColumn": "Current Node"
          },
          {
            "name": "Next Node",
            "dataType": "string",
            "sourceColumn": "Next Node"
          },
          {
            "name": "Qty Cancel",
            "dataType": "double",
            "sourceColumn": "Qty Cancel"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_RESOURCE_USAGE_F = Source{[Schema=\"dbo\",Item=\"W_VW_RESOURCE_USAGE_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_VW_RESOURCE_USAGE_F,{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"TENANT_ID\", \"LASTEST_SCHEDULE_WAIT_START_DT\", \"LASTEST_SCHEDULE_WAIT_END_DT\", \"SEQUENCE_NUM\", \"GROUP_COUNTER\", \"TASK_LIST_TYPE\", \"X_CUSTOM\", \"DELETE_FLG\",  \"ROW_WID\", \"CREATED_ON_DT\", \"ACTIVITY_TYPE\", \"CHANGED_ON_DT\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"CANCEL_QTY\", \"Qty Cancel\"}, {\"OPERATION_QTY\", \"Operation Qty\"}, {\"PRODUCTION_ORDER_NUM\", \"Production Order\"}, {\"OPERATION_TASK_LIST_NUM\", \"Operation Task List\"}, {\"CONFIRM_QTY\", \"Confirm Qty\"}, {\"TOTAL_QTY_ORDER\", \"Qty Order\"}, {\"TASK_LIST_NODE\", \"Tast Node\"}, {\"CURRENT_NODE\", \"Current Node\"}, {\"NEXT_NODE\", \"Next Node\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": ". PNJP Inventory Current Node",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Resource Usage'[CURRENT_NODE_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": ". PNJP Inventory Previous Node",
            "expression": [
              " ",
              "var _currdate = max('Dim - Time'[Date])",
              "Return",
              "CALCULATE(SUM('Fact - Resource Usage'[PREV_NODE_QTY]), FILTER(ALL('Dim - Time'[Date]), ISONORAFTER('Dim - Time'[Date], _currdate, Desc)))"
            ],
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Fact - Production Order",
        "description": "AFKO LeftJoin AFPO",
        "columns": [
          {
            "name": "Production Order Number",
            "dataType": "string",
            "sourceColumn": "Production Order Number"
          },
          {
            "name": "Total Production Order Qty",
            "dataType": "double",
            "sourceColumn": "Total Production Order Qty"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "ACTUAL_DEL_DT",
            "dataType": "int64",
            "sourceColumn": "ACTUAL_DEL_DT",
            "summarizeBy": "none"
          },
          {
            "name": "SCHEDULED_FINISH",
            "dataType": "int64",
            "sourceColumn": "SCHEDULED_FINISH",
            "summarizeBy": "none"
          },
          {
            "name": "PLANNED_ORDER_DEL_DT",
            "dataType": "int64",
            "sourceColumn": "PLANNED_ORDER_DEL_DT",
            "summarizeBy": "none"
          },
          {
            "name": "Sales Order Number",
            "dataType": "string",
            "sourceColumn": "Sales Order Number"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SLOC_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Value Of GR",
            "dataType": "double",
            "sourceColumn": "Value Of GR",
            "summarizeBy": "none"
          },
          {
            "name": "COMMIT_DATE",
            "dataType": "int64",
            "sourceColumn": "COMMIT_DATE",
            "summarizeBy": "none"
          },
          {
            "name": "Production Orrder Type",
            "dataType": "string",
            "sourceColumn": "Production Orrder Type"
          },
          {
            "name": "TOTAL_ORDER_QTY",
            "dataType": "double",
            "sourceColumn": "TOTAL_ORDER_QTY"
          },
          {
            "name": "BOM",
            "dataType": "string",
            "sourceColumn": "BOM"
          },
          {
            "name": "ROUTING_CODE",
            "dataType": "string",
            "sourceColumn": "ROUTING_CODE"
          },
          {
            "name": "OPERATION_TASK_NUM",
            "dataType": "string",
            "sourceColumn": "OPERATION_TASK_NUM"
          },
          {
            "name": "CAPACITY_REQUIREMENT_NO",
            "dataType": "string",
            "sourceColumn": "CAPACITY_REQUIREMENT_NO"
          },
          {
            "name": "UOM_CODE",
            "dataType": "string",
            "sourceColumn": "UOM_CODE"
          },
          {
            "name": "CREATED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "CREATED_ON_DT",
            "summarizeBy": "none"
          },
          {
            "name": "GR_QTY",
            "dataType": "double",
            "sourceColumn": "GR_QTY"
          },
          {
            "name": "Require Date",
            "dataType": "int64",
            "sourceColumn": "Require Date",
            "summarizeBy": "none"
          },
          {
            "name": "Planned Order",
            "dataType": "string",
            "sourceColumn": "Planned Order"
          },
          {
            "type": "calculated",
            "name": "PLO On Time Flag",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " If(AND ('Fact - Production Order'[ACTUAL_DEL_DT] <= 'Fact - Production Order'[Require Date],'Fact - Production Order'[GR_QTY]>0),1,BLANK())"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_PRODUCTION_ORDER_F = Source{[Schema=\"dbo\",Item=\"W_VW_PRODUCTION_ORDER_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_VW_PRODUCTION_ORDER_F,{\"ROW_WID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"PRODUCTION_ORDER\", \"Production Order Number\"}, {\"TOTAL_PRODUCTION_QTY\", \"Total Production Order Qty\"}, {\"SALES_ORDER_NUM\", \"Sales Order Number\"}, {\"VALUE_OF_GR\", \"Value Of GR\"}, {\"PRODUCTION_ORDER_TYPE\", \"Production Orrder Type\"}, {\"REQUIRE_DATE\", \"Require Date\"}, {\"PLANNED_ORDER\", \"Planned Order\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"DELETE_FLG\"})",
                "in",
                "    #\"Removed Columns1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PLO Delivery .Qty",
            "expression": " CALCULATE(SUM('Fact - Production Order'[GR_QTY]))"
          },
          {
            "name": "PLO Delivery .Qty (OT)",
            "expression": [
              " CALCULATE(SUM('Fact - Production Order'[GR_QTY]),",
              "FILTER('Fact - Production Order','Fact - Production Order'[ACTUAL_DEL_DT] <= 'Fact - Production Order'[Require Date]))"
            ]
          },
          {
            "name": "PLO %SL Giao (OT)",
            "expression": " [PLO Delivery .Qty (OT)]/ [PLO Delivery .Qty]",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Dim - Product Hierachi",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          },
          {
            "name": "PROD_CAT2_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT2_CODE"
          },
          {
            "name": "PROD_CAT2_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT2_NAME"
          },
          {
            "name": "PROD_CAT3_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT3_CODE"
          },
          {
            "name": "PROD_CAT3_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT3_NAME"
          },
          {
            "name": "PROD_CAT4_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT4_CODE"
          },
          {
            "name": "PROD_CAT4_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT4_NAME"
          },
          {
            "name": "PROD_CAT5_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT5_CODE"
          },
          {
            "name": "PROD_CAT5_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT5_NAME"
          },
          {
            "name": "PROD_CAT6_CODE",
            "dataType": "string",
            "sourceColumn": "PROD_CAT6_CODE"
          },
          {
            "name": "PROD_CAT6_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT6_NAME"
          },
          {
            "name": "PROD_CAT7_NAME",
            "dataType": "string",
            "sourceColumn": "PROD_CAT7_NAME"
          },
          {
            "name": "Product GroupID",
            "dataType": "string",
            "sourceColumn": "Product GroupID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_PROD_CAT_NEW_DH = Source{[Schema=\"dbo\",Item=\"W_PROD_CAT_NEW_DH\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_PROD_CAT_NEW_DH,{\"INTEGRATION_ID\", \"DATASOURCE_NUM_ID\", \"HIERARCHY_CODE\", \"PROD_CAT1_CODE\", \"X_CUSTOM\", \"CREATED_ON_DT\", \"CHANGED_ON_DT\", \"TENANT_ID\", \"LAST_UPDATED_DT\", \"DELETED_FLG\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"PROD_CAT7_CODE\", \"Product GroupID\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns\",{\"PROD_CAT1_NAME\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns1\",\"VòngBạc\",\"Vòng Bạc\",Replacer.ReplaceText,{\"PROD_CAT7_NAME\"}),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"NhẫnBạc\",\"Nhẫn Bạc\",Replacer.ReplaceText,{\"PROD_CAT7_NAME\"})",
                "in",
                "    #\"Replaced Value1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Production Deffects",
        "columns": [
          {
            "name": "PRODUCTION_ORDER",
            "dataType": "string",
            "sourceColumn": "PRODUCTION_ORDER"
          },
          {
            "name": "PLANNED_QTY",
            "dataType": "int64",
            "sourceColumn": "PLANNED_QTY"
          },
          {
            "name": "DEF_QTY",
            "dataType": "int64",
            "sourceColumn": "DEF_QTY"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "WORK_CENTER_WID",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "DEFFECT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DEFFECT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "MRP_CONTROLLER_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_CONTROLLER_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT PRODUCTION_ORDER,PLANNED_QTY,DEF_QTY,DEFFECT_ON,PLANT_WID,PRODUCT_WID,WORK_CENTER_WID,DEFFECT_WID,MRP_CONTROLLER_WID  FROM W_VW_PRODUCTION_QC\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"DEFFECT_ON\", \"DATE_KEY\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Deffect .Qty",
            "expression": "SUM('Fact - Production Deffects'[DEF_QTY])",
            "formatString": "#,0"
          },
          {
            "name": "%Deffect",
            "description": "% Error by Work Center",
            "expression": [
              "",
              "   ",
              "",
              "VAR Gi_Deffect = CALCULATE(Sum('Fact - Actual Production'[Actual QTY])*-1,",
              "Filter('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"OUT\"))",
              "",
              "return ",
              "CALCULATE([Deffect .Qty]/Gi_Deffect)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "%Cum. Deffect",
            "expression": [
              "",
              "VAR SumQty = [Deffect .Qty] ",
              "VAR AllErrors =",
              "    CALCULATE([Deffect .Qty], ",
              "\t\tALLSELECTED( 'Dim - Production Deffects'[Deffect Description],",
              "\t\t'Dim - Production Deffects'[Deffect Group]),",
              "\t\t",
              "\t\tALLSELECTED('Dim - Work Center'[WORK_CENTER_NUM]))",
              "",
              "\t\t",
              "RETURN",
              "    CALCULATE([Deffect .Qty],",
              "        FILTER(",
              "        \tALLSELECTED('Dim - Production Deffects'[Deffect Description],",
              "\t\t'Dim - Production Deffects'[Deffect Group] ),",
              "",
              " [Deffect .Qty] >= SumQty))",
              "     / AllErrors"
            ],
            "formatString": "0%;-0%;0%"
          },
          {
            "name": "%Total Deffect (F.Goods)",
            "description": "%Total Deffect over GI Finish Goods",
            "expression": " DIVIDE([Deffect .Qty], [.Qty GI Finish Goods], 0)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Deffect (F.Goods)",
            "description": "Lỗi thành phẩm",
            "expression": " CALCULATE([Deffect .Qty], FILTER('Dim - Work Center', 'Dim - Work Center'[IS_TP]  = TRUE()))",
            "formatString": "#,0"
          },
          {
            "name": "% Deffect (F.Goods)",
            "expression": " DIVIDE([Deffect (F.Goods)], [.Qty GI Finish Goods], BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Result Deffect vs. Ttl F.Goods",
            "expression": "if([%Total Deffect (F.Goods)] >=[Deffects Quota],\"Vượt\", \"Đạt\") "
          },
          {
            "name": "Result Deffect F.Goods vs. Ttl F.Goods",
            "expression": "if([% Deffect (F.Goods)] >=[Deffects Quota F.Goods],\"Vượt\", \"Đạt\") "
          }
        ]
      },
      {
        "name": "Dim - Production Deffects",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ROW_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Deffect Description",
            "dataType": "string",
            "sourceColumn": "Deffect Description"
          },
          {
            "name": "Deffect Group",
            "dataType": "string",
            "sourceColumn": "Deffect Group"
          },
          {
            "name": "Deffect Code",
            "dataType": "string",
            "sourceColumn": "Deffect Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT ROW_WID, DEFFECT_CODE_DES, DEFFECT_CODE_GRP_DES, Deffect_Code  FROM W_DEFFECT_DH\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"DEFFECT_CODE_DES\", \"Deffect Description\"}, {\"DEFFECT_CODE_GRP_DES\", \"Deffect Group\"}, {\"Deffect_Code\", \"Deffect Code\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - SO Type",
        "columns": [
          {
            "name": "SO Type",
            "dataType": "string",
            "sourceColumn": "SO Type"
          },
          {
            "name": "SO Type Name",
            "dataType": "string",
            "sourceColumn": "SO Type Name"
          },
          {
            "name": "LOOKUP_TYPE",
            "dataType": "string",
            "sourceColumn": "LOOKUP_TYPE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\" SELECT Lookup_value, DESCRIPTION_VIE ATTRIBUTE2, LOOKUP_TYPE from W_LOOKUP_D where (LOOKUP_TYPE in ('SO_TYPE' ) and DESCRIPTION1 not in ('','PR KHDB' ,'Framework Requisn' ))  OR (LOOKUP_VALUE IN ('Z01','Z06') AND ATTRIBUTE1 ='F') \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"Lookup_value\", \"SO Type\"}, {\"ATTRIBUTE2\", \"SO Type Name\"}})",
                "in",
                "\t#\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Dim - Booklet",
        "columns": [
          {
            "name": "STK Keeper Code",
            "dataType": "string",
            "sourceColumn": "STK Keeper Code"
          },
          {
            "name": "STK Keeper Group",
            "dataType": "string",
            "sourceColumn": "STK Keeper Group"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_BOOKLET_D = Source{[Schema=\"dbo\",Item=\"W_VW_BOOKLET_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_BOOKLET_D,{{\"STK_KEEPING_CODE\", \"STK Keeper Code\"}, {\"STK_KEEPING_GROUP\", \"STK Keeper Group\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - PO SO Schedule Line",
        "columns": [
          {
            "name": "SO PO Order Number",
            "dataType": "string",
            "sourceColumn": "SO PO Order Number"
          },
          {
            "name": "SO PO Item",
            "dataType": "string",
            "sourceColumn": "SO PO Item"
          },
          {
            "name": "SO PO Order Type",
            "dataType": "string",
            "sourceColumn": "SO PO Order Type"
          },
          {
            "name": "ORDERED_ON_DT",
            "dataType": "int64",
            "sourceColumn": "ORDERED_ON_DT",
            "summarizeBy": "none"
          },
          {
            "name": "Order Qty",
            "dataType": "double",
            "sourceColumn": "Order Qty"
          },
          {
            "name": "TARGET_QTY",
            "dataType": "double",
            "sourceColumn": "TARGET_QTY"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "COMPANY_WID",
            "dataType": "int64",
            "sourceColumn": "COMPANY_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "STORAGE_LOC",
            "dataType": "string",
            "sourceColumn": "STORAGE_LOC"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "SUPPLIER_WID",
            "dataType": "int64",
            "sourceColumn": "SUPPLIER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "CUSTOMER_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PURCH_GROUP_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PURCH_GROUP_WID",
            "summarizeBy": "none"
          },
          {
            "name": "STORAGE_LOC_WID",
            "dataType": "int64",
            "sourceColumn": "STORAGE_LOC_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PURCH_ORDER_STATUS",
            "dataType": "string",
            "sourceColumn": "PURCH_ORDER_STATUS"
          },
          {
            "name": "Purch Order Grp",
            "dataType": "string",
            "sourceColumn": "Purch Order Grp"
          },
          {
            "name": "Q10",
            "dataType": "double",
            "sourceColumn": "Q10"
          },
          {
            "name": "Req Delivery Date",
            "dataType": "int64",
            "sourceColumn": "Req Delivery Date",
            "summarizeBy": "none"
          },
          {
            "name": "SCHEDULE_QTY",
            "dataType": "double",
            "sourceColumn": "SCHEDULE_QTY"
          },
          {
            "name": "RELEASE_STATE",
            "dataType": "string",
            "sourceColumn": "RELEASE_STATE"
          },
          {
            "name": "Types",
            "dataType": "string",
            "sourceColumn": "Types"
          },
          {
            "name": "Old Order Type",
            "dataType": "string",
            "sourceColumn": "Old Order Type"
          },
          {
            "name": "Delivery Date",
            "dataType": "int64",
            "sourceColumn": "Delivery Date",
            "summarizeBy": "none"
          },
          {
            "name": "SCHEDULE_LINE_NUM",
            "dataType": "int64",
            "sourceColumn": "SCHEDULE_LINE_NUM"
          },
          {
            "name": "CONFIRMED_QTY",
            "dataType": "double",
            "sourceColumn": "CONFIRMED_QTY"
          },
          {
            "name": "Allocate Order Qty",
            "dataType": "double",
            "sourceColumn": "Allocate Order Qty"
          },
          {
            "name": "Actual Del. DT",
            "dataType": "int64",
            "sourceColumn": "Actual Del. DT",
            "summarizeBy": "none"
          },
          {
            "name": "Actual Del. Qty",
            "dataType": "double",
            "sourceColumn": "Actual Del. Qty"
          },
          {
            "name": "NET_AMT",
            "dataType": "double",
            "sourceColumn": "NET_AMT"
          },
          {
            "name": "CUSTOMER_CREATE_DATE",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_CREATE_DATE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\" SELECT F.*,KD.CUSTOMER_CREATE_DATE FROM W_VW_PO_SO_SCHEDULE_LINE_F F",
                "\tLEFT JOIN (\tSELECT PNJP_KD_WEEK,M_START_CAL_DT_WID ,min(row_wid) kd_Start, Max(row_wid) CUSTOMER_CREATE_DATE   FROM W_DAY_D ",
                "                                WHERE M_START_CAL_DT_WID>=20210101",
                "\t\t\t\tGROUP by M_START_CAL_DT_WID,PNJP_KD_WEEK)  KD ON F.DELIVERY_DT >= KD.kd_Start AND F.DELIVERY_DT <= KD.CUSTOMER_CREATE_DATE \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PURCH_ORDER_NUM\", \"SO PO Order Number\"}, {\"PURCH_ORDER_ITEM\", \"SO PO Item\"}, {\"PURCH_ORDER_TYPE\", \"Old Order Type\"}, {\"ORDER_QTY\", \"Order Qty\"}, {\"UOM_CODE\", \"UOM\"}, {\"PURCH_ORDER_GRP\", \"Purch Order Grp\"}, {\"Q10_QTY\", \"Q10\"}, {\"DELIVERY_DT\", \"Delivery Date\"}, {\"GR_GI_QTY\", \"Actual Del. Qty\"}, {\"N_ORDER_TYPE\", \"SO PO Order Type\"}, {\"REQ_DELIVERY_DT\", \"Req Delivery Date\"}, {\"ALLOCATED_ORDER_QTY\", \"Allocate Order Qty\"}, {\"GR_GI_DT\", \"Actual Del. DT\"}})",
                "\t",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Delivery .Qty (OT)",
            "expression": [
              " ",
              "var x = CALCULATE(sum('Fact - PO SO Schedule Line'[Actual Del. Qty]),",
              "\t",
              "\t",
              "\tFILTER('Fact - PO SO Schedule Line', 'Fact - PO SO Schedule Line'[Actual Del. DT]<= 'Fact - PO SO Schedule Line'[Delivery Date] ),",
              "\tFILTER('Fact - PO SO Schedule Line', 'Fact - PO SO Schedule Line'[Old Order Type]  in {\"Z06\", \"Z01\"} &&",
              "\t\t\t'Fact - PO SO Schedule Line'[RELEASE_STATE] in { \"XX\", \"XXX\"}))",
              "",
              "VAR Z = CALCULATE(SUM('Fact - PO SO Schedule Line'[Actual Del. Qty]),",
              "\tFILTER('Fact - PO SO Schedule Line','Fact - PO SO Schedule Line'[Req Delivery Date] >= 'Fact - PO SO Schedule Line'[Actual Del. DT] &&",
              "\t'Fact - PO SO Schedule Line'[types] = \"SO\"))",
              "",
              "return X + Z"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Delivery .Qty",
            "expression": [
              " CALCULATE(",
              "SUM('Fact - PO SO Schedule Line'[Actual Del. Qty])",
              ",FILTER('Fact - PO SO Schedule Line','Fact - PO SO Schedule Line'[Old Order Type] in {\"Z06\",\"ZBB\",\"ZEX\",\"Z01\"})",
              ",filter('Dim - Product', 'Dim - Product'[Product Type Code] in {\"ZF01\",\"ZF02\", \"ZS01\"}))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "%Delivery Qty (OT)",
            "expression": " [Delivery .Qty]/ [Delivery .Qty (OT)]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Order .Qty",
            "expression": [
              "CALCULATE(SUM('Fact - PO SO Schedule Line'[Allocate Order Qty])",
              ",filter('Dim - Product', 'Dim - Product'[Product Type Code] in {\"ZF01\",\"ZF02\", \"ZS01\"})",
              ")"
            ],
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Dim - Production Planned Order",
        "columns": [
          {
            "name": "Planned Order",
            "dataType": "string",
            "sourceColumn": "Planned Order"
          },
          {
            "name": "Order Type",
            "dataType": "string",
            "sourceColumn": "Order Type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\" select distinct LTRIM(RTRIM(",
                "        REPLACE(",
                "            REPLACE(",
                "                REPLACE(PLANNED_ORDER, CHAR(9), ''),",
                "            CHAR(13), ''),",
                "        CHAR(10), '')",
                "    )) PLANNED_ORDER,ORDER_TYPE from W_PRODUCTION_PLAN_ORDER_F WHERE ORDER_TYPE IS NOT NULL AND ORDER_TYPE  IS NOT NULL \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PLANNED_ORDER\", \"Planned Order\"}, {\"ORDER_TYPE\", \"Order Type\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Gemstone Deffects",
        "columns": [
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "summarizeBy": "none"
          },
          {
            "name": "Production Order",
            "dataType": "string",
            "sourceColumn": "Production Order"
          },
          {
            "name": "Gemstone Wid",
            "dataType": "int64",
            "sourceColumn": "Gemstone Wid",
            "summarizeBy": "none"
          },
          {
            "name": "Deffect Qty",
            "dataType": "double",
            "sourceColumn": "Deffect Qty"
          },
          {
            "name": "MONTH_KEY",
            "dataType": "string",
            "sourceColumn": "MONTH_KEY"
          },
          {
            "name": "AREA_NAME",
            "dataType": "string",
            "sourceColumn": "AREA_NAME"
          },
          {
            "name": "WORK_CENTER_NAME",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_NAME"
          },
          {
            "name": "STK_KEEPING_CODE",
            "dataType": "string",
            "sourceColumn": "STK_KEEPING_CODE"
          },
          {
            "name": "NGUYEN_LIEU",
            "dataType": "string",
            "sourceColumn": "NGUYEN_LIEU"
          },
          {
            "name": "GIA_TRI_NL",
            "dataType": "double",
            "sourceColumn": "GIA_TRI_NL"
          },
          {
            "name": "BOOKLET_ID",
            "dataType": "int64",
            "sourceColumn": "BOOKLET_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_GEMSTONE_GR_F = Source{[Schema=\"dbo\",Item=\"W_VW_GEMSTONE_DEFFECT\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_GEMSTONE_GR_F,{{\"PRODUCTION_ORDER_NUM\", \"Production Order\"}, {\"DA_ROT_SL\", \"Deffect Qty\"},  {\"GEMSTONE_WID\", \"Gemstone Wid\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "%GemStone Deffect",
            "expression": [
              "",
              "CALCULATE(",
              "\tCALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]),",
              "\t\t Filter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME]=\"ĐÚC\"))/'Fact - Gemstone Deffects'[.GemStone GR Qty]",
              "",
              "+",
              "\tCALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]), ",
              "\t\t\tFilter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME] in {\"LẮP RÁP\",\"LẮC BI\",\"ĐÁNH BÓNG VÀNG\",\"NGUỘI MÁY VÀNG\"}))/ \t\t\t\tCALCULATE([.GemStone GR Qty], filter ('Fact - Gemstone GR', 'Fact - Gemstone GR'[MATERIAL] = \"G\" ))",
              "",
              "+",
              "",
              "\tCALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]),",
              "\t\t\tFilter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME] in {\"ĐÁNH BÓNG BẠC\",\"NGUỘI MÁY BẠC\"}))/",
              "\t\tCALCULATE([.GemStone GR Qty], filter ('Fact - Gemstone GR', 'Fact - Gemstone GR'[MATERIAL] = \"S\" )),",
              "",
              "\tTREATAS(VALUES('Fact - Deffects Quota'[Work Center]), 'Fact - Gemstone Deffects'[WORK_CENTER_NAME])",
              ")",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": ".GemStone GR Qty",
            "expression": "SUM('Fact - Gemstone GR'[SL_DA_DAT])",
            "formatString": "#,0"
          },
          {
            "name": ".GemStone Deffect Qty",
            "expression": [
              "",
              "CALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]),",
              "\tTREATAS(VALUES('Fact - Deffects Quota'[Work Center]), 'Fact - Gemstone Deffects'[WORK_CENTER_NAME]),",
              "\tFilter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME]=\"ĐÚC\"))",
              "+",
              "CALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]),",
              "\tTREATAS(VALUES('Fact - Deffects Quota'[Work Center]), 'Fact - Gemstone Deffects'[WORK_CENTER_NAME]),",
              "\tFilter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME] in {\"LẮP RÁP\",\"LẮC BI\",\"ĐÁNH BÓNG VÀNG\",\"NGUỘI MÁY VÀNG\"}))",
              "+",
              "CALCULATE(sum('Fact - Gemstone Deffects'[Deffect Qty]),",
              "\tTREATAS(VALUES('Fact - Deffects Quota'[Work Center]), 'Fact - Gemstone Deffects'[WORK_CENTER_NAME]),",
              " Filter ('Fact - Gemstone Deffects',[WORK_CENTER_NAME] in {\"ĐÁNH BÓNG BẠC\",\"NGUỘI MÁY BẠC\"}))",
              "",
              "",
              "",
              "/*",
              "CALCULATE(SUM([Deffect Qty]),",
              "TREATAS(VALUES('Fact - Deffects Quota'[Work Center]), 'Fact - Gemstone Deffects'[WORK_CENTER_NAME])",
              ")",
              "*/"
            ],
            "formatString": "#,0"
          },
          {
            "name": "GemStone Deffects Quota",
            "expression": [
              "",
              "var X0 = ",
              "CALCULATE(",
              "",
              "\tSUM('Fact - Deffects Quota'[Quota]),",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_DM_LOI_DA\"))",
              "\t",
              "VAR TEMP = SUMMARIZE('Fact - Deffects Quota','Fact - Deffects Quota'[Work Center],",
              "    'Dim - Time'[Month year],",
              "      'Dim - Time'[Month Num],",
              "",
              "    \"Agingx\", CALCULATE(",
              "\tSUM('Fact - Deffects Quota'[Quota]),",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_DM_LOI_DA\"))",
              ")",
              "",
              "VAR T01 =   AVERAGEX(TEMP,[Agingx])",
              "",
              "",
              "VAR T0 = SUMMARIZE(",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_DM_LOI_DA\"),",
              "'Fact - Deffects Quota'[Work Center],",
              "\"AVGZ\", T01)",
              "",
              "",
              "RETURN CALCULATE(SUMX(T0, [AVGZ]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Result GemStone Deffect",
            "expression": [
              "if([.GemStone Deffect Qty] = BLANK(),BLANK(),",
              "IF( [%GemStone Deffect] >=[GemStone Deffects Quota],\"Vượt\", \"Đạt\")",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Fact - Plating",
        "columns": [
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "summarizeBy": "none"
          },
          {
            "name": "Report Name",
            "dataType": "string",
            "sourceColumn": "Report Name"
          },
          {
            "name": "Workcenter Group",
            "dataType": "string",
            "sourceColumn": "Workcenter Group"
          },
          {
            "name": "Line",
            "dataType": "string",
            "sourceColumn": "Line"
          },
          {
            "name": "Type",
            "dataType": "string",
            "sourceColumn": "Type"
          },
          {
            "name": "Test Criteria",
            "dataType": "string",
            "sourceColumn": "Test Criteria"
          },
          {
            "name": "Product Sample",
            "dataType": "string",
            "sourceColumn": "Product Sample"
          },
          {
            "name": "Quantity",
            "dataType": "double",
            "sourceColumn": "Quantity"
          },
          {
            "name": "Result1",
            "dataType": "double",
            "description": "Giá trị lần đo 1",
            "sourceColumn": "Result1",
            "summarizeBy": "none"
          },
          {
            "name": "Result2",
            "dataType": "double",
            "description": "Giá trị lần đo 2",
            "sourceColumn": "Result2"
          },
          {
            "name": "Result3",
            "dataType": "double",
            "description": "Giá trị lần đo 3",
            "sourceColumn": "Result3"
          },
          {
            "name": "Last Result",
            "dataType": "double",
            "description": "Giá trị lần đo sau cùng",
            "sourceColumn": "Last Result"
          },
          {
            "name": "Group test",
            "dataType": "string",
            "sourceColumn": "Group test"
          },
          {
            "name": "Unit",
            "dataType": "string",
            "sourceColumn": "Unit"
          },
          {
            "name": "Min",
            "dataType": "double",
            "sourceColumn": "Min",
            "summarizeBy": "none"
          },
          {
            "name": "Max",
            "dataType": "double",
            "sourceColumn": "Max"
          },
          {
            "name": "User",
            "dataType": "string",
            "sourceColumn": "User"
          },
          {
            "name": "QC Result1",
            "dataType": "string",
            "description": "Trạng thái lần đo 1",
            "sourceColumn": "QC Result1"
          },
          {
            "name": "WEIGHT",
            "dataType": "double",
            "sourceColumn": "WEIGHT"
          },
          {
            "name": "INTEGRATION_ID",
            "dataType": "string",
            "sourceColumn": "INTEGRATION_ID"
          },
          {
            "name": "Ttl Counter",
            "dataType": "int64",
            "sourceColumn": "Ttl Counter"
          },
          {
            "name": "Fail Counter",
            "dataType": "int64",
            "sourceColumn": "Fail Counter"
          },
          {
            "name": "Last Status",
            "dataType": "string",
            "description": "Kết quả lần đo sau cùng",
            "sourceColumn": "Last Status"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_WV_PLATING_F = Source{[Schema=\"dbo\",Item=\"W_VW_PLATING_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_WV_PLATING_F,{{\"REPORT_NAME\", \"Report Name\"}, {\"WORK_CENTER_GRP\", \"Workcenter Group\"}, {\"LINE\", \"Line\"}, {\"QTY\", \"Quantity\"}, {\"SAMPLE_CODE\", \"Product Sample\"}, {\"TEST_CRITERIA\", \"Test Criteria\"}, {\"TYPE\", \"Type\"}, {\"GRP_TEST\", \"Group test\"}, {\"UOM\", \"Unit\"}, {\"MAX_VALUE\", \"Max\"}, {\"MIN_VALUE\", \"Min\"}, {\"SO_LAN_DO\", \"Ttl Counter\"}, {\"LAST_RESULT\", \"Last Result\"}, {\"KQ1\", \"Result1\"}, {\"KQ2\", \"Result2\"}, {\"KQ3\", \"Result3\"}, {\"USER_ID\", \"User\"}, {\"KQ_DO_LAN_1\", \"QC Result1\"}, {\"SO_LAN_DO_FAIL\", \"Fail Counter\"}, {\"LAST_STATUS\", \"Last Status\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Plating .Qty",
            "expression": " CALCULATE(sum('Fact - Plating'[Quantity]))",
            "formatString": "#,0"
          },
          {
            "name": "Plating .Qty Pass",
            "expression": [
              "CALCULATE([Plating .Qty],",
              "'Fact - Plating'[Fail Counter] =0 )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "%Plating .Qty Pass",
            "expression": "[Plating .Qty Pass]/[Plating .Qty]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "#Plating",
            "description": "Tổng lần xi hoặc kiểm định",
            "expression": "SUM([Ttl Counter])",
            "formatString": "#,0"
          },
          {
            "name": "#Plating Fail",
            "description": "Số lần xi hoặc kiểm định không đạt",
            "expression": "SUM([Fail Counter])",
            "formatString": "0"
          },
          {
            "name": "%Plating Fail",
            "expression": " DIVIDE([#Plating Fail], [#Plating], BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Plating .Qty Fail",
            "expression": [
              "CALCULATE([Plating .Qty],",
              "'Fact - Plating'[Fail Counter] >0 )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Re-Plating .Qty",
            "expression": "SUMx('Fact - Plating', 'Fact - Plating'[Fail Counter] * 'Fact - Plating'[Plating .Qty])",
            "formatString": "#,0"
          },
          {
            "name": "%Re-Plating",
            "expression": " DIVIDE([Re-Plating .Qty], [Plating .Qty],BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Dim - Actual Production",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          },
          {
            "name": "STK Keeper Code",
            "dataType": "string",
            "sourceColumn": "STK Keeper Code"
          },
          {
            "name": "STD Text Key",
            "dataType": "string",
            "sourceColumn": "STD Text Key"
          },
          {
            "name": "STD Keeper Group",
            "dataType": "string",
            "sourceColumn": "STD Keeper Group"
          },
          {
            "name": "TextKey Name",
            "dataType": "string",
            "sourceColumn": "TextKey Name"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "WORK_CENTER",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER"
          },
          {
            "name": "IS_TP",
            "dataType": "int64",
            "sourceColumn": "IS_TP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_ACTUAL_PRODUCTION_D = Source{[Schema=\"dbo\",Item=\"W_VW_ACTUAL_PRODUCTION_D\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_ACTUAL_PRODUCTION_D,{{\"STANDARD_TEXT_KEY\", \"STD Text Key\"},  {\"STK_KEEPING_CODE\", \"STK Keeper Code\"}, {\"STK_KEEPING_GROUP\", \"STD Keeper Group\"}, {\"DESCRIPTION\", \"TextKey Name\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "MKT - Lunar",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": "LN .Net Amt",
            "expression": [
              "CALCULATE([. Net Amt], ",
              "\tUSERELATIONSHIP('Dim - Time (Lunar)'[Lunar Date], 'Fact - All Sales Invoice Line'[Lunar Date]))",
              ""
            ]
          }
        ]
      },
      {
        "name": "Fact - Customer Feedback",
        "columns": [
          {
            "name": "FEEDBACK_TYPE",
            "dataType": "string",
            "sourceColumn": "FEEDBACK_TYPE"
          },
          {
            "name": "PLANT_FEEDBACK_DATE",
            "dataType": "int64",
            "sourceColumn": "PLANT_FEEDBACK_DATE",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "FEEDBACK_DATE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FEEDBACK_DATE",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_WID",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "FEEDBACK_QTY",
            "dataType": "double",
            "sourceColumn": "FEEDBACK_QTY"
          },
          {
            "name": "NOTE",
            "dataType": "string",
            "sourceColumn": "NOTE"
          },
          {
            "name": "DEFFECT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DEFFECT_WID",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "MRP_WID",
            "dataType": "int64",
            "sourceColumn": "MRP_WID",
            "summarizeBy": "none"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "HDKH",
            "dataType": "string",
            "sourceColumn": "HDKH"
          },
          {
            "name": "Resolved By",
            "dataType": "string",
            "sourceColumn": "Resolved By"
          },
          {
            "name": "Issued By",
            "dataType": "string",
            "description": "ĐV phát sinh lỗi",
            "sourceColumn": "Issued By"
          },
          {
            "name": "Solution",
            "dataType": "string",
            "sourceColumn": "Solution"
          },
          {
            "name": "Decision Maker",
            "dataType": "string",
            "sourceColumn": "Decision Maker"
          },
          {
            "name": "SLOC_WID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLOC_WID"
          },
          {
            "name": "CUSTOMER_WID",
            "dataType": "int64",
            "sourceColumn": "CUSTOMER_WID"
          },
          {
            "name": "Actions",
            "dataType": "string",
            "sourceColumn": "Actions"
          },
          {
            "name": "Root Cause",
            "dataType": "string",
            "sourceColumn": "Root Cause"
          },
          {
            "name": "Conclusion",
            "dataType": "string",
            "sourceColumn": "Conclusion"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_CUSTOMER_FEEDBACK_F = Source{[Schema=\"dbo\",Item=\"W_CUSTOMER_FEEDBACK_F\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_CUSTOMER_FEEDBACK_F,{\"INTEGRATION_ID\", \"BATCH_WID\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"NG_QUYET_DINH\", \"Decision Maker\"}, {\"HD_XU_LY\", \"Solution\"}, {\"DV_XU_LY_LOI\", \"Resolved By\"}, {\"DV_PHAT_SINH_LOI\", \"Issued By\"}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"DATASOURCE_NUM_ID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"NGUYEN_NHAN\", \"Root Cause\"}, {\"HDKP\", \"Actions\"}, {\"KET_LUAN\", \"Conclusion\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# Feedback",
            "expression": "SUM([FEEDBACK_QTY])",
            "formatString": "#,0"
          },
          {
            "name": "GR .Net Qty (F. Goods)",
            "expression": [
              " CALCULATE(Sum( 'Fact - Actual Production'[Actual QTY]),",
              "FILTER('Fact - Actual Production', 'Fact - Actual Production'[TYPES] = \"In\" &&",
              "'Fact - Actual Production'[STK Keeper Code] in {\"1100\", \"1101\", \"1102\", \"1104\", \"1105\", \"1106\"}))\t",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "% Feedback vs. Sold",
            "expression": [
              "",
              "var SoldOut = CALCULATE([# All Qty],'Dim - Plant'[Company Code] = \"5000\")",
              "Return [# Feedback]/SoldOut",
              ""
            ],
            "formatString": "0.00000%;-0.00000%;0.00000%"
          },
          {
            "name": "% Feedback vs. GR",
            "expression": [
              " [# Feedback]/[GR .Net Qty (F. Goods)]",
              ""
            ],
            "formatString": "0.00000%;-0.00000%;0.00000%"
          },
          {
            "name": "%Cum. Customer Feedback",
            "expression": [
              "",
              "VAR SumQty = [# Feedback] ",
              "VAR AllErrors =",
              "    CALCULATE( [# Feedback] , ",
              "\t\tALLSELECTED( 'Dim - Production Deffects'[Deffect Description],",
              "\t\t'Dim - Production Deffects'[Deffect Group]),",
              "\t\tALLSELECTED('Fact - Customer Feedback'[FEEDBACK_TYPE])",
              "\t\t)",
              "RETURN",
              "    CALCULATE([# Feedback] ,",
              "        FILTER(",
              "        \tALLSELECTED('Dim - Production Deffects'[Deffect Description],",
              "\t\t'Dim - Production Deffects'[Deffect Group] ),",
              "",
              " [# Feedback]  >= SumQty))",
              "     / AllErrors"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Cust. Feedback Quota",
            "description": "Định mức phản hồi khách hàng",
            "expression": [
              "",
              "",
              "CALCULATE(",
              "\tSUM('Fact - Deffects Quota'[Quota]),",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_PHKH\"))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Cust. Complaint Quota",
            "description": "Định mức khiếu nại khách hàng",
            "expression": [
              "",
              "CALCULATE(",
              "\tSUM('Fact - Deffects Quota'[Quota]),",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_KNKH\"))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# Feedback2",
            "expression": "SUM([FEEDBACK_QTY]) + RAND()"
          }
        ]
      },
      {
        "name": "Fact - Capacity Planned Order",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "Planned Order",
            "dataType": "string",
            "sourceColumn": "Planned Order"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "Allocated Qty",
            "dataType": "double",
            "sourceColumn": "Allocated Qty"
          },
          {
            "name": "REQUIRE_DATE",
            "dataType": "int64",
            "sourceColumn": "REQUIRE_DATE",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "BASE_QUANTITY",
            "dataType": "double",
            "sourceColumn": "BASE_QUANTITY",
            "formatString": "0.00"
          },
          {
            "name": "STANDARD_CONSUMPTION_VALUE",
            "dataType": "double",
            "sourceColumn": "STANDARD_CONSUMPTION_VALUE",
            "formatString": "0.0000"
          },
          {
            "name": "BASE_OF_STANDARD_VALUE",
            "dataType": "double",
            "sourceColumn": "BASE_OF_STANDARD_VALUE",
            "formatString": "0.00"
          },
          {
            "name": "Bán thành phẩm",
            "dataType": "string",
            "sourceColumn": "Bán thành phẩm"
          },
          {
            "name": "LAYER",
            "dataType": "string",
            "sourceColumn": "LAYER"
          },
          {
            "name": "COMPONENT_QTY",
            "dataType": "double",
            "sourceColumn": "COMPONENT_QTY",
            "formatString": "0.0000"
          },
          {
            "name": "WORK_CENTER_WID",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_WID",
            "formatString": "0"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT *   FROM [PNJ_ROLAP].[dbo].[W_VW_CAPACITY_PLANNED_ORDER_F] \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PLANNED_ORDER\", \"Planned Order\"}, {\"ALLOCATED_QTY\", \"Allocated Qty\"}, {\"BTP_PRD_CODE\", \"Bán thành phẩm\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT *   FROM [PNJ_ROLAP].[dbo].[W_VW_CAPACITY_PLANNED_ORDER_F] WHERE [REQUIRE_DATE] >= 20220101\"),",
                  "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"PLANNED_ORDER\", \"Planned Order\"}, {\"ALLOCATED_QTY\", \"Allocated Qty\"}, {\"PRODUCTION_ORDER\", \"Production Order\"}, {\"BTP_PRD_CODE\", \"Bán thành phẩm\"}})",
                  "in",
                  "    #\"Renamed Columns\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Fact - Gemstone GR",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "STK_IN",
            "dataType": "string",
            "sourceColumn": "STK_IN"
          },
          {
            "name": "PRODUCTION_ORDER_NUM",
            "dataType": "string",
            "sourceColumn": "PRODUCTION_ORDER_NUM"
          },
          {
            "name": "POSTING_DATE",
            "dataType": "int64",
            "sourceColumn": "POSTING_DATE"
          },
          {
            "name": "SL_DA_DAT",
            "dataType": "double",
            "sourceColumn": "SL_DA_DAT"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "string",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "GEMSTONE_WID",
            "dataType": "int64",
            "sourceColumn": "GEMSTONE_WID"
          },
          {
            "name": "MATERIAL",
            "dataType": "string",
            "sourceColumn": "MATERIAL"
          },
          {
            "name": "BOOKLET_OUT_WID",
            "dataType": "int64",
            "sourceColumn": "BOOKLET_OUT_WID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_GEMSTONE_GR_F = Source{[Schema=\"dbo\",Item=\"W_VW_GEMSTONE_GR_F\"]}[Data]",
                "in",
                "    dbo_W_VW_GEMSTONE_GR_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Deffects Quota",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID",
            "formatString": "0"
          },
          {
            "name": "Work Center",
            "dataType": "string",
            "sourceColumn": "Work Center"
          },
          {
            "name": "Quota",
            "dataType": "double",
            "sourceColumn": "Quota",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "FROM_DATE",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FROM_DATE",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "TO_DATE",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "TO_DATE",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY",
            "formatString": "0"
          },
          {
            "name": "LOOKUP_TYPE",
            "dataType": "string",
            "sourceColumn": "LOOKUP_TYPE"
          },
          {
            "name": "DESCRIPTION1",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\" SELECT COALESCE(F1.ROW_WID,999) ROW_WID, LOOKUP_TYPE,F0.LOOKUP_VALUE, F0.DESCRIPTION1,F0.ATTRIBUTE1 Quota, F0.FROM_DATE, F0.TO_DATE,F2.M_END_CAL_DT_WID DATE_KEY from W_LOOKUP_D F0",
                "\tLEFT JOIN (select * from W_BOOKLET_D where ROW_WID in (77,78,79,81)) f1 on F0.DESCRIPTION1 = F1.STK_KEEPING_GROUP",
                "\tLEFT JOIN W_DAY_D F2  on f2.CALENDAR_DATE >= f0.FROM_DATE and f2.CALENDAR_DATE <= f0.TO_DATE",
                "WHERE LOOKUP_TYPE in ('QLCL_LOI_CHAT_LUONG','QLCL_DM_LOI_DA', 'QLCL_PHKH', 'QLCL_KNKH')",
                "GROUP BY LOOKUP_TYPE,F0.LOOKUP_VALUE, F0.ATTRIBUTE1, F0.FROM_DATE, F0.TO_DATE,F2.M_END_CAL_DT_WID,COALESCE(F1.ROW_WID,999),F0.DESCRIPTION1 ; \"),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"FROM_DATE\", type date}, {\"TO_DATE\", type date}, {\"Quota\", type number}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"LOOKUP_VALUE\", \"Work Center\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Deffects Quota",
            "expression": [
              "",
              "",
              "CALCULATE(",
              "",
              "\tSUM('Fact - Deffects Quota'[Quota]),",
              "\tUSERELATIONSHIP('Fact - Deffects Quota'[ROW_WID], 'Dim - Actual Production'[ROW_WID]),",
              "\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_LOI_CHAT_LUONG\"))"
            ],
            "formatString": "0.000%;-0.000%;0.000%",
            "isHidden": true
          },
          {
            "name": "Deffects Quota F.Goods",
            "expression": [
              "",
              "",
              "VAR MaxDate =  MAX( 'Dim - Time'[Date])",
              "VAR MinDate =  Min( 'Dim - Time'[Date])",
              "",
              "",
              "RETURN CALCULATE(",
              "\tAVERAGE('Fact - Deffects Quota'[Quota]),",
              "\t\tFILTER('Fact - Deffects Quota', 'Fact - Deffects Quota'[ROW_WID] = 999 && 'Fact - Deffects Quota'[LOOKUP_TYPE] = \"QLCL_LOI_CHAT_LUONG\" &&",
              "\t\t'Fact - Deffects Quota'[DESCRIPTION1] = \"TỶ LỆ LỖI THÀNH PHẨM -P.QTCL\"))",
              "",
              "",
              ""
            ],
            "formatString": "0.000%;-0.000%;0.000%"
          },
          {
            "name": "TmpDeffectQuota",
            "expression": [
              " ",
              "VAR TEMP = SUMMARIZE('Fact - Deffects Quota','Fact - Deffects Quota'[Work Center],",
              "    'Dim - Time'[Month year],",
              "    \"Agingx\", [Deffects Quota])",
              "VAR T01 =   AVERAGEX(TEMP,[Agingx])",
              "",
              "",
              "VAR T0 = SUMMARIZE('Fact - Deffects Quota',",
              "'Fact - Deffects Quota'[ROW_WID],",
              "\"AVGZ\", T01)",
              "",
              "RETURN CALCULATE(SUMX(T0, [AVGZ]))",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "0.000%;-0.000%;0.000%",
            "isHidden": true
          },
          {
            "name": "All Deffects Quota",
            "expression": [
              "",
              "VAR T0 = SUMMARIZE('Fact - Deffects Quota',",
              "'Fact - Deffects Quota'[ROW_WID],",
              "\"AVGZ\", [TmpDeffectQuota])",
              "",
              "RETURN CALCULATE(SUMX(T0, [AVGZ]))",
              ""
            ],
            "formatString": "0.000%;-0.000%;0.000%"
          }
        ]
      },
      {
        "name": "Fact - Production Deffect Summary",
        "columns": [
          {
            "name": "ROW_WID",
            "dataType": "int64",
            "sourceColumn": "ROW_WID"
          },
          {
            "name": "MONTH_KEY",
            "dataType": "int64",
            "sourceColumn": "MONTH_KEY"
          },
          {
            "name": "STK_KEEPING_GROUP",
            "dataType": "string",
            "sourceColumn": "STK_KEEPING_GROUP"
          },
          {
            "name": "DEF_QTY",
            "dataType": "int64",
            "sourceColumn": "DEF_QTY",
            "formatString": "#,0"
          },
          {
            "name": "FGoods",
            "dataType": "double",
            "sourceColumn": "FGoods",
            "formatString": "#,0"
          },
          {
            "name": "Actual",
            "dataType": "double",
            "sourceColumn": "Actual",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Quota",
            "dataType": "double",
            "sourceColumn": "Quota",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_DEFFECT_SUMMARY_F = Source{[Schema=\"dbo\",Item=\"W_VW_DEFFECT_SUMMARY_F\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_W_VW_DEFFECT_SUMMARY_F,{{\"M_END_CAL_DT_WID\", \"MONTH_KEY\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Plating Liquid",
        "columns": [
          {
            "name": "ARGUNA 621",
            "dataType": "string",
            "sourceColumn": "ARGUNA 621"
          },
          {
            "name": "AURUNA 215-1",
            "dataType": "string",
            "sourceColumn": "AURUNA 215-1"
          },
          {
            "name": "AURUNA 215-2",
            "dataType": "string",
            "sourceColumn": "AURUNA 215-2"
          },
          {
            "name": "AURUNA 554-5 Y05",
            "dataType": "string",
            "sourceColumn": "AURUNA 554-5 Y05"
          },
          {
            "name": "PALLADIUM",
            "dataType": "string",
            "sourceColumn": "PALLADIUM"
          },
          {
            "name": "PINK GOLD MICRON",
            "dataType": "string",
            "sourceColumn": "PINK GOLD MICRON"
          },
          {
            "name": "AURUNA 554-1 YELLOW",
            "dataType": "string",
            "sourceColumn": "AURUNA 554-1 YELLOW"
          },
          {
            "name": "AURUNA 554-2 PINK",
            "dataType": "string",
            "sourceColumn": "AURUNA 554-2 PINK"
          },
          {
            "name": "AURUNA 554-3 YELLOW",
            "dataType": "string",
            "sourceColumn": "AURUNA 554-3 YELLOW"
          },
          {
            "name": "FAIL_GRP_TEST",
            "dataType": "int64",
            "sourceColumn": "FAIL_GRP_TEST"
          },
          {
            "name": "DATE",
            "dataType": "dateTime",
            "sourceColumn": "DATE",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Total Group Test",
            "dataType": "int64",
            "sourceColumn": "Total Group Test"
          },
          {
            "type": "calculated",
            "name": "%Failed",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "  DIVIDE('Fact - Plating Liquid'[FAIL_GRP_TEST], 'Fact - Plating Liquid'[Total Group Test] ,0)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AURUNA 554-4 GREEN",
            "dataType": "string",
            "sourceColumn": "AURUNA 554-4 GREEN"
          },
          {
            "name": "COPPERLUMER",
            "dataType": "string",
            "sourceColumn": "COPPERLUMER"
          },
          {
            "name": "CUPRACID",
            "dataType": "string",
            "sourceColumn": "CUPRACID"
          },
          {
            "name": "NICKEL",
            "dataType": "string",
            "sourceColumn": "NICKEL"
          },
          {
            "name": "Work Center",
            "dataType": "string",
            "sourceColumn": "Work Center"
          },
          {
            "name": "RHODIUM",
            "dataType": "string",
            "sourceColumn": "RHODIUM"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 3 31;PNJ_ROLAP\",",
                "    dbo_W_VW_PLATING_LIQUID = Source{[Schema=\"dbo\",Item=\"W_VW_PLATING_LIQUID\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_W_VW_PLATING_LIQUID,{\"DATE_KEY\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"TTL_GRP_TEST\", \"Total Group Test\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"ARGUNA 621\", type text}, {\"AURUNA 215-1\", type text}, {\"AURUNA 215-2\", type text}, {\"AURUNA 554-5 Y05\", type text}, {\"PALLADIUM\", type text}, {\"PINK GOLD MICRON\", type text}, {\"AURUNA 554-1 YELLOW\", type text}, {\"AURUNA 554-4 GREEN\", type text}, {\"AURUNA 554-2 PINK\", type text}, {\"AURUNA 554-3 YELLOW\", type text}, {\"COPPERLUMER\", type text}, {\"CUPRACID\", type text}, {\"NICKEL\", type text}, {\"RHODIUM\", type text} }),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type\",\"0\",\"Không\",Replacer.ReplaceText,{\"ARGUNA 621\", \"AURUNA 215-1\", \"AURUNA 215-2\", \"AURUNA 554-5 Y05\", \"PALLADIUM\", \"PINK GOLD MICRON\", \"AURUNA 554-1 YELLOW\", \"AURUNA 554-4 GREEN\", \"AURUNA 554-2 PINK\", \"AURUNA 554-3 YELLOW\", \"COPPERLUMER\",\"CUPRACID\",\"NICKEL\",\"RHODIUM\" }),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"1\",\"Đạt\",Replacer.ReplaceText,{\"ARGUNA 621\", \"AURUNA 215-1\", \"AURUNA 215-2\", \"AURUNA 554-5 Y05\", \"PALLADIUM\", \"PINK GOLD MICRON\", \"AURUNA 554-1 YELLOW\", \"AURUNA 554-4 GREEN\", \"AURUNA 554-2 PINK\", \"AURUNA 554-3 YELLOW\", \"COPPERLUMER\", \"CUPRACID\", \"NICKEL\", \"RHODIUM\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Replaced Value1\",{{\"WORK_CENTER_GRP\", \"Work Center\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact - Quality Control Comments",
        "columns": [
          {
            "name": "Date_key",
            "dataType": "int64",
            "sourceColumn": "Date_key"
          },
          {
            "name": "MONTH_KEY",
            "dataType": "string",
            "sourceColumn": "MONTH_KEY"
          },
          {
            "name": "Daily comments",
            "dataType": "string",
            "sourceColumn": "Daily comments"
          },
          {
            "name": "Monthly comments",
            "dataType": "string",
            "sourceColumn": "Monthly comments"
          },
          {
            "name": "FILE_NAME_PREFIX",
            "dataType": "string",
            "sourceColumn": "FILE_NAME_PREFIX"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\" SELECT Date_key,MONTH_KEY, FULL_PATH_DATE_KEY,FILE_NAME_PREFIX,",
                " FULL_PATH_MONTH_KEY FROM W_NGUYENNHAN_HDKP_F \"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"FULL_PATH_DATE_KEY\", \"Daily comments\"}, {\"FULL_PATH_MONTH_KEY\", \"Monthly comments\"}})",
                "    ",
                "\t",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Daily Hyperlink",
            "expression": " SELECTEDVALUE('Fact - Quality Control Comments'[Daily comments] )"
          },
          {
            "name": "Monthly Hyperlink",
            "expression": " DISTINCT('Fact - Quality Control Comments'[Monthly comments] )"
          }
        ]
      },
      {
        "name": "CMR Measures",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": "CMR #Visitors",
            "expression": [
              "CALCULATE(DISTINCTCOUNT('Fact - Camera InStore'[PERSON_WID]),",
              "FILTER('Fact - Camera InStore', 'Fact - Camera InStore'[action_type] = \"visit\"))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR #Interactive",
            "expression": [
              "CALCULATE(DISTINCTCOUNT('Fact - Camera InStore'[PERSON_WID]),",
              "FILTER('Fact - Camera InStore', 'Fact - Camera InStore'[action_type] = \"interaction\"))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR CR",
            "expression": [
              " ",
              "DIVIDE([POS #Customer] , [CMR #Visitors],0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR Interact. Rate",
            "expression": "  DIVIDE([CMR #Interactive], [CMR #Visitors], 0)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR Staff CR",
            "expression": " DIVIDE([POS #Customer], [CMR #Interactive],0)",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR .Interact time",
            "expression": [
              " CALCULATE( DIVIDE( SUM('Fact - Camera InStore'[duration]), [CMR #Visitors]),",
              "FILTER('Fact - Camera InStore',  'Fact - Camera InStore'[action_type] = \"interaction\"),",
              "FILTER('Dim - Time', 'Dim - Time'[ROW_WID] >= 20200701))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR .Net Amt",
            "expression": [
              " CALCULATE([. All Net Amt],",
              "Filter( 'Fact - All Sales Invoice Line',",
              " 'Fact - All Sales Invoice Line'[TRAFFIC] = 1",
              "\t\t&&  'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"})",
              ")",
              "",
              "--SUM('Fact - Camera POS Transaction'[NET_AMT])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR .Ticket size",
            "expression": [
              " CALCULATE(DIVIDE( [. All Net Amt], [POS #Tranx], 0),",
              "FILTER( 'Fact - All Sales Invoice Line',",
              " 'Fact - All Sales Invoice Line'[TRAFFIC] = 1  && 'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"} )",
              " )",
              "",
              "/*",
              "",
              "\tVAR Tranx = COUNTROWS(GROUPBY('Fact - Camera POS Transaction', 'Fact - Camera POS Transaction'[PLANT_WID], 'Fact - Camera POS Transaction'[Customer_WID],",
              "\t 'Fact - Camera POS Transaction'[Date_WID]))",
              "\t ",
              "\t RETURN DIVIDE([CMR .Net Amt], TRANX,0)",
              "\t */"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR Basket size",
            "expression": [
              "",
              "CALCULATE(DIVIDE( [# All Qty], [POS #Tranx],0),",
              "FILTER( 'Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[TRAFFIC] = 1 && 'Fact - All Sales Invoice Line'[CHANNEL CODE] in {\"10\", \"20\"})",
              ")",
              "",
              "/*",
              "\tVAR Tranx = COUNTROWS(GROUPBY('Fact - Camera POS Transaction', 'Fact - Camera POS Transaction'[PLANT_WID], 'Fact - Camera POS Transaction'[Customer_WID],",
              "\t 'Fact - Camera POS Transaction'[Date_WID]))",
              "\t ",
              "\t RETURN DIVIDE([CMR #Qty], TRANX,0)",
              "\t ",
              "*/\t "
            ],
            "formatString": "0.0"
          },
          {
            "name": "CMR AVG Dwell time",
            "expression": [
              " ",
              "",
              "",
              "VAR Durations = INT(CALCULATE(AVERAGE('Dim - Camera Person'[Dwell_Time]),",
              "\tFilter('Dim - Camera Person', 'Dim - Camera Person'[Dwell_Time] <> BLANK()),",
              "\tCROSSFILTER('Fact - Camera InStore'[PERSON_WID], 'Dim - Camera Person'[ROW_WID], Both)))",
              "\t",
              "VAR Days =",
              "\tINT ( Durations / 86400)",
              "VAR Hours =",
              "    INT ( MOD( Durations - ( Days * 86400),86400) / 3600)",
              "VAR Minutes =",
              "    INT (MOD (MOD( Durations - (Days * 86400 ),86400 ), 3600 ) / 60)",
              "VAR Seconds =",
              "    ROUNDUP(MOD ( MOD( MOD ( Durations - (Days * 86400 ),86400 ), 3600 ), 60), 0) ",
              "VAR D = ",
              "\tIF ( LEN ( Days ) = 1,",
              "\t\tCONCATENATE ( \"0\", Days ),",
              "\t\tCONCATENATE ( \"\", Days )",
              "\t  )",
              "VAR H =",
              "    IF ( LEN ( Hours ) = 1, ",
              "        CONCATENATE ( \"0\", Hours ),",
              "        CONCATENATE ( \"\", Hours )",
              "      )",
              "VAR M =",
              "    IF (",
              "        LEN ( Minutes ) = 1,",
              "        CONCATENATE ( \"0\", Minutes ),",
              "        CONCATENATE ( \"\", Minutes )",
              "    )",
              "VAR S =",
              "    IF (",
              "        LEN ( Seconds ) = 1,",
              "        CONCATENATE ( \"0\", Seconds ),",
              "        CONCATENATE ( \"\", Seconds )",
              "    )",
              "RETURN",
              "\tIF (Durations >0,",
              "        CONCATENATE ( H, CONCATENATE( \":\", CONCATENATE (M, CONCATENATE ( \":\", S ) ) ) ))",
              "        "
            ]
          },
          {
            "name": "POS #Customer",
            "expression": [
              " ",
              "VAR Non_VL= CALCULATE(DISTINCTCOUNT( 'Fact - All Sales Invoice Line'[Customer WID] ),",
              "FILTER('Fact - All Sales Invoice Line',  'Fact - All Sales Invoice Line'[TRAFFIC] = 1 && 'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"} ),",
              "FILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"}))",
              "",
              "VAR VL = CALCULATE(",
              "\tCOUNTROWS(",
              "\tGROUPBY('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[Customer WID], ",
              "\t\t'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID],",
              "\t\t'Fact - All Sales Invoice Line'[Invoice Number])),",
              "FILTER('Fact - All Sales Invoice Line',   'Fact - All Sales Invoice Line'[TRAFFIC] = 1  && 'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"}  ),",
              "FILTER('Dim - Customer', 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"})",
              ")",
              "",
              "",
              "RETURN VL + Non_VL",
              "",
              "/*",
              "",
              "RETURN CALCULATE(TOTAL,",
              "\tTREATAS(SELECTCOLUMNS('Fact - Camera InStore',",
              "\t\"DateID\",'Fact - Camera InStore'[DATE_WID],",
              "\t\"PlantID\",'Fact - Camera InStore'[Plant_wid]),",
              "\t'Dim - Camera StoreDate'[DATE_WID],",
              "\t'Dim - Camera StoreDate'[PLANT_WID]),",
              "\tCROSSFILTER('Dim - Plant'[ROW_WID], 'Fact - Camera InStore'[Plant_wid],Both),",
              "\tTREATAS(VALUES( 'Fact - Camera InStore'[DATE_WID]),  'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID])",
              "\t)",
              "\t*/"
            ],
            "formatString": "#,0"
          },
          {
            "name": "POS #Tranx",
            "expression": [
              "  ",
              "VAR Non_VL= CALCULATE(",
              "\tCOUNTROWS(",
              "\t\tGROUPBY('Fact - ALL Sales Invoice Line', ",
              "\t\t'Fact - All Sales Invoice Line'[PLANT_WID], ",
              "\t\t'Fact - All Sales Invoice Line'[Customer WID],",
              "\t\t'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID])),",
              "\tFILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[TRAFFIC] = 1  && 'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"} && 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] >=20200101  ),",
              "\tFILTER('Dim - Customer', NOT 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"}))",
              "",
              "VAR VL =  CALCULATE(",
              "\tCOUNTROWS(",
              "\t\tGROUPBY('Fact - ALL Sales Invoice Line', ",
              "\t\t'Fact - All Sales Invoice Line'[PLANT_WID], ",
              "\t\t'Fact - All Sales Invoice Line'[Customer WID],",
              "\t\t'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID],",
              "\t\t'Fact - All Sales Invoice Line'[Invoice Number])),",
              "\tFILTER('Fact - All Sales Invoice Line', 'Fact - All Sales Invoice Line'[TRAFFIC] = 1  && 'Fact - All Sales Invoice Line'[Channel Code] in {\"10\", \"20\"} && 'Fact - All Sales Invoice Line'[INVOICED_ON_DT_WID] >=20200101  ),",
              "\tFILTER('Dim - Customer', 'Dim - Customer'[CUST_CARD_DESC] in {\"One-time\"}))",
              "",
              "",
              "",
              "RETURN Non_VL + VL"
            ],
            "formatString": "#,0"
          },
          {
            "name": "CMR Non Buyer",
            "expression": " [CMR #Visitors]-[POS #Customer]",
            "formatString": "#,0"
          },
          {
            "name": "CMR AVG CR (Hour)",
            "expression": [
              "AVERAGEX(",
              "\tSUMMARIZECOLUMNS('Dim - Time'[Date], 'Dim - Camera Hour'[Hrs]",
              "\t",
              "",
              "\t\t),",
              "\t\t[CMR CR]",
              "\t\t)",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR AVG CR (Date)",
            "expression": [
              "AVERAGEX(",
              "\tSUMMARIZE('Dim - Time', 'Dim - Time'[Date]),",
              "\t\tCALCULATE([CMR CR])",
              "\t\t)",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR AVG Section",
            "expression": [
              "",
              "VAR Durations = INT(CALCULATE(",
              "\tDIVIDE(sum('Fact - Camera InStore'[Duration]), DISTINCTCOUNT('Fact - Camera InStore'[PERSON_WID]),0),",
              "\tFILTER('Fact - Camera InStore', 'Fact - Camera InStore'[action_type] = \"Visit\"))",
              "\t)",
              "VAR Days =",
              "\tINT ( Durations / 86400)",
              "VAR Hours =",
              "    INT ( MOD( Durations - ( Days * 86400),86400) / 3600)",
              "VAR Minutes =",
              "    INT (MOD (MOD( Durations - (Days * 86400 ),86400 ), 3600 ) / 60)",
              "VAR Seconds =",
              "    ROUNDUP(MOD ( MOD( MOD ( Durations - (Days * 86400 ),86400 ), 3600 ), 60), 0) ",
              "VAR D = ",
              "\tIF ( LEN ( Days ) = 1,",
              "\t\tCONCATENATE ( \"0\", Days ),",
              "\t\tCONCATENATE ( \"\", Days )",
              "\t  )",
              "VAR H =",
              "    IF ( LEN ( Hours ) = 1, ",
              "        CONCATENATE ( \"0\", Hours ),",
              "        CONCATENATE ( \"\", Hours )",
              "      )",
              "VAR M =",
              "    IF (",
              "        LEN ( Minutes ) = 1,",
              "        CONCATENATE ( \"0\", Minutes ),",
              "        CONCATENATE ( \"\", Minutes )",
              "    )",
              "VAR S =",
              "    IF (",
              "        LEN ( Seconds ) = 1,",
              "        CONCATENATE ( \"0\", Seconds ),",
              "        CONCATENATE ( \"\", Seconds )",
              "    )",
              "RETURN",
              "\tIF (Durations >0,",
              "        CONCATENATE ( H, CONCATENATE( \":\", CONCATENATE (M, CONCATENATE ( \":\", S ) ) ) ))",
              "    ",
              ""
            ]
          },
          {
            "name": "CMR %Interactive (Prev.)",
            "expression": [
              " ",
              "",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR #Interactive], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (AND([CMR #Interactive]>0, Compare >0 ), DIVIDE([CMR #Interactive] , Compare, 0) -1,BLANK())"
            ],
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "CMR %Visitors (Prev.)",
            "expression": [
              " ",
              "",
              "VAR Compare = ",
              "CALCULATE(",
              "\t [CMR #Visitors], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor]",
              "",
              "",
              "RETURN IF (AND([CMR #Visitors]>0, Compare >0 ), DIVIDE([CMR #Visitors], Compare, 0) -1,BLANK())"
            ],
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "Normalization Factor",
            "expression": " COUNTROWS ( 'Dim - Time' ) / COUNTROWS ( 'Dim - Time Compare' )",
            "isHidden": true
          },
          {
            "name": "CMR %CR (Prev.)",
            "expression": [
              " ",
              "",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR CR], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (and([CMR CR]>0, Compare >0), DIVIDE([CMR CR] , Compare, 0) -1,BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR %Net Amt (Prev.)",
            "expression": [
              " ",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR .Net Amt], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (AND([CMR .Net Amt]>0, Compare >0 ), DIVIDE([CMR .Net Amt] , Compare, 0) -1,BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR %Ticket size (Prev.)",
            "expression": [
              " ",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR .Ticket size], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (AND([CMR .Ticket size]>0, Compare >0 ), DIVIDE([CMR .Ticket size] , Compare, 0) -1,BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR %Basket size (Prev.)",
            "expression": [
              " ",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR Basket size], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF ( And([CMR Basket size] >0, Compare >0 ) , DIVIDE([CMR Basket size] , Compare, 0) -1,BLANK())",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR %Interact. Rate (Prev.)",
            "expression": [
              " ",
              "",
              "var Compare = CALCULATE(",
              "\t [CMR Interact. Rate], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (and([CMR Interact. Rate] >0, Compare >0 ), DIVIDE([CMR Interact. Rate] , Compare, 0) -1,BLANK())",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR %POS Customer (Prev.)",
            "expression": [
              " ",
              "",
              "var Compare = CALCULATE(",
              "\t [POS #Customer], ",
              "\t ALL ( 'Dim - Time' ), ",
              "\t USERELATIONSHIP( 'Dim - Time'[Date], 'Dim - Time Compare'[Prev. Date] ) ",
              ") --* [Normalization Factor] ",
              "",
              "RETURN IF (AND([POS #Customer] >0, Compare >0 ), DIVIDE([POS #Customer] , Compare, 0) -1,BLANK())",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "CMR Style Dwell time",
            "expression": [
              " ",
              "",
              "",
              "VAR Durations = INT(CALCULATE(AVERAGE('Dim - Camera Person'[Style_Dwell_Time]),",
              "\tFilter('Dim - Camera Person', 'Dim - Camera Person'[Style_Dwell_Time] <> BLANK())))",
              "--\tCROSSFILTER('Fact - Camera InStore'[PERSON_WID], 'Dim - Camera Person'[ROW_WID], Both)))",
              "\t",
              "VAR Days =",
              "\tINT ( Durations / 86400)",
              "VAR Hours =",
              "    INT ( MOD( Durations - ( Days * 86400),86400) / 3600)",
              "VAR Minutes =",
              "    INT (MOD (MOD( Durations - (Days * 86400 ),86400 ), 3600 ) / 60)",
              "VAR Seconds =",
              "    ROUNDUP(MOD ( MOD( MOD ( Durations - (Days * 86400 ),86400 ), 3600 ), 60), 0) ",
              "VAR D = ",
              "\tIF ( LEN ( Days ) = 1,",
              "\t\tCONCATENATE ( \"0\", Days ),",
              "\t\tCONCATENATE ( \"\", Days )",
              "\t  )",
              "VAR H =",
              "    IF ( LEN ( Hours ) = 1, ",
              "        CONCATENATE ( \"0\", Hours ),",
              "        CONCATENATE ( \"\", Hours )",
              "      )",
              "VAR M =",
              "    IF (",
              "        LEN ( Minutes ) = 1,",
              "        CONCATENATE ( \"0\", Minutes ),",
              "        CONCATENATE ( \"\", Minutes )",
              "    )",
              "VAR S =",
              "    IF (",
              "        LEN ( Seconds ) = 1,",
              "        CONCATENATE ( \"0\", Seconds ),",
              "        CONCATENATE ( \"\", Seconds )",
              "    )",
              "RETURN",
              "\tIF (Durations >0,",
              "        CONCATENATE ( H, CONCATENATE( \":\", CONCATENATE (M, CONCATENATE ( \":\", S ) ) ) ))",
              "        "
            ],
            "formatString": "0.00"
          }
        ]
      },
      {
        "name": "Fact - Forecasting",
        "columns": [
          {
            "name": "PLANT_WID",
            "dataType": "int64",
            "sourceColumn": "PLANT_WID"
          },
          {
            "name": "PRODUCT_WID",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_WID"
          },
          {
            "name": "DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DATE_KEY"
          },
          {
            "name": "Forecast Value",
            "dataType": "int64",
            "sourceColumn": "Forecast Value"
          },
          {
            "name": "IS_DMHKN",
            "dataType": "string",
            "sourceColumn": "IS_DMHKN"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Value.NativeQuery(#\"SQL/192 168 3 31;PNJ_ROLAP\",\"SELECT [PLANT_WID]",
                "      ,[PRODUCT_WID]",
                "      ,[DATE_KEY]",
                "      ,[FORECAST_VALUE]",
                "      ,[IS_DMHKN]",
                "  FROM [PNJ_ROLAP].[dbo].[W_VW_SALES_FORECASTING_F]\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"FORECAST_VALUE\", \"Forecast Value\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "dc26462f-a731-4b1d-b849-7ca1e1315be8",
        "fromTable": "Fact - SSSG",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "cce8913d-4f92-4e0b-bb7a-919196d929dc",
        "fromTable": "Dim - Customer",
        "fromColumn": "REGION_WID",
        "toTable": "Dim - Territory",
        "toColumn": "ROW_WID"
      },
      {
        "name": "74cddc4a-0346-479d-9a8a-ba86b9113e02",
        "fromTable": "Dim - Customer",
        "fromColumn": "CREATED_ON_DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "6337c8a5-76e5-4715-982d-0dd997cb5f76",
        "fromTable": "Fact - RFM",
        "fromColumn": "CUST_WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "eb9ce498-1612-4672-af84-c7764f1ce76e",
        "fromTable": "Dim - Plant",
        "fromColumn": "First Transaction DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "b0f15988-85ac-410a-a51c-81b9592e53fc",
        "fromTable": "Fact - Marketing Plan",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a6ce4ce8-627d-4a4b-a70e-0a558faa8bed",
        "fromTable": "Fact - SSSG",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "5385613a-9940-4b48-b239-408db61ce8fe",
        "fromTable": "Fact - Marketing Plan",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e31b4ef3-abfa-40bd-aba0-e995f6fb3e57",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e35cacd9-9e33-4855-8e0e-5339c10d554c",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "SUPPLIER_WID",
        "toTable": "Dim - Vendor",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b1cebf44-f2b2-4d6e-8e80-4ebe0ec94fc8",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "STORAGE_LOC_WID",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "43e6989d-146e-4d85-8c00-2f33444b805a",
        "fromTable": "Fact - Plan Data",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c8c16798-a624-404e-a452-cd189e12571f",
        "fromTable": "Fact - Plan Data",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7d465aac-f595-4857-8fcc-f3e637d3d097",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "Customer WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "30931ddb-7da2-47d1-87d0-e7b373faab7b",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "74a43725-6487-4a04-9580-24349c615d04",
        "fromTable": "Fact - Plan Data",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "75255825-75c0-4395-b2f6-5db8897de4c6",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "5350fb08-5710-4f32-9a38-15a55a5b1f1f",
        "fromTable": "Fact - Plan Data",
        "fromColumn": "PROD_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c40964a5-e7e7-4078-a922-afcc82e6c3c0",
        "fromTable": "Fact - Customer Visit",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "faceee37-49a3-410c-84f2-7ff96da86877",
        "fromTable": "Fact - Shipment",
        "fromColumn": "GI_DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c283dff2-919e-4d7e-82f5-c40f0b5f6102",
        "fromTable": "Fact - Shipment",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6fd11f39-0c36-4e79-beba-0ef39874f962",
        "fromTable": "Fact - Shipment",
        "fromColumn": "SHIPPING_FROM_PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "50db09e6-26c3-45ba-9900-e96f9885552a",
        "fromTable": "Fact - Shipment",
        "fromColumn": "SHIPPING_TO_PLANT_WID",
        "toTable": "Dim - Transfer Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "bc17ac9d-baaf-4d7a-8b24-e8fd547d8efc",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "2fb91812-2ebf-4249-bd53-fed6d287a1b6",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6d2e944b-83a2-4803-baec-c7e2bdee8747",
        "fromTable": "Fact - NHVV",
        "fromColumn": "Date_key",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "ab07ba41-5ed7-4124-81bf-d478f9521d83",
        "fromTable": "Fact - NHVV",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "cfe2ca92-8a57-40e7-91d9-d4c12ea56296",
        "fromTable": "Fact - NHVV",
        "fromColumn": "ERROR_WID",
        "toTable": "Dim - NHVV_Error",
        "toColumn": "ROW_WID"
      },
      {
        "name": "410ffa86-207d-4977-b51d-53143956d64a",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "Channel Code",
        "toTable": "Dim - Channel",
        "toColumn": "CHANNEL_CODE"
      },
      {
        "name": "fb1cc2e4-fdf6-4ff9-8fd4-985f85a8978f",
        "fromTable": "Fact - NHVV",
        "fromColumn": "TRANSFERD_PLANT_WID",
        "toTable": "Dim - Transfer Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "d096a8db-479b-4872-a8fb-f0c0e20f1d2a",
        "fromTable": "Fact - NHVV",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "dde31b2d-9165-4f06-84e0-193d0fd81ea4",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "TRANSFERD_PLANT_WID",
        "toTable": "Dim - Transfer Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "cd9d7e3d-842d-4312-91d8-cba032ab77f8",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "STORAGE_LOC_WID",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c8c46c27-b8c2-4d78-8046-99ae86b7b4e5",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c80947ad-d54e-4c71-a1f9-431fad5bbd48",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "73335b21-fb89-412f-aa2a-ae318ffb5ac9",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "MVMNT_TYPE_WID",
        "toTable": "Dim - Movement Type",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f5960cc4-3ed4-45e4-8c2b-14af57c830b6",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "3183f048-a137-4986-907d-53c70f69b645",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "TRANSFERED_SLOC_WID",
        "toTable": "Dim - Transfer Sloc",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6ad9b29d-c308-4578-b99c-a98d96126dbc",
        "fromTable": "Dim - Product Cost",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a83f5c1e-b529-417d-b4b3-4503509b930d",
        "fromTable": "Dim - Product Cost",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "9e2cd251-6c36-40b5-bdec-a8b75a738f46",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "0b04170b-25b1-4de0-a597-fa5060dab694",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "PRODUCT_INVENTORY_WID",
        "toTable": "Dim - Inventory Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "5b0fcd80-4ab6-4443-9d3e-dc1741511faa",
        "fromTable": "Fact - Timesheet",
        "fromColumn": "Employee_wid",
        "toTable": "Dim - Employee",
        "toColumn": "ROW_WID"
      },
      {
        "name": "9a12a00d-5577-4f8f-b6a3-bca62578f941",
        "fromTable": "Fact - Resource Performance",
        "fromColumn": "EMPLOYEE_WID",
        "toTable": "Dim - Employee",
        "toColumn": "ROW_WID"
      },
      {
        "name": "d811d423-8ec9-46b2-abd8-a26d0a052b6c",
        "fromTable": "Dim - Employee",
        "fromColumn": "Effect To DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "38507e16-edc3-4e53-af26-0de8f1177816",
        "fromTable": "Fact - Actual Production",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "adea571d-e213-49c9-90e1-1f51aa763844",
        "fromTable": "Fact - Actual Production",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a94decd8-6ea9-4402-a781-7d8af0e1b766",
        "fromTable": "Fact - Timesheet",
        "fromColumn": "WORKING_DATE_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "98b898ea-1398-43a5-b116-9fff33d9c80b",
        "fromTable": "Fact - Resource Performance",
        "fromColumn": "Working Date Wid",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c721aeb7-01b7-4608-b8b4-c3b397b8a81f",
        "fromTable": "Fact - Plan Revenue - PNJP",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "18575c9e-e63b-41e2-9936-6bd21e405656",
        "fromTable": "Fact - Plan Revenue - PNJP",
        "fromColumn": "CHANNEL_CODE",
        "toTable": "Dim - Channel",
        "toColumn": "CHANNEL_CODE"
      },
      {
        "name": "6a30477e-9946-416a-8014-269129443ba9",
        "fromTable": "Fact - Plan Revenue - PNJP",
        "fromColumn": "Product Wid",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "db93808f-a4a7-46d2-aeb1-8a2a32f2e424",
        "fromTable": "Fact - Plan Revenue - PNJP",
        "fromColumn": "Plant_wid",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "626f1d04-762d-4ce9-80b4-ef94076e9dc2",
        "fromTable": "Fact - Production Plan",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "4198a6fc-8967-43d7-b836-210e7cc1f62a",
        "fromTable": "Dim - Employee",
        "fromColumn": "Effect From DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "a8951e3c-f0e1-41bd-a4bc-21904db3bb20",
        "fromTable": "Fact - Marketing Plan",
        "fromColumn": "PROGRAM_WID",
        "toTable": "Dim - Program",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a1bd2508-44f7-4f13-9386-ac1602fde9f3",
        "fromTable": "Fact - Purchase Requisition",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "77ea9312-e860-4681-9089-c4c875db9008",
        "fromTable": "Fact - Purchase Requisition",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "59227bb6-fd54-4afd-813d-ab6b3c978d3c",
        "fromTable": "Fact - Purchase Requisition",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "52a4bf6b-dccd-4ce1-b7b6-4f315938ce70",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "INVOICED_ON_DT_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "12957638-63f4-4e99-8684-05f1a87e1fe9",
        "fromTable": "Fact - Finance",
        "fromColumn": "POSTED_ON_DT_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "94d5adb5-bbb7-446b-8b14-f4a2da75ec71",
        "fromTable": "Fact - Finance",
        "fromColumn": "PROGRAM_WID",
        "toTable": "Dim - Program",
        "toColumn": "ROW_WID"
      },
      {
        "name": "2bcb5a8b-4048-49a6-b7d9-d383a337b6c7",
        "fromTable": "Fact - Marketing Plan",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "057b7100-f898-4e4e-9e6d-8615db2731b1",
        "fromTable": "Fact - Marketing Spend",
        "fromColumn": "PROGRAM_WID",
        "toTable": "Dim - Program",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b21cc03c-16ab-4d77-9d77-963b766f0ba8",
        "fromTable": "Fact - Marketing Plan",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "52d8096c-3572-413a-9cdb-02b566b99c78",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "057aa975-bb4a-4937-9695-a37ea44ff4d9",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "CUSTOMER_SOLD_TO_WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7c23f5e6-208d-4476-bc38-d986f302c7a1",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "Program_wid",
        "toTable": "Dim - Program",
        "toColumn": "ROW_WID"
      },
      {
        "name": "8437995f-6fb0-4073-bd18-b34a94bfbac8",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "INVOICED_ON_DT_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "df9cbe12-2132-4400-bb73-da4ed2225c19",
        "fromTable": "Fact - ATL",
        "fromColumn": "Date_key",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b668e31f-ad0f-4090-b707-3fdcb4d546ac",
        "fromTable": "Fact - ATL",
        "fromColumn": "PROGRAM_WID",
        "toTable": "Dim - Program",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e0bde189-c64f-4ba7-9d97-8e5439633c62",
        "fromTable": "Fact - Condition",
        "fromColumn": "SALE_DEAL_WID",
        "toTable": "Dim - Sale Deals",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f0852c9f-91ec-4a2a-91a9-28b9211f6a5c",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "CHANNEL_CODE",
        "toTable": "Dim - Channel",
        "toColumn": "CHANNEL_CODE"
      },
      {
        "name": "1afaebe5-2b0e-4f67-ba9b-50c6af803e2a",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "Invoice date",
        "toTable": "Dim - Time",
        "toColumn": "Date",
        "isActive": false
      },
      {
        "name": "5728bf72-5930-46ca-b9da-7a4a622893dd",
        "fromTable": "Fact - Sales Invoice Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "210cdf51-8ccb-470d-be02-8747a1d2fa45",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "CUSTOMER_PAYER_WID",
        "toTable": "Dim - Customer Payer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "ca26804f-44e4-4350-a9cc-c830e650cb54",
        "fromTable": "Dim - Product",
        "fromColumn": "PROD_CAT_WID",
        "toTable": "Dim - Product Level4",
        "toColumn": "PROD_CAT_WID"
      },
      {
        "name": "07a23a9c-b7e4-4ce8-846a-228d186955f2",
        "fromTable": "Fact - Inventory Quota",
        "fromColumn": "PROD_CAT_WID",
        "toTable": "Dim - Product Level4",
        "toColumn": "PROD_CAT_WID"
      },
      {
        "name": "3854ad1f-704c-4b07-863a-01815b77705a",
        "fromTable": "Fact - Inventory Quota",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e58e75ad-3e23-49f6-ac25-f17c77804572",
        "fromTable": "Fact - Inventory Quota",
        "fromColumn": "Plant Code",
        "toTable": "Dim - Plant",
        "toColumn": "Plant Code"
      },
      {
        "name": "7a416c77-41af-44a9-999b-4563645f00a8",
        "fromTable": "Fact - SC Recommend",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "520de9cb-c423-4f49-a463-0ec361885a11",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "age_range",
        "toTable": "Dim - Camera Age",
        "toColumn": "Palexy AGEID"
      },
      {
        "name": "c4d2c158-6dd3-46d9-9ed7-444f0ed83c29",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "DATE_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6c9a78cc-841d-4260-a2d5-0d038bdfd2e5",
        "fromTable": "Fact - SC Recommend",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "66096f6b-fdb0-4a31-9989-f45e752a54c3",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7ffc02f1-b8d2-4fbd-a19a-5b82c0376c66",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "Plant_wid",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "0703c7fc-948d-4761-81d5-57ae3566b3d5",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "PERSON_WID",
        "toTable": "Dim - Camera Person",
        "toColumn": "ROW_WID"
      },
      {
        "name": "8e6de004-bb61-48bc-9d51-286b9b43191c",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "53f35e85-8904-448c-a689-e0d330bba38a",
        "fromTable": "Fact - Purchase Order Line",
        "fromColumn": "DELIVERY_DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e76de560-30ae-4e9d-abf0-1d0b076fbead",
        "fromTable": "CVR by Store by Date",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "385fc21d-cfb9-4b41-9ae0-5b2097dd9b83",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "SALES_PERSON",
        "toTable": "Dim - Customer",
        "toColumn": "Customer Code",
        "isActive": false
      },
      {
        "name": "5581c05a-4bb3-4192-8bde-29d08ab613c7",
        "fromTable": "Fact - Employee Plan",
        "fromColumn": "Effect_from",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a9666209-0f3b-4649-aed4-34a78e057dc2",
        "fromTable": "Fact - Employee Plan",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b178f2f3-fd64-4098-9aa1-d8dffa5be11d",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "Area_ID",
        "toTable": "Dim - Camera Area",
        "toColumn": "AREA_ID"
      },
      {
        "name": "924824ca-54d5-4e4d-9a4e-bba0c2520d6c",
        "fromTable": "Dim - Customer",
        "fromColumn": "ROW_WID",
        "toTable": "Dim - Camera Person",
        "toColumn": "ROW_WID"
      },
      {
        "name": "427cd2bd-4f83-4414-9597-55475a6d9f13",
        "fromTable": "Fact - Production Plan Order",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "0db0a96a-ec5b-49d5-8b29-01c103c3da83",
        "fromTable": "Fact - Production Plan Order",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6d53c0f3-242a-4e45-bdcf-ee206c3ccd8e",
        "fromTable": "Fact - Production Plan Order",
        "fromColumn": "Require Date",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b483cbb0-1ad4-4638-8dec-6b43c524f7a4",
        "fromTable": "Fact - Production Plan Agreement",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6c48cc5e-4f09-4c45-9cbc-ff2015986fb9",
        "fromTable": "Fact - Production Plan Agreement",
        "fromColumn": "INVENTORY_PRODUCT_WID",
        "toTable": "Dim - Inventory Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "34dc3299-23ae-46e9-b04e-05e822e458cd",
        "fromTable": "Dim - Camera Person",
        "fromColumn": "GENDER",
        "toTable": "Dim - Camera Gender",
        "toColumn": "ids"
      },
      {
        "name": "b26f8513-d1d4-4ee0-93dc-424b057c7714",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "Palexy_AGEID",
        "toTable": "Dim - Camera Age",
        "toColumn": "Palexy AGEID"
      },
      {
        "name": "b7311647-5794-41c7-8e0d-944363a3bfcb",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "Invoice_Hour",
        "toTable": "Dim - Camera Hour",
        "toColumn": "Hrs"
      },
      {
        "name": "a0bba335-1d4a-4b91-88ea-f8361e4e5864",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "recording_time",
        "toTable": "Dim - Camera Hour",
        "toColumn": "Hrs"
      },
      {
        "name": "d3ee0236-fa02-40df-99cf-e0c4395dead4",
        "fromCardinality": "one",
        "fromTable": "Dim - Time Compare",
        "fromColumn": "Prev. Date",
        "toTable": "Dim - Time",
        "toColumn": "Date",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "7f4db808-6c50-4b37-81e4-5d7c3db51897",
        "fromTable": "Fact - Camera InStore",
        "fromColumn": "SectionID",
        "toTable": "Dim - Camera Sections",
        "toColumn": "CAMERA_SECTION_ID"
      },
      {
        "name": "2d77811f-4619-4333-afb1-36f7f9695fe2",
        "fromTable": "Fact - Inventory Aging",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "2153c53e-ebcd-453e-962f-6b59517d3cd3",
        "fromTable": "Fact - Inventory Aging",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "4d4ee4fd-6235-48e0-abef-64d500fbd952",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "73c83c71-129c-4d8b-95e1-276a314eeca9",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "ba0a63a4-9472-4268-ac84-dac0ee3df6ad",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "42bd4707-fddd-435a-892f-8e722087993d",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "CUSTOMER_SOLD_TO_LOC_WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "ef000d0c-154f-4a82-8e81-15a22ce69761",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "SALES_PERSON",
        "toTable": "Dim - Sales Person",
        "toColumn": "Employee Code"
      },
      {
        "name": "1a463725-1b33-41eb-aae2-65b74dbfcf21",
        "fromTable": "Fact - Employee Plan",
        "fromColumn": "Employee Code",
        "toTable": "Dim - Sales Person",
        "toColumn": "Employee Code"
      },
      {
        "name": "a71afe97-6954-458b-bf09-9aaabef1e395",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "Requirement Delivery DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f7aa441b-11e1-4b5a-ad21-6081df64e521",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "COMPANY_WID",
        "toTable": "Dim - Company",
        "toColumn": "ROW_WID"
      },
      {
        "name": "8be4282f-1d09-4e97-aba1-5fce0ebce1c3",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "REQ_DELIVERY_DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "73b33f40-88f3-47b8-a938-feaee0fb9e15",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "1760abf5-8859-4015-b32a-5abac2c95cfd",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "11f9a7c7-4f3f-455f-a37d-083196335b67",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "CUSTOMER_SOLD_TO_LOC_WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "373849e4-246c-420c-8daf-65baa044f7eb",
        "fromTable": "Fact - Production Plan Agreement",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "19a141f3-7ccc-4dc8-8264-85d503f8eed5",
        "fromTable": "Fact - Inventory Quota",
        "fromColumn": "Sloc WID",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "23e173e1-5934-4c80-86af-14c9435b2248",
        "fromTable": "Fact - Capacity Segment",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a4c08a7a-550f-4342-b745-5287b9f2a71b",
        "fromTable": "Fact - Capacity Segment",
        "fromColumn": "WORK_CENTER_WID",
        "toTable": "Dim - Work Center",
        "toColumn": "ROW_WID"
      },
      {
        "name": "5959e73d-324c-411d-a312-2668ed8cc250",
        "fromTable": "Fact - Capacity Segment",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f794acd7-2ee8-4529-a820-22239de46c5d",
        "fromTable": "Fact - Q10 Quota Daily",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "ba8480dc-b5c9-48e6-a250-400fe14be6aa",
        "fromTable": "Fact - Q10 Quota Daily",
        "fromColumn": "Sloc Wid",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f1809c9f-b863-4bac-86aa-3557de4594d4",
        "fromTable": "Fact - Q10 Quota Daily",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7ab39b22-89fa-4b20-b871-4a100f441687",
        "fromTable": "Fact - Resource Usage",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f70af33a-c988-46f1-8848-db97862a52ae",
        "fromTable": "Fact - Resource Usage",
        "fromColumn": "WORK_CENTER_WID",
        "toTable": "Dim - Work Center",
        "toColumn": "ROW_WID"
      },
      {
        "name": "43fe9bf3-60d8-4fd1-addb-ab1a5f071cc7",
        "fromTable": "Fact - Inventory Transaction",
        "fromColumn": "BATCH_WID",
        "toTable": "Dim - Product Lot",
        "toColumn": "ROW_WID"
      },
      {
        "name": "4ed3c6e6-4c26-4cd0-8c25-10458725a8e2",
        "fromTable": "Fact - Inventory Aging",
        "fromColumn": "BATCH_WID",
        "toTable": "Dim - Product Lot",
        "toColumn": "ROW_WID"
      },
      {
        "name": "4013a728-a389-4d6f-8bc3-c7473de63d43",
        "fromTable": "Fact - Inventory Aging",
        "fromColumn": "Last GR",
        "toTable": "Dim - Time",
        "toColumn": "Date",
        "isActive": false
      },
      {
        "name": "4f413af8-1f46-4faa-bf67-d0fe2c04486c",
        "fromTable": "Fact - Production Order",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "83299291-4383-4e25-81c6-c1b016bad470",
        "fromTable": "Fact - Production Order",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "180de10f-dfb3-420a-b19a-76de77ad3a1b",
        "fromTable": "Fact - Production Order",
        "fromColumn": "SLOC_WID",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "bf95b78f-3ff7-492f-b6b4-7ab6f47f91eb",
        "fromTable": "Fact - Resource Usage",
        "fromColumn": "LASTEST_FINISH_DATEKEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "54dc7ca2-23bb-427e-9cb7-7ebc1e244f4e",
        "fromTable": "Fact - Condition",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "76807a05-1eba-46f7-841e-c7bccafb2a7f",
        "fromTable": "Dim - Product",
        "fromColumn": "Product Group",
        "toTable": "Dim - Product Hierachi",
        "toColumn": "Product GroupID"
      },
      {
        "name": "877020c0-03b0-40db-84d7-74837c99bd82",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "75c7b80e-bede-4df3-82fc-fb57158e9ca0",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "DEFFECT_WID",
        "toTable": "Dim - Production Deffects",
        "toColumn": "ROW_WID"
      },
      {
        "name": "81ff35ff-7eba-4ec1-9614-380b16195f73",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e7b34b46-3c1b-420b-8cd6-a4d6231c39e1",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "568eade6-ed89-4af1-8a8d-637ddfb09243",
        "fromTable": "Fact - SO Schedule Line",
        "fromColumn": "SO Type",
        "toTable": "Dim - SO Type",
        "toColumn": "SO Type"
      },
      {
        "name": "e1d53c73-3558-4059-ba63-a1789770a3a4",
        "fromTable": "Fact - Sales Order Line",
        "fromColumn": "SO Type",
        "toTable": "Dim - SO Type",
        "toColumn": "SO Type"
      },
      {
        "name": "52505483-231b-4796-b682-946aef8605c6",
        "fromTable": "Fact - Production Plan Agreement",
        "fromColumn": "Order Type",
        "toTable": "Dim - SO Type",
        "toColumn": "SO Type"
      },
      {
        "name": "87af954b-b0b1-4453-9d7c-499a6088d1df",
        "fromTable": "Fact - Booklet Quota",
        "fromColumn": "STK Keeper Code",
        "toTable": "Dim - Booklet",
        "toColumn": "STK Keeper Code"
      },
      {
        "name": "27704fbb-70b2-4cbf-9ffb-309d1446163d",
        "fromTable": "Fact - Actual Production",
        "fromColumn": "STK Keeper Code",
        "toTable": "Dim - Booklet",
        "toColumn": "STK Keeper Code"
      },
      {
        "name": "1d616da5-d213-48f0-93f3-3eda5ead5510",
        "fromTable": "Fact - PO SO Schedule Line",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "55636280-f5c0-44b2-ab61-5e807edce208",
        "fromTable": "Fact - PO SO Schedule Line",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "3b33b1c3-eb08-4568-9126-02cd2546d449",
        "fromTable": "Fact - PO SO Schedule Line",
        "fromColumn": "SUPPLIER_WID",
        "toTable": "Dim - Vendor",
        "toColumn": "ROW_WID"
      },
      {
        "name": "a31b0e82-f803-4214-a347-6367183ee1f9",
        "fromTable": "Fact - Production Order",
        "fromColumn": "Require Date",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "31b85a3d-9aaa-4688-86c8-03f3ad1687c3",
        "fromTable": "Fact - PO SO Schedule Line",
        "fromColumn": "SO PO Order Type",
        "toTable": "Dim - SO Type",
        "toColumn": "SO Type"
      },
      {
        "name": "60b629ea-7f58-44e3-93fb-fd9cf4f1a6bb",
        "fromTable": "Fact - Production Plan Order",
        "fromColumn": "SO Type",
        "toTable": "Dim - SO Type",
        "toColumn": "SO Type"
      },
      {
        "name": "21b7c247-98f8-4f4f-b865-5eecaeaaa82a",
        "fromTable": "Fact - Production Order",
        "fromColumn": "Planned Order",
        "toTable": "Dim - Production Planned Order",
        "toColumn": "Planned Order"
      },
      {
        "name": "0382ac2a-bdc0-45e5-80f9-fa42f644f753",
        "fromTable": "Fact - Production Plan Order",
        "fromColumn": "Planned Order",
        "toTable": "Dim - Production Planned Order",
        "toColumn": "Planned Order"
      },
      {
        "name": "29ba257f-2442-4d96-8c46-ce26994682c1",
        "fromTable": "Fact - PO SO Schedule Line",
        "fromColumn": "Delivery Date",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "cba84757-a516-4677-bbcd-8b5aa82d5ed9",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "SLOC_WID",
        "toTable": "Dim - Storage Location",
        "toColumn": "ROW_WID"
      },
      {
        "name": "f54f9204-9c45-4481-9d25-a1d7d0d7fb84",
        "fromTable": "Fact - Gemstone Deffects",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7a2de4fb-1021-443d-ba0f-a686cbf91319",
        "fromTable": "Fact - Plating",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b7af54b1-8834-4322-8438-c0a92def3c29",
        "fromTable": "Fact - Actual Production",
        "fromColumn": "Booklet_ID",
        "toTable": "Dim - Actual Production",
        "toColumn": "ROW_WID"
      },
      {
        "name": "bea16fe3-687e-4a98-b0fd-140b47996274",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "MRP_CONTROLLER_WID",
        "toTable": "Dim - MRP Controller",
        "toColumn": "ROW_WID"
      },
      {
        "name": "28377da4-9d8e-424a-9b73-774a51c5075d",
        "fromTable": "Fact - Customer Feedback",
        "fromColumn": "DEFFECT_WID",
        "toTable": "Dim - Production Deffects",
        "toColumn": "ROW_WID"
      },
      {
        "name": "d45e7fa3-d4e0-4f86-afc1-c61d84d17b95",
        "fromTable": "Fact - Customer Feedback",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "540f0d5a-b584-414e-9793-dc3d84a9f018",
        "fromTable": "Fact - Gemstone Deffects",
        "fromColumn": "MONTH_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "2922c694-138d-4234-85f0-dc388eafcc2b",
        "fromTable": "Fact - Gemstone GR",
        "fromColumn": "POSTING_DATE",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "6bf07075-9f32-4b98-956f-7af5775685ab",
        "fromTable": "Fact - Gemstone GR",
        "fromColumn": "BOOKLET_OUT_WID",
        "toTable": "Dim - Actual Production",
        "toColumn": "ROW_WID"
      },
      {
        "name": "53ef908f-551b-4d63-b18a-8d978f8b8f48",
        "fromTable": "Fact - Gemstone Deffects",
        "fromColumn": "BOOKLET_ID",
        "toTable": "Dim - Actual Production",
        "toColumn": "ROW_WID"
      },
      {
        "name": "7f6e3a3d-4be8-425c-a428-eef94f0e1f9c",
        "fromTable": "Fact - Production Plan Agreement",
        "fromColumn": "Sales Create DT",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "814da123-a62b-481e-9bef-69d2b806076e",
        "fromTable": "Dim - Work Center",
        "fromColumn": "WC_DEFFECTS",
        "toTable": "Dim - Actual Production",
        "toColumn": "ROW_WID"
      },
      {
        "name": "9cd98290-9cd8-4165-8d84-a70d66cae40a",
        "fromTable": "Fact - Deffects Quota",
        "fromColumn": "ROW_WID",
        "toTable": "Dim - Actual Production",
        "toColumn": "ROW_WID",
        "isActive": false
      },
      {
        "name": "5a254521-06da-4e5d-83fe-600317acd4c7",
        "fromTable": "Fact - Production Deffects",
        "fromColumn": "WORK_CENTER_WID",
        "toTable": "Dim - Work Center",
        "toColumn": "ROW_WID"
      },
      {
        "name": "9c18abf8-fa73-4506-8c79-1da27303cf3c",
        "fromTable": "Fact - Production Deffect Summary",
        "fromColumn": "MONTH_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "4f3cf387-e232-4bad-bc2f-230a53f22fb5",
        "fromTable": "Fact - Actual Production",
        "fromColumn": "MRP_CONTROLLER_WID",
        "toTable": "Dim - MRP Controller",
        "toColumn": "ROW_WID"
      },
      {
        "name": "573c4c11-2f4b-48c8-9e08-4e46992e99ac",
        "fromTable": "Fact - Deffects Quota",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "af67de0a-dc3d-4ddb-8be7-0450152565e5",
        "fromTable": "Fact - Customer Feedback",
        "fromColumn": "CUSTOMER_WID",
        "toTable": "Dim - Customer",
        "toColumn": "ROW_WID"
      },
      {
        "name": "c05be6df-437d-4f3c-898f-a0a8139cf702",
        "fromTable": "Fact - Condition",
        "fromColumn": "ConditionID",
        "toTable": "Fact - All Sales Invoice Line",
        "toColumn": "ConditionID"
      },
      {
        "name": "6bbb3f53-018a-41b2-b18f-339229a47c91",
        "fromTable": "Fact - Quality Control Comments",
        "fromColumn": "Date_key",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "98044183-c482-4d5d-930b-ac9d10f53f43",
        "fromTable": "Fact - Customer Feedback",
        "fromColumn": "FEEDBACK_DATE",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "b89ed3bc-3ee2-45ee-8731-99672c25b35b",
        "fromTable": "Fact - All Sales Invoice Line",
        "fromColumn": "Lunar Date",
        "toTable": "Dim - Time (Lunar)",
        "toColumn": "Lunar Date"
      },
      {
        "name": "a1a07248-55b5-4b8e-b9ce-dfc5d631ec94",
        "fromTable": "Fact - Plating Liquid",
        "fromColumn": "DATE",
        "toTable": "Dim - Time",
        "toColumn": "Date"
      },
      {
        "name": "7af94cda-3cde-4f68-846c-30a303272e39",
        "fromTable": "CVR by Store by Date",
        "fromColumn": "DATE_WID",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "16cdf690-8298-44ee-985f-ad256b828453",
        "fromTable": "Fact - Capacity Planned Order",
        "fromColumn": "Planned Order",
        "toTable": "Dim - Production Planned Order",
        "toColumn": "Planned Order"
      },
      {
        "name": "1ee06b7b-d850-4d7f-87b8-5ad19532f092",
        "fromTable": "Fact - Capacity Planned Order",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      },
      {
        "name": "0271c01f-623d-4c40-98e3-c31ba3e47498",
        "fromTable": "Fact - Capacity Planned Order",
        "fromColumn": "REQUIRE_DATE",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e06692b4-8125-4cc5-9117-dba786de5d27",
        "fromTable": "Fact - Capacity Planned Order",
        "fromColumn": "WORK_CENTER_WID",
        "toTable": "Dim - Work Center",
        "toColumn": "ROW_WID"
      },
      {
        "name": "3ce458de-f390-4cf3-8a68-706717cda487",
        "fromTable": "Fact - Forecasting",
        "fromColumn": "DATE_KEY",
        "toTable": "Dim - Time",
        "toColumn": "ROW_WID"
      },
      {
        "name": "e40bfe3f-b295-4f52-ab47-3a24d90429db",
        "fromTable": "Fact - Forecasting",
        "fromColumn": "PLANT_WID",
        "toTable": "Dim - Plant",
        "toColumn": "ROW_WID"
      },
      {
        "name": "303af61d-504b-457e-8a49-9d0010068716",
        "fromTable": "Fact - Forecasting",
        "fromColumn": "PRODUCT_WID",
        "toTable": "Dim - Product",
        "toColumn": "ROW_WID"
      }
    ],
    "perspectives": [
      {
        "name": "Public Sales",
        "tables": [
          {
            "name": "Dim - Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "REGION"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "Sales area"
              },
              {
                "name": "ASM_NAME"
              },
              {
                "name": "BRANCH_DIRECTOR_NAME"
              },
              {
                "name": "First Transaction Date"
              },
              {
                "name": "First Transaction DT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "LAST_TRX_DT"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Name 1"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "RSM_NAME"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "STORE_MANAGER_NAME"
              },
              {
                "name": "Tier (desc)"
              }
            ],
            "measures": [
              {
                "name": "# Plant New"
              },
              {
                "name": "..Plant (YTD)"
              },
              {
                "name": "# Plant"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "YEAR_AGO_WID"
              },
              {
                "name": "! Quater Key"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "Day_today"
              },
              {
                "name": "earliest Refresh Date"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month Format"
              },
              {
                "name": "now"
              },
              {
                "name": "Year Format"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Brand class"
              },
              {
                "name": "SIZE"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "SC_PRODUCT_LV4"
              }
            ]
          },
          {
            "name": "Dim - Channel",
            "columns": [
              {
                "name": "CHANNEL_CODE"
              },
              {
                "name": "CHANNEL_DESC"
              },
              {
                "name": "ROW_WID"
              }
            ]
          },
          {
            "name": "Dim - Customer",
            "columns": [
              {
                "name": "Age"
              },
              {
                "name": "BIRTHDAY"
              },
              {
                "name": "Create Date"
              },
              {
                "name": "CREATED_ON_DT"
              },
              {
                "name": "CUST_CARD_DESC"
              },
              {
                "name": "CUST_CAT"
              },
              {
                "name": "Customer Code"
              },
              {
                "name": "Customer Group"
              },
              {
                "name": "Customer Name"
              },
              {
                "name": "Customer Parent Code"
              },
              {
                "name": "CUSTOMER_KOL"
              },
              {
                "name": "Gender"
              },
              {
                "name": "KOL_FLG"
              },
              {
                "name": "Last Order Date"
              },
              {
                "name": "LOYALTY_POINT"
              },
              {
                "name": "Number of month Not Buy"
              },
              {
                "name": "PHONE_FLAG"
              },
              {
                "name": "PROVINCE_EN"
              },
              {
                "name": "REGION_WID"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Title"
              },
              {
                "name": "VL_Flag"
              }
            ],
            "measures": [
              {
                "name": "# Customer (Master)"
              },
              {
                "name": "# Customer (master) (create)"
              },
              {
                "name": "# Customer NOT Buy"
              }
            ]
          },
          {
            "name": "Dim - Program",
            "columns": [
              {
                "name": "CK_DL_SDate"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DATASOURCE_NUM_ID"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "EFFECTIVE_FROM_DT"
              },
              {
                "name": "EFFECTIVE_TO_DT"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PROGRAM_CATEGORY"
              },
              {
                "name": "PROGRAM_NAME"
              },
              {
                "name": "PROGRAM_TYPE"
              },
              {
                "name": "ROW_WID"
              }
            ]
          },
          {
            "name": "Fact - All Sales Invoice Line",
            "columns": [
              {
                "name": "Channel Code"
              },
              {
                "name": "Customer WID"
              },
              {
                "name": "Discount Amount"
              },
              {
                "name": "Gold Amount"
              },
              {
                "name": "Gross Weight"
              },
              {
                "name": "Invoice Number"
              },
              {
                "name": "Invoice Type"
              },
              {
                "name": "INVOICED_ON_DT_WID"
              },
              {
                "name": "Labour Cost"
              },
              {
                "name": "Net Amount"
              },
              {
                "name": "Net Weight"
              },
              {
                "name": "Other Amount"
              },
              {
                "name": "Q10"
              },
              {
                "name": "Qty"
              },
              {
                "name": "Tax Amount"
              },
              {
                "name": "Type Plant"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DELIVERY_PRIORITY"
              },
              {
                "name": "Group_age"
              },
              {
                "name": "HAOLAI_AMT"
              },
              {
                "name": "Invoice Date"
              },
              {
                "name": "Invoice_Hour"
              },
              {
                "name": "KOL_AMT"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PRODUCT_INVENTORY_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "PROGRAM_CODE"
              },
              {
                "name": "PROGRAM_NAME"
              },
              {
                "name": "SALES_PERSON"
              },
              {
                "name": "SHIPPING_CONDITION"
              }
            ],
            "measures": [
              {
                "name": "# Invoice"
              },
              {
                "name": "# All Qty (LM)"
              },
              {
                "name": "# All Qty (LY)"
              },
              {
                "name": ". All Net Amt"
              },
              {
                "name": ". All Net Amt (LM)"
              },
              {
                "name": ". All Net Amt (LY)"
              },
              {
                "name": ". All Net Amt Return (LY)"
              },
              {
                "name": ". All Net Amt Return (LM)"
              },
              {
                "name": ". All Net Amt Return"
              },
              {
                "name": "# All Active Plant"
              },
              {
                "name": "# Cust lifecycle"
              },
              {
                "name": "# All Cust Transaction (PC)"
              },
              {
                "name": "# All Cust Transaction (PC) (LM)"
              },
              {
                "name": "# All Cust Transaction (PC) (LY)"
              },
              {
                "name": "# All Customer"
              },
              {
                "name": "# All Customer (LM)"
              },
              {
                "name": "# All Customer (LY)"
              },
              {
                "name": "# Promotion_Trx (PC)"
              },
              {
                "name": "# All QTy Return"
              },
              {
                "name": "# All Qty Return (LM)"
              },
              {
                "name": "# All Qty return (LY)"
              },
              {
                "name": ". All HaoLai Amt"
              },
              {
                "name": ". All HaoLai Amt (LM)"
              },
              {
                "name": ". All HaoLai Amt (LY)"
              },
              {
                "name": ". All Labor Cost"
              },
              {
                "name": ". All Labor Cost (LM)"
              },
              {
                "name": ". All Labor Cost (LY)"
              },
              {
                "name": ". All Net Amt (all Cust)"
              },
              {
                "name": ". Promotion_NetAmt"
              },
              {
                "name": ". Promotion_NetAmt LY"
              },
              {
                "name": "AVG Amt/Trx"
              },
              {
                "name": "AVG Amt/Trx (LM)"
              },
              {
                "name": "AVG Amt/Trx (LY)"
              },
              {
                "name": "AVG Qty/Trx"
              },
              {
                "name": "AVG Qty/Trx (LM)"
              },
              {
                "name": "AVG Qty/Trx (LY)"
              },
              {
                "name": "Date New Customer_q"
              },
              {
                "name": "Q_cust_new"
              },
              {
                "name": ". All Gold Amt"
              },
              {
                "name": ". All Gold Amt (LM)"
              },
              {
                "name": ". All Gold Amt (LY)"
              }
            ]
          },
          {
            "name": "Fact - SC Recommend",
            "columns": [
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "BASIC_MATERIAL"
              },
              {
                "name": "GIA_VON"
              },
              {
                "name": "MIN"
              },
              {
                "name": "MAX"
              },
              {
                "name": "VON_TON_MIN"
              },
              {
                "name": "VON_TON_MAX"
              },
              {
                "name": "CAP"
              },
              {
                "name": "GENDER"
              },
              {
                "name": "MATERIAL_TYPE"
              },
              {
                "name": "EFFECTIVE_FROM"
              },
              {
                "name": "EFFECTIVE_TO"
              }
            ]
          }
        ]
      },
      {
        "name": "Private All",
        "tables": [
          {
            "name": "Dim - Company",
            "columns": [
              {
                "name": "Address"
              },
              {
                "name": "Company"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "Company Name"
              }
            ]
          },
          {
            "name": "Dim - Program"
          },
          {
            "name": "Dim - Customer",
            "columns": [
              {
                "name": "Age"
              },
              {
                "name": "BIRTHDAY"
              },
              {
                "name": "Create Date"
              },
              {
                "name": "CREATED_ON_DT"
              },
              {
                "name": "CUST_CARD_DESC"
              },
              {
                "name": "CUST_CAT"
              },
              {
                "name": "Customer Code"
              },
              {
                "name": "Customer Group"
              },
              {
                "name": "Customer Parent Code"
              },
              {
                "name": "Gender"
              },
              {
                "name": "LOYALTY_POINT"
              },
              {
                "name": "Number of month Not Buy"
              },
              {
                "name": "PHONE_FLAG"
              },
              {
                "name": "PROVINCE_EN"
              },
              {
                "name": "REGION_WID"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "VL_Flag"
              }
            ],
            "measures": [
              {
                "name": "# Customer (Master)"
              },
              {
                "name": "# Customer (master) (create)"
              },
              {
                "name": "# Customer NOT Buy"
              }
            ]
          },
          {
            "name": "Dim - Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "First Transaction Date"
              },
              {
                "name": "First Transaction DT"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "REGION"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Region Code"
              }
            ]
          },
          {
            "name": "Dim - Territory",
            "columns": [
              {
                "name": "Country"
              },
              {
                "name": "District EN"
              },
              {
                "name": "District XMAN"
              },
              {
                "name": "Province"
              },
              {
                "name": "Province EN"
              },
              {
                "name": "Region"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SALES_REGION"
              },
              {
                "name": "Sub region"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "YEAR_AGO_WID"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "earliest Refresh Date"
              },
              {
                "name": "Month Start"
              }
            ]
          },
          {
            "name": "Fact - Marketing Plan",
            "columns": [
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PROGRAM_WID"
              },
              {
                "name": "TARGET_AMT"
              }
            ],
            "measures": [
              {
                "name": ". Target Marketing"
              }
            ]
          },
          {
            "name": "Fact - Plan Data",
            "columns": [
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "MONTH_KEY"
              },
              {
                "name": "PLAN_REVENUE"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PROD_WID"
              },
              {
                "name": "LEVEL_NAME"
              },
              {
                "name": "PROD_CAT_4_NAME"
              }
            ],
            "measures": [
              {
                "name": ". Net Amt (FC) (YTD)"
              },
              {
                "name": ". Net_Amt_FC"
              }
            ]
          },
          {
            "name": "Fact - RFM",
            "columns": [
              {
                "name": "Avg Amt"
              },
              {
                "name": "Base Line DT"
              },
              {
                "name": "COUNT_ORDER"
              },
              {
                "name": "CUST_WID"
              },
              {
                "name": "Customer Parent Code"
              },
              {
                "name": "Fst Order DT"
              },
              {
                "name": "K_CLUSTER"
              },
              {
                "name": "Last Order DT"
              },
              {
                "name": "Net Amt"
              },
              {
                "name": "Province"
              },
              {
                "name": "Recency"
              },
              {
                "name": "Region"
              },
              {
                "name": "RFM_Frequency"
              },
              {
                "name": "RFM_LEVEL"
              },
              {
                "name": "RFM_Recency"
              },
              {
                "name": "RFM_SCORE"
              },
              {
                "name": "RFM_SEGMENT"
              },
              {
                "name": "Sub Region"
              }
            ]
          },
          {
            "name": "Fact - SSSG",
            "columns": [
              {
                "name": "DATE_KEY"
              },
              {
                "name": "Net Amt"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "Previous Net Amt"
              },
              {
                "name": "Report Flag"
              }
            ],
            "measures": [
              {
                "name": ". SSSG"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "Brand class"
              },
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SIZE"
              }
            ]
          },
          {
            "name": "Dim - Transfer Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PLANT_KIND"
              },
              {
                "name": "PLANT_TYPE_NEW"
              },
              {
                "name": "PLANT_TYPE_OLD"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "Region"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales District"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "SC_REGION_DESC"
              },
              {
                "name": "ORG_CODE"
              },
              {
                "name": "PALEXY_STORE_ID"
              }
            ]
          },
          {
            "name": "Fact - Inventory Transaction",
            "columns": [
              {
                "name": "DATE_KEY"
              },
              {
                "name": "BASE_QTY"
              },
              {
                "name": "BASE_UOM_CODE"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "MVMNT_TYPE_WID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "TRANSFERD_PLANT_WID"
              },
              {
                "name": "STORAGE_LOC_WID"
              },
              {
                "name": "TRANSFERED_SLOC_WID"
              },
              {
                "name": "SPEC_NET_QTY"
              },
              {
                "name": "QI_NET_QTY"
              },
              {
                "name": "BLOCK_NET_QTY"
              },
              {
                "name": "INTRANSIT_NET_QTY"
              },
              {
                "name": "NET_QTY"
              }
            ],
            "measures": [
              {
                "name": ". Inven Net Qty"
              },
              {
                "name": ". Special Qty"
              },
              {
                "name": ". Base Qty"
              },
              {
                "name": ". Block Qty"
              },
              {
                "name": ". QI Qty"
              },
              {
                "name": ". Intransit Qty"
              },
              {
                "name": ". Intransit Net Amt"
              },
              {
                "name": ". Net Amount"
              }
            ]
          },
          {
            "name": "Dim - Transfer Sloc",
            "columns": [
              {
                "name": "ROW_WID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "Sloc Code"
              },
              {
                "name": "Sloc Name"
              },
              {
                "name": "Type"
              },
              {
                "name": "Address"
              },
              {
                "name": "SLOC_GROUP"
              }
            ]
          },
          {
            "name": "Dim - Product Cost",
            "columns": [
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "V_STD_PRICE"
              },
              {
                "name": "S_STD_PRICE"
              },
              {
                "name": "V_MVAVG_PRICE"
              },
              {
                "name": "S_MVAVG_PRICE"
              }
            ]
          },
          {
            "name": "Dim - Inventory Product",
            "columns": [
              {
                "name": "ROW_WID"
              },
              {
                "name": "MRP Type"
              },
              {
                "name": "MRP_NAME"
              },
              {
                "name": "MRP_CODE"
              }
            ]
          },
          {
            "name": "Fact - All Sales Invoice Line",
            "columns": [
              {
                "name": "Channel Code"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Customer WID"
              },
              {
                "name": "Discount Amount"
              },
              {
                "name": "Gold Amount"
              },
              {
                "name": "Gross Weight"
              },
              {
                "name": "Invoice Number"
              },
              {
                "name": "Invoice Type"
              },
              {
                "name": "INVOICED_ON_DT_WID"
              },
              {
                "name": "Labour Cost"
              },
              {
                "name": "Net Amount"
              },
              {
                "name": "Net Weight"
              },
              {
                "name": "Other Amount"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "Q10"
              },
              {
                "name": "Qty"
              },
              {
                "name": "Tax Amount"
              },
              {
                "name": "Type Plant"
              },
              {
                "name": "Invoice_Hour"
              }
            ],
            "measures": [
              {
                "name": "# All Active Plant"
              },
              {
                "name": "# All Cust Transaction (PC)"
              },
              {
                "name": "# All Cust Transaction (PC) (LM)"
              },
              {
                "name": "# All Cust Transaction (PC) (LY)"
              },
              {
                "name": "# All Customer"
              },
              {
                "name": "# All Customer (LM)"
              },
              {
                "name": "# All Customer (LY)"
              },
              {
                "name": "# Invoice"
              },
              {
                "name": "# Promotion_Trx (PC)"
              },
              {
                "name": "# All Qty (LM)"
              },
              {
                "name": "# All Qty (LY)"
              },
              {
                "name": ". All Net Amt"
              },
              {
                "name": ". All Net Amt (all Cust)"
              },
              {
                "name": ". All Net Amt (LM)"
              },
              {
                "name": ". All Net Amt (LY)"
              },
              {
                "name": ". Promotion_NetAmt"
              },
              {
                "name": ". Promotion_NetAmt LY"
              },
              {
                "name": "AVG Amt/Trx"
              },
              {
                "name": "AVG Amt/Trx (LM)"
              },
              {
                "name": "AVG Amt/Trx (LY)"
              },
              {
                "name": "AVG Qty/Trx"
              },
              {
                "name": "AVG Qty/Trx (LM)"
              },
              {
                "name": "AVG Qty/Trx (LY)"
              },
              {
                "name": "# Cust lifecycle"
              }
            ]
          },
          {
            "name": "Dim - Product Lot",
            "columns": [
              {
                "name": "Batch Number"
              },
              {
                "name": "Gold Weight"
              },
              {
                "name": "Stone Weight"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Certificate 01"
              },
              {
                "name": "Certificate 02"
              },
              {
                "name": "BATCH_NUMBER2"
              }
            ]
          }
        ]
      },
      {
        "name": "Shipment",
        "tables": [
          {
            "name": "Dim - Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "First Transaction Date"
              },
              {
                "name": "First Transaction DT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "LAST_TRX_DT"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Name 1"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "REGION"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales area"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "Tier (desc)"
              },
              {
                "name": "XMAN Code"
              }
            ],
            "measures": [
              {
                "name": "# Plant New"
              },
              {
                "name": "..Plant (YTD)"
              },
              {
                "name": "# Plant"
              }
            ]
          },
          {
            "name": "Dim - Transfer Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PLANT_KIND"
              },
              {
                "name": "PLANT_TYPE_NEW"
              },
              {
                "name": "PLANT_TYPE_OLD"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "Region"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales District"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "SC_REGION_DESC"
              },
              {
                "name": "ORG_CODE"
              },
              {
                "name": "PALEXY_STORE_ID"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "Brand class"
              },
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SIZE"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "! Quater Key"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "YEAR_AGO_WID"
              },
              {
                "name": "Month Start"
              }
            ]
          },
          {
            "name": "Fact - Shipment",
            "columns": [
              {
                "name": "CONTAINER NUM"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "Delivery Date"
              },
              {
                "name": "DELIVERY ITEM"
              },
              {
                "name": "Delivery Num"
              },
              {
                "name": "DELIVERY TYPE"
              },
              {
                "name": "DELIVERY_DT"
              },
              {
                "name": "GI Date"
              },
              {
                "name": "GI Num"
              },
              {
                "name": "GI_DT"
              },
              {
                "name": "GR Date"
              },
              {
                "name": "GR Num"
              },
              {
                "name": "GR_DATE"
              },
              {
                "name": "MONTH_KEY"
              },
              {
                "name": "NET AMT"
              },
              {
                "name": "PRICE_RANGE"
              },
              {
                "name": "PRODUCT_CAT_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "Qty"
              },
              {
                "name": "Shipment Num"
              },
              {
                "name": "SHIPMENT_DT"
              },
              {
                "name": "Shipper"
              },
              {
                "name": "Shipping End Date"
              },
              {
                "name": "SHIPPING_FROM_PLANT_WID"
              },
              {
                "name": "SHIPPING_TO_PLANT_WID"
              },
              {
                "name": "SHIPPING_TYPE_CODE"
              },
              {
                "name": ".GI - DO (day)"
              },
              {
                "name": ".GR - GI (day)"
              },
              {
                "name": ".SM - GI (day)"
              },
              {
                "name": ".SME - GR (day)"
              },
              {
                "name": ".SME - SM (day)"
              },
              {
                "name": ".Today - SME (day)"
              }
            ]
          }
        ]
      },
      {
        "name": "NHVV",
        "tables": [
          {
            "name": "Dim - NHVV_Error",
            "columns": [
              {
                "name": "Error Code"
              },
              {
                "name": "Error Description"
              },
              {
                "name": "Error Name"
              },
              {
                "name": "ERROR_GROUP"
              },
              {
                "name": "ROW_WID"
              }
            ]
          },
          {
            "name": "Dim - Plant",
            "columns": [
              {
                "name": "ASM_NAME"
              },
              {
                "name": "BRANCH_DIRECTOR_NAME"
              },
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "First Transaction Date"
              },
              {
                "name": "First Transaction DT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "LAST_TRX_DT"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Name 1"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "REGION"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "RSM_NAME"
              },
              {
                "name": "Sales area"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "STORE_MANAGER_NAME"
              },
              {
                "name": "TIER"
              },
              {
                "name": "Tier (desc)"
              },
              {
                "name": "XMAN Code"
              }
            ],
            "measures": [
              {
                "name": "# Plant New"
              },
              {
                "name": "..Plant (YTD)"
              },
              {
                "name": "# Plant"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "Brand class"
              },
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SIZE"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "! Quater Key"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Format"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "now"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "Year Format"
              },
              {
                "name": "YEAR_AGO_WID"
              }
            ]
          },
          {
            "name": "Dim - Transfer Plant",
            "columns": [
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PLANT_KIND"
              },
              {
                "name": "PLANT_TYPE_NEW"
              },
              {
                "name": "PLANT_TYPE_OLD"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "Region"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Sales District"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "TIER"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "SC_REGION_DESC"
              },
              {
                "name": "ORG_CODE"
              },
              {
                "name": "PALEXY_STORE_ID"
              }
            ]
          },
          {
            "name": "Fact - NHVV",
            "columns": [
              {
                "name": "CHECKER_DATE"
              },
              {
                "name": "CREATE_DATE"
              },
              {
                "name": "Date_key"
              },
              {
                "name": "DELIVERY_CODE"
              },
              {
                "name": "DELIVERY_ID"
              },
              {
                "name": "ERROR_WID"
              },
              {
                "name": "FEEDBACK"
              },
              {
                "name": "INTEGRATION_ID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "POINT"
              },
              {
                "name": "PROD_IMAGE_LINK"
              },
              {
                "name": "PRODUCT_BATCH"
              },
              {
                "name": "PRODUCT_GROUP"
              },
              {
                "name": "PRODUCT_GROUP_ID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "STATUS"
              },
              {
                "name": "TRANSFERD_PLANT_WID"
              },
              {
                "name": "USER_ID"
              }
            ]
          }
        ]
      },
      {
        "name": "Production"
      },
      {
        "name": "HR_PNJP",
        "tables": [
          {
            "name": "Dim - Employee",
            "columns": [
              {
                "name": "Company Code"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Department Code"
              },
              {
                "name": "Department Name"
              },
              {
                "name": "Division Name"
              },
              {
                "name": "Effect From DT"
              },
              {
                "name": "Effect To DT"
              },
              {
                "name": "Employee Code"
              },
              {
                "name": "Employee FLG"
              },
              {
                "name": "Employee Name"
              },
              {
                "name": "Gender"
              },
              {
                "name": "OT Weekend Flag"
              },
              {
                "name": "Position Name"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Team Name"
              },
              {
                "name": "Total Employee"
              }
            ]
          },
          {
            "name": "Dim - Inventory Product",
            "columns": [
              {
                "name": "MRP Type"
              },
              {
                "name": "MRP_CODE"
              },
              {
                "name": "MRP_NAME"
              },
              {
                "name": "ROW_WID"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "Brand class"
              },
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SC_PRODUCT_LV4"
              },
              {
                "name": "SIZE"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "! Quater Key"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "earliest Refresh Date"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Format"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "now"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "Year Format"
              },
              {
                "name": "YEAR_AGO_WID"
              }
            ]
          },
          {
            "name": "Fact - Actual Production",
            "columns": [
              {
                "name": "DATE_KEY"
              },
              {
                "name": "Document Number"
              },
              {
                "name": "Order Number"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "UOM"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "MRP_CONTROLLER_WID"
              },
              {
                "name": "TYPES"
              },
              {
                "name": "Actual QTY"
              },
              {
                "name": "Location Wid"
              },
              {
                "name": "Q10"
              },
              {
                "name": "STK Keeper Code"
              },
              {
                "name": "Standard Weight"
              },
              {
                "name": "STD Weight Flag"
              },
              {
                "name": "STK Keeper Output"
              },
              {
                "name": "Output sloc"
              },
              {
                "name": "STD Text Key"
              },
              {
                "name": "Batch"
              },
              {
                "name": "Booklet_ID"
              },
              {
                "name": "Total Weight"
              },
              {
                "name": "INTEGRATION_ID"
              },
              {
                "name": "STK_KEEPING_GROUP"
              }
            ]
          },
          {
            "name": "Fact - Timesheet",
            "columns": [
              {
                "name": "Employee_wid"
              },
              {
                "name": "Normal Hour"
              },
              {
                "name": "NOTE"
              },
              {
                "name": "OT_HOURS"
              },
              {
                "name": "Shift"
              },
              {
                "name": "WORKING_DATE_WID"
              }
            ]
          },
          {
            "name": "Fact - Resource Performance",
            "columns": [
              {
                "name": "EMPLOYEE_WID"
              },
              {
                "name": "LB Days"
              },
              {
                "name": "TARGET"
              },
              {
                "name": "Target Point"
              },
              {
                "name": "Working Date Wid"
              }
            ]
          },
          {
            "name": "Fact - Plan Revenue - PNJP",
            "columns": [
              {
                "name": "Product Wid"
              },
              {
                "name": "INVOICE_GRP"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "PLANT_NAME"
              },
              {
                "name": "PROD_CAT_2_CODE"
              },
              {
                "name": "PROD_CAT_3_CODE"
              },
              {
                "name": "PROD_CAT_4_CODE"
              },
              {
                "name": "PROD_CAT_4_NAME"
              },
              {
                "name": "NET_AMT"
              },
              {
                "name": "CHANNEL_CODE"
              },
              {
                "name": "Plant_wid"
              }
            ]
          },
          {
            "name": "Fact - Production Plan",
            "columns": [
              {
                "name": "DATE_KEY"
              },
              {
                "name": "Labor not OT"
              },
              {
                "name": "Labor OT"
              },
              {
                "name": "PrO Plan"
              }
            ]
          }
        ]
      },
      {
        "name": "MARKETING",
        "tables": [
          {
            "name": "Dim - Customer",
            "columns": [
              {
                "name": "Age"
              },
              {
                "name": "BIRTHDAY"
              },
              {
                "name": "Create Date"
              },
              {
                "name": "CREATED_ON_DT"
              },
              {
                "name": "CUST_CARD_DESC"
              },
              {
                "name": "CUST_CAT"
              },
              {
                "name": "Customer Code"
              },
              {
                "name": "Customer Group"
              },
              {
                "name": "Customer Name"
              },
              {
                "name": "Customer Parent Code"
              },
              {
                "name": "CUSTOMER_KOL"
              },
              {
                "name": "Gender"
              },
              {
                "name": "KOL_FLG"
              },
              {
                "name": "Last Order Date"
              },
              {
                "name": "LOYALTY_POINT"
              },
              {
                "name": "Number of month Not Buy"
              },
              {
                "name": "PHONE_FLAG"
              },
              {
                "name": "PROVINCE_EN"
              },
              {
                "name": "REGION_WID"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Title"
              },
              {
                "name": "VL_Flag"
              }
            ],
            "measures": [
              {
                "name": "# Customer (Master)"
              },
              {
                "name": "# Customer (master) (create)"
              },
              {
                "name": "# Customer NOT Buy"
              }
            ]
          },
          {
            "name": "Dim - Plant",
            "columns": [
              {
                "name": "ASM_NAME"
              },
              {
                "name": "BRANCH_DIRECTOR_NAME"
              },
              {
                "name": "Channel Plant"
              },
              {
                "name": "Channel Plant Name"
              },
              {
                "name": "CLOSED_DT"
              },
              {
                "name": "Distribution Channel"
              },
              {
                "name": "DISTRICT"
              },
              {
                "name": "First Transaction Date"
              },
              {
                "name": "First Transaction DT"
              },
              {
                "name": "INDUSTRY"
              },
              {
                "name": "LAST_TRX_DT"
              },
              {
                "name": "Open Date"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Plant Name"
              },
              {
                "name": "Plant Name 1"
              },
              {
                "name": "Plant Type"
              },
              {
                "name": "PROVINCE"
              },
              {
                "name": "REGION"
              },
              {
                "name": "Region Code"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "RSM_NAME"
              },
              {
                "name": "Sales area"
              },
              {
                "name": "Sales District Name"
              },
              {
                "name": "Short Name"
              },
              {
                "name": "STORE_MANAGER_NAME"
              },
              {
                "name": "TIER"
              },
              {
                "name": "Tier (desc)"
              },
              {
                "name": "XMAN Code"
              },
              {
                "name": "ASM_CODE"
              },
              {
                "name": "BRANCH_DIRECTOR_CODE"
              },
              {
                "name": "Company Code"
              },
              {
                "name": "Company Name"
              },
              {
                "name": "Palexy ID"
              },
              {
                "name": "Plant Kind"
              },
              {
                "name": "RSM_CODE"
              },
              {
                "name": "Sales District"
              },
              {
                "name": "SC_REGION_DESC"
              },
              {
                "name": "STORE_MANAGER_CODE"
              },
              {
                "name": "STATUS"
              },
              {
                "name": "CUM"
              },
              {
                "name": "DAL_Group"
              },
              {
                "name": "TT_PROVINCE"
              }
            ],
            "measures": [
              {
                "name": "# Plant New"
              },
              {
                "name": "..Plant (YTD)"
              },
              {
                "name": "# Plant"
              }
            ]
          },
          {
            "name": "Dim - Product",
            "columns": [
              {
                "name": "Brand class"
              },
              {
                "name": "COLECTION_CODE"
              },
              {
                "name": "Item Size"
              },
              {
                "name": "PROD_CAT_WID"
              },
              {
                "name": "Product Code"
              },
              {
                "name": "Product Group 4 Name"
              },
              {
                "name": "Product Name"
              },
              {
                "name": "Product Type Name"
              },
              {
                "name": "Purity of Gold"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "SC_PRODUCT_LV4"
              },
              {
                "name": "SIZE"
              },
              {
                "name": "Co-Operate Brand"
              },
              {
                "name": "Gem Group Size"
              },
              {
                "name": "Gem Group Size (MKT)"
              },
              {
                "name": "Gem Group Size (SAP)"
              },
              {
                "name": "Gem Main"
              },
              {
                "name": "Gem Second"
              },
              {
                "name": "Gem Type"
              },
              {
                "name": "MKT_PRODUCT_GRP4_RPT"
              },
              {
                "name": "net_weight"
              },
              {
                "name": "Product Kind"
              },
              {
                "name": "RPT - Product Group 2 Code"
              },
              {
                "name": "Colection Name"
              },
              {
                "name": "RPT_Product Group 4 Name"
              },
              {
                "name": "RPT_Product Group 2 Name"
              }
            ]
          },
          {
            "name": "Dim - Program",
            "columns": [
              {
                "name": "CK_DL_SDate"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DATASOURCE_NUM_ID"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "EFFECTIVE_FROM_DT"
              },
              {
                "name": "EFFECTIVE_TO_DT"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PROGRAM_CATEGORY"
              },
              {
                "name": "PROGRAM_NAME"
              },
              {
                "name": "PROGRAM_TYPE"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Date From"
              },
              {
                "name": "Date To"
              },
              {
                "name": "Program Length"
              },
              {
                "name": "MKT.Year"
              },
              {
                "name": "CK_DL_EDate"
              }
            ],
            "measures": [
              {
                "name": "Length"
              },
              {
                "name": "Length (LY)"
              }
            ]
          },
          {
            "name": "Dim - Time",
            "columns": [
              {
                "name": "! Quater Key"
              },
              {
                "name": "!Order Quater Key"
              },
              {
                "name": "Date"
              },
              {
                "name": "Day Name"
              },
              {
                "name": "Day of Month"
              },
              {
                "name": "Day of Week Num"
              },
              {
                "name": "Day_today"
              },
              {
                "name": "earliest Refresh Date"
              },
              {
                "name": "Half Year"
              },
              {
                "name": "Holiday Flag"
              },
              {
                "name": "Lunar Date Key"
              },
              {
                "name": "Lunar Day"
              },
              {
                "name": "Lunar Month"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month Format"
              },
              {
                "name": "Month Name"
              },
              {
                "name": "Month Num"
              },
              {
                "name": "Month year"
              },
              {
                "name": "MONTH_AGO_WID"
              },
              {
                "name": "now"
              },
              {
                "name": "Quater"
              },
              {
                "name": "ROW_WID"
              },
              {
                "name": "Week"
              },
              {
                "name": "WEEKEND_FLG"
              },
              {
                "name": "Year"
              },
              {
                "name": "Year Format"
              },
              {
                "name": "YEAR_AGO_WID"
              }
            ]
          },
          {
            "name": "Fact - Marketing Plan",
            "columns": [
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PROGRAM_WID"
              },
              {
                "name": "TARGET_AMT"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "MKT.Year"
              },
              {
                "name": "Program Category"
              }
            ],
            "measures": [
              {
                "name": ". Target Marketing"
              },
              {
                "name": ". Target Maketing (Region)"
              },
              {
                "name": ". Target Marketing (LY)"
              }
            ]
          },
          {
            "name": "Fact - Sales Invoice Line",
            "columns": [
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "INVOICED_ON_DT_WID"
              },
              {
                "name": "Invoice date"
              },
              {
                "name": "Customer Type (Month)"
              },
              {
                "name": "Customer Type (Year)"
              },
              {
                "name": "Discount Amount"
              },
              {
                "name": "Invoice Number"
              },
              {
                "name": "Invoice Type"
              },
              {
                "name": "INVOICE_ITEM"
              },
              {
                "name": "Net Amount"
              },
              {
                "name": "Qty"
              },
              {
                "name": "Program_wid"
              },
              {
                "name": "CHANNEL_CODE"
              },
              {
                "name": "CUSTOMER_SOLD_TO_WID"
              },
              {
                "name": "CUST_CARD_DESC"
              },
              {
                "name": "DATE_KEY"
              },
              {
                "name": "EFFECTIVE_FROM_DT"
              },
              {
                "name": "EFFECTIVE_TO_DT"
              },
              {
                "name": "Group Age"
              },
              {
                "name": "MKT_Customer"
              },
              {
                "name": "Program Category"
              },
              {
                "name": "Program Name"
              },
              {
                "name": "Program Type"
              },
              {
                "name": "REGION"
              },
              {
                "name": "SALES_DEAL"
              },
              {
                "name": "SALES_DEAL_NAME"
              },
              {
                "name": "PROGRAM_LENGTH"
              }
            ],
            "measures": [
              {
                "name": ". Net Amt"
              },
              {
                "name": ". Net Amt (LY)"
              },
              {
                "name": "# Customer"
              },
              {
                "name": "# Customer (LY)"
              },
              {
                "name": "# Cust Transaction (PC)"
              },
              {
                "name": "# Cust Transaction (PC) (LY)"
              },
              {
                "name": "# Active Plant"
              },
              {
                "name": ". MKT Net Amt (LY)"
              },
              {
                "name": "% MKT Net Amt/Store (LY)"
              },
              {
                "name": "% MKT Net Amt/Store (CK)"
              },
              {
                "name": "% MKT Active Plant (CK)"
              },
              {
                "name": "MKT Net Amt/Store (LY)"
              },
              {
                "name": "% MKT Net Amt/Qty (CK)"
              },
              {
                "name": "% MKT Cust Transaction (CK)"
              },
              {
                "name": "% MKT Cust Transaction (LY)"
              },
              {
                "name": "% MKT Customer/Store/Day (CK)"
              },
              {
                "name": "% MKT Net Qty (CK)"
              },
              {
                "name": "AVG MKT Net Amt/Qty (CK)"
              },
              {
                "name": "AVG MKT Customer/Store/Day (LY)"
              },
              {
                "name": "% Net Amt (LY)"
              },
              {
                "name": "% MKT Net Amt (LY)"
              },
              {
                "name": "AVG Net Amt/Day"
              },
              {
                "name": "% MKT Net Qty (LY)"
              },
              {
                "name": ". MKT Net Qty (LY)"
              },
              {
                "name": "# MKT Customer (LY)"
              },
              {
                "name": "% MKT Customer (LY)"
              },
              {
                "name": "# MKT Cust Transaction (LY)"
              },
              {
                "name": "% MKT Ticket Size (LY)"
              },
              {
                "name": "AVG Ticket Size"
              },
              {
                "name": "AVG Ticket Size (LY)"
              },
              {
                "name": "AVG MKT Ticket Size (LY)"
              },
              {
                "name": "% Ticket Size (LY)"
              },
              {
                "name": "AVG MKT Qty/Bill (LY)"
              },
              {
                "name": "# MKT Bill (LY)"
              },
              {
                "name": "# Bill"
              },
              {
                "name": "AVG Net Amt/Bill"
              },
              {
                "name": "% Qty/Bill (LY)"
              },
              {
                "name": "AVG Qty/Bill"
              },
              {
                "name": "AVG Qty/Bill (LY)"
              },
              {
                "name": "# Bill (LY)"
              },
              {
                "name": ". Net Qty"
              },
              {
                "name": ". Net Qty (LY)"
              },
              {
                "name": "% MKT Qty/Bill (LY)"
              },
              {
                "name": "AVG Net Amt/Bill (LY)"
              },
              {
                "name": "AVG MKT Net Amt/Bill (LY)"
              },
              {
                "name": "AVG Net Amt/Store"
              },
              {
                "name": "AVG Customer/Store"
              },
              {
                "name": "AVG Net Amt/Store/Day"
              },
              {
                "name": "AVG Customer/Store/Day"
              },
              {
                "name": "# MKT Active Plant (LY)"
              },
              {
                "name": "% MKT Active Plant (LY)"
              },
              {
                "name": "Day"
              },
              {
                "name": "AVG MKT Net Amt/Day (LY)"
              },
              {
                "name": "% MKT Net Amt/Day (LY)"
              },
              {
                "name": "% Net Amt/Bill (LY)"
              },
              {
                "name": "% MKT Net Amt/Bill (LY)"
              },
              {
                "name": "AVG Net Amt/Qty (In)"
              },
              {
                "name": "AVG Net Amt/Qty (LY)"
              },
              {
                "name": "AVG MKT Net Amt/Qty (LY)"
              },
              {
                "name": "% MKT Net Amt/Qty (LY)"
              },
              {
                "name": "% Net Amt/Qty (LY)"
              },
              {
                "name": "AVG Net Amt/Qty (before)"
              },
              {
                "name": "% Net Amt/Qty (B4)"
              },
              {
                "name": "Date Lost Customer"
              },
              {
                "name": ". MKT Net Amt"
              },
              {
                "name": "All Customer"
              },
              {
                "name": "# MKT Cust Transaction (CK)"
              },
              {
                "name": "% MKT Net Amt (CK)"
              },
              {
                "name": ". MKT Net Amt (CK)"
              },
              {
                "name": "% MKT Customer (CK)"
              },
              {
                "name": "AVG MKT Ticket Size (CK)"
              },
              {
                "name": "% MKT Ticket Size (CK)"
              },
              {
                "name": ". MKT Net Qty (CK)"
              },
              {
                "name": "AVG MKT Net Amt/Bill (CK)"
              },
              {
                "name": "% MKT Net Amt/Bill (CK)"
              },
              {
                "name": "AVG MKT Net Amt/Day (CK)"
              },
              {
                "name": "# MKT Customer (CK)"
              },
              {
                "name": "# MKT Bill (CK)"
              },
              {
                "name": "AVG MKT Qty/Bill (CK)"
              },
              {
                "name": "% MKT Qty/Bill (CK)"
              },
              {
                "name": "% MKT Net Amt/Day (CK)"
              },
              {
                "name": "# MKT Active Plant (CK)"
              },
              {
                "name": "AVG MKT Customer/Store (LY)"
              },
              {
                "name": "AVG MKT Customer/Store (CK)"
              },
              {
                "name": "MKT Net Amt/Store (CK)"
              },
              {
                "name": "% Net Amt (Target)"
              },
              {
                "name": "%Net Amt (Region)"
              },
              {
                "name": "% Net Qty (LY)"
              },
              {
                "name": ". MKT Net Amt(Corr)"
              },
              {
                "name": "Date New Customer"
              }
            ]
          },
          {
            "name": "Fact - Finance",
            "columns": [
              {
                "name": "POSTED_ON_DT_WID"
              },
              {
                "name": "TRANSACTION_DT"
              },
              {
                "name": "PAYMENT_DUE_DT"
              },
              {
                "name": "ACCT_DOC_NUM"
              },
              {
                "name": "ACCT_DOC_ITEM"
              },
              {
                "name": "ACCT_DOC_TYPE"
              },
              {
                "name": "DOC_QTY"
              },
              {
                "name": "DOC_AMT"
              },
              {
                "name": "LOC_AMT"
              },
              {
                "name": "DOC_TAX_AMT"
              },
              {
                "name": "LOC_TAX_AMT"
              },
              {
                "name": "PAYMENT_AMT"
              },
              {
                "name": "DOC_STATUS"
              },
              {
                "name": "DOC_CURR_CODE"
              },
              {
                "name": "LOC_CURR_CODE"
              },
              {
                "name": "LOC_EXCHANGE_RATE"
              },
              {
                "name": "EXCHANGE_RATE_TYPE"
              },
              {
                "name": "BASE_UOM_CODE"
              },
              {
                "name": "DB_CR_IND"
              },
              {
                "name": "GL_ACCOUNT_TYPE"
              },
              {
                "name": "OFFSETTING_ACCT_CODE"
              },
              {
                "name": "OFFSETTING_ACCT_TYPE"
              },
              {
                "name": "CUSTOMER_SOLD_TO_CODE"
              },
              {
                "name": "POSTING_TYPE"
              },
              {
                "name": "TRANSACTION_TYPE"
              },
              {
                "name": "PAYMENT_TERM_DAY"
              },
              {
                "name": "REF_DOC_NUM"
              },
              {
                "name": "REF_PAYMENT_NUM"
              },
              {
                "name": "TAX_CODE"
              },
              {
                "name": "BANK_ID"
              },
              {
                "name": "ACTIVITY_TYPE_CODE"
              },
              {
                "name": "CLEARING_DOC_NUM"
              },
              {
                "name": "CLEARING_DOC_ITEM"
              },
              {
                "name": "CLEARING_DOC_DT"
              },
              {
                "name": "SALES_ORDER_NUM"
              },
              {
                "name": "SALES_INVOICE_NUM"
              },
              {
                "name": "PURCH_ORDER_NUM"
              },
              {
                "name": "PURCH_ORDER_ITEM"
              },
              {
                "name": "ASSET_NUMBER"
              },
              {
                "name": "ASSET_SUBNUMBER"
              },
              {
                "name": "ASSET_TRANSACTION_TYPE"
              },
              {
                "name": "TRANSACTION_SOURCE"
              },
              {
                "name": "TRANSACTION_NUM"
              },
              {
                "name": "CANCELLED_TRX_NUM"
              },
              {
                "name": "DOC_HEADER_TEXT"
              },
              {
                "name": "LINE_ITEM_TEXT"
              },
              {
                "name": "CTRL_AREA_CODE"
              },
              {
                "name": "BASELINE_DT"
              },
              {
                "name": "CANCELLED_FLG"
              },
              {
                "name": "ASSIGNMENT_NUM"
              },
              {
                "name": "CREATED_ON_DT"
              },
              {
                "name": "PROGRAM_WID"
              },
              {
                "name": "GL_ACCOUNT_CODE"
              },
              {
                "name": "TRX_FISCAL_PERIOD"
              },
              {
                "name": "POSTED_ON_DT"
              },
              {
                "name": "PRODUCT_CODE"
              },
              {
                "name": "PROFIT_CENTER_CODE"
              },
              {
                "name": "COST_CENTER_CODE"
              },
              {
                "name": "COST_ELEMENT_CODE"
              },
              {
                "name": "CUSTOMER_CODE"
              },
              {
                "name": "SUPPLIER_CODE"
              },
              {
                "name": "PAYMENT_TERM_CODE"
              },
              {
                "name": "LEDGER_CODE"
              },
              {
                "name": "COMPANY_CODE"
              },
              {
                "name": "INV_ORG_CODE"
              }
            ],
            "measures": [
              {
                "name": ". Gift Amt"
              }
            ]
          },
          {
            "name": "Fact - Marketing Spend",
            "columns": [
              {
                "name": "PROGRAM_WID"
              },
              {
                "name": "Cost Group"
              },
              {
                "name": "Item Cost"
              },
              {
                "name": "COST"
              },
              {
                "name": "Program Category"
              },
              {
                "name": "MKT.Year"
              },
              {
                "name": "CHARGEBY"
              },
              {
                "name": "Date_key"
              }
            ]
          },
          {
            "name": "Dim - Sale Deals",
            "columns": [
              {
                "name": "ROW_WID"
              },
              {
                "name": "PROGRAM_CODE"
              },
              {
                "name": "PROGRAM_NAME"
              },
              {
                "name": "EFFECTIVE_FROM_DT"
              },
              {
                "name": "EFFECTIVE_TO_DT"
              },
              {
                "name": "SD_Category"
              },
              {
                "name": "SALEDEAL_ParentGrp"
              }
            ]
          },
          {
            "name": "Fact - Condition",
            "columns": [
              {
                "name": "DOC_CONDITION_NUM"
              },
              {
                "name": "CONDITION_TYPE"
              },
              {
                "name": "CONDITION_VALUE"
              },
              {
                "name": "INVOICE_WID"
              },
              {
                "name": "INVOICE_NUM"
              },
              {
                "name": "INVOICE_ITEM"
              },
              {
                "name": "INVOICED_ON_DT_WID"
              },
              {
                "name": "SALE_DEAL_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "ConditionID"
              },
              {
                "name": "Saledeal_ParentGrp"
              }
            ],
            "measures": [
              {
                "name": ". Discount Amt"
              },
              {
                "name": "# MKT Cust. Use Saledeal"
              },
              {
                "name": "# MKT Cust. Use Saledeal (LY)"
              },
              {
                "name": "% MKT Cust. Use Saledeal"
              },
              {
                "name": "MKT Discount Amt (LY)"
              },
              {
                "name": "MKT Discount / Revenue"
              },
              {
                "name": "MKT Discount / Revenue (LY)"
              },
              {
                "name": "% MKT Discount Amt (LY)"
              },
              {
                "name": "% MKT Discount / Revenue (LY)"
              },
              {
                "name": "% MKT Cust. Use Saledeal (LY)"
              }
            ]
          },
          {
            "name": "Dim - Camera Age",
            "columns": [
              {
                "name": "Palexy AGEID"
              },
              {
                "name": "Palexy Age"
              }
            ]
          },
          {
            "name": "Fact - Camera InStore",
            "columns": [
              {
                "name": "DATE_WID"
              },
              {
                "name": "age_range"
              },
              {
                "name": "duration"
              },
              {
                "name": "recording_time"
              },
              {
                "name": "action_type"
              }
            ],
            "measures": [
              {
                "name": "# Visitors"
              },
              {
                "name": "# Ttl Store Visitors"
              },
              {
                "name": "% CR"
              },
              {
                "name": "# Visitor (CK)"
              },
              {
                "name": "% Visitor (CK)"
              },
              {
                "name": "%CR (CK)"
              }
            ]
          },
          {
            "name": "Fact - ATL",
            "columns": [
              {
                "name": "Plant_wid"
              },
              {
                "name": "PROGRAM_WID"
              },
              {
                "name": "Date_key"
              },
              {
                "name": "Source"
              },
              {
                "name": "Layer"
              },
              {
                "name": "Region"
              },
              {
                "name": "Impressions"
              },
              {
                "name": "Clicks"
              },
              {
                "name": "Reach"
              },
              {
                "name": "Ads_Spend"
              },
              {
                "name": "CTR"
              },
              {
                "name": "Frequency"
              },
              {
                "name": "Engagement"
              },
              {
                "name": "CPC"
              },
              {
                "name": "users"
              },
              {
                "name": "newUsers"
              },
              {
                "name": "pageviews"
              },
              {
                "name": "sessions"
              },
              {
                "name": "bounceRate"
              },
              {
                "name": "TimeOnPage"
              },
              {
                "name": "Program Category"
              },
              {
                "name": "PROGRAM_TYPE"
              },
              {
                "name": "MKT.Year"
              },
              {
                "name": "SessionDuration"
              }
            ],
            "measures": [
              {
                "name": ". Impressions"
              },
              {
                "name": ". Click"
              },
              {
                "name": ". Ads Spend"
              },
              {
                "name": ". CTR"
              },
              {
                "name": ". CPC"
              },
              {
                "name": "# Users"
              },
              {
                "name": "# New Users"
              },
              {
                "name": "# User (LY)"
              },
              {
                "name": "# New User (LY)"
              },
              {
                "name": "% Users (CK)"
              },
              {
                "name": "% New Users (LY)"
              },
              {
                "name": ". Impressions (LY)"
              },
              {
                "name": ". Ads Spend (LY)"
              },
              {
                "name": ". % Ads Spend"
              },
              {
                "name": ". CTR (LY)"
              },
              {
                "name": ". Click (LY)"
              },
              {
                "name": ". CPC (LY)"
              },
              {
                "name": "% Impressions (LY)"
              },
              {
                "name": "% Click (LY)"
              },
              {
                "name": "% CTR (LY)"
              },
              {
                "name": ". Session duration"
              },
              {
                "name": ". Session Duration (LY)"
              },
              {
                "name": ". Session duration IMC"
              },
              {
                "name": ". Session Duration IMC (LY)"
              },
              {
                "name": ". Session duration IMC vs. Total"
              },
              {
                "name": ". Users IMC vs. Total"
              },
              {
                "name": "# Days Ads."
              },
              {
                "name": "# Days Ads. (LY)"
              },
              {
                "name": "# Users IMC"
              },
              {
                "name": "# New Users IMC"
              },
              {
                "name": ". Bounce"
              },
              {
                "name": ". Bounce (LY)"
              },
              {
                "name": ". Bounce IMC"
              },
              {
                "name": ". Bounce IMC (LY)"
              },
              {
                "name": ". Bounce IMC vs. Total"
              },
              {
                "name": ". Bounce IMC vs. Total (LY)"
              },
              {
                "name": ". Reach"
              },
              {
                "name": ". Reach (LY)"
              },
              {
                "name": "% Reach (LY)"
              },
              {
                "name": ". New Users IMC vs. Total"
              }
            ]
          },
          {
            "name": "MKT_CAC",
            "columns": [
              {
                "name": "Value"
              },
              {
                "name": "Value 1"
              }
            ],
            "measures": [
              {
                "name": ". Acquisition Cost"
              },
              {
                "name": ". Ads per Customer"
              },
              {
                "name": ". Ttl MKT Cost"
              },
              {
                "name": "MKT Cost / Revenue"
              },
              {
                "name": ". Ttl MKT Cost (LY)"
              },
              {
                "name": "% Ttl MKT Cost (LY)"
              },
              {
                "name": "% MKT Cost / Revenue (LY)"
              },
              {
                "name": "MKT Cost /Revenue (LY)"
              },
              {
                "name": "% MKT Prog Cost / Target"
              },
              {
                "name": "% MKT Prog Cost/ Revenue"
              },
              {
                "name": ". Ttl MKT Prog Cost"
              },
              {
                "name": ". Ttl MKT Prog Cost (LY)"
              },
              {
                "name": "MKT Prog Cost / Target"
              },
              {
                "name": "MKT Prog Cost / Target (LY)"
              },
              {
                "name": "MKT Prog Cost/ Revenue"
              },
              {
                "name": "MKT Prog Cost/ Revenue (LY)"
              },
              {
                "name": "CPO"
              },
              {
                "name": "CPO (LY)"
              },
              {
                "name": "% Ttl MKT Prog Cost"
              }
            ]
          },
          {
            "name": "Fact - All Sales Invoice Line",
            "columns": [
              {
                "name": "Channel Code"
              },
              {
                "name": "COMPANY_WID"
              },
              {
                "name": "Customer WID"
              },
              {
                "name": "DELIVERY_PRIORITY"
              },
              {
                "name": "Discount Amount"
              },
              {
                "name": "Gold Amount"
              },
              {
                "name": "Gross Weight"
              },
              {
                "name": "Group_age"
              },
              {
                "name": "HAOLAI_AMT"
              },
              {
                "name": "Invoice Date"
              },
              {
                "name": "Invoice Number"
              },
              {
                "name": "Invoice Type"
              },
              {
                "name": "Invoice_Hour"
              },
              {
                "name": "INVOICED_ON_DT_WID"
              },
              {
                "name": "KOL_AMT"
              },
              {
                "name": "Labour Cost"
              },
              {
                "name": "Net Amount"
              },
              {
                "name": "Net Weight"
              },
              {
                "name": "Other Amount"
              },
              {
                "name": "PLANT_WID"
              },
              {
                "name": "PRODUCT_INVENTORY_WID"
              },
              {
                "name": "PRODUCT_WID"
              },
              {
                "name": "PROGRAM_CODE"
              },
              {
                "name": "PROGRAM_NAME"
              },
              {
                "name": "Q10"
              },
              {
                "name": "Qty"
              },
              {
                "name": "SALES_PERSON"
              },
              {
                "name": "SHIPPING_CONDITION"
              },
              {
                "name": "Tax Amount"
              },
              {
                "name": "Type Plant"
              }
            ],
            "measures": [
              {
                "name": "# All Active Plant"
              },
              {
                "name": "# Cust lifecycle"
              },
              {
                "name": "# All Cust Transaction (PC)"
              },
              {
                "name": "# All Cust Transaction (PC) (LM)"
              },
              {
                "name": "# All Cust Transaction (PC) (LY)"
              },
              {
                "name": "# All Customer"
              },
              {
                "name": "# All Customer (LM)"
              },
              {
                "name": "# All Customer (LY)"
              },
              {
                "name": "# Invoice"
              },
              {
                "name": "# Promotion_Trx (PC)"
              },
              {
                "name": "# All Qty (LM)"
              },
              {
                "name": "# All Qty (LY)"
              },
              {
                "name": "# All QTy Return"
              },
              {
                "name": "# All Qty Return (LM)"
              },
              {
                "name": "# All Qty return (LY)"
              },
              {
                "name": ". All HaoLai Amt"
              },
              {
                "name": ". All HaoLai Amt (LM)"
              },
              {
                "name": ". All HaoLai Amt (LY)"
              },
              {
                "name": ". All Labor Cost"
              },
              {
                "name": ". All Labor Cost (LM)"
              },
              {
                "name": ". All Labor Cost (LY)"
              },
              {
                "name": ". All Net Amt"
              },
              {
                "name": ". All Net Amt (all Cust)"
              },
              {
                "name": ". All Net Amt (LM)"
              },
              {
                "name": ". All Net Amt (LY)"
              },
              {
                "name": ". All Net Amt Return"
              },
              {
                "name": ". All Net Amt Return (LM)"
              },
              {
                "name": ". All Net Amt Return (LY)"
              },
              {
                "name": ". Net Weight"
              },
              {
                "name": ". Promotion_NetAmt"
              },
              {
                "name": ". Promotion_NetAmt LY"
              },
              {
                "name": "AVG Amt/Trx"
              },
              {
                "name": "AVG Amt/Trx (LM)"
              },
              {
                "name": "AVG Amt/Trx (LY)"
              },
              {
                "name": "AVG Qty/Trx"
              },
              {
                "name": "AVG Qty/Trx (LM)"
              },
              {
                "name": "AVG Qty/Trx (LY)"
              },
              {
                "name": "Date New Customer_q"
              },
              {
                "name": "Q_cust_new"
              },
              {
                "name": "# All Qty"
              },
              {
                "name": ". All Gold Amt"
              },
              {
                "name": ". All Gold Amt (LM)"
              },
              {
                "name": ". All Gold Amt (LY)"
              }
            ]
          }
        ]
      },
      {
        "name": "CAMERA"
      }
    ],
    "roles": [
      {
        "name": "Administrator",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "PNJCORP\\bi.ptkd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25208"
          },
          {
            "memberName": "PNJCORP\\ngoc.tq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2800"
          },
          {
            "memberName": "PNJCORP\\phu.vt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24811"
          },
          {
            "memberName": "PNJCORP\\vy.ltt02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26349"
          },
          {
            "memberName": "PNJCORP\\minh.hdh",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12262"
          },
          {
            "memberName": "bi_support@pnj.com.vn",
            "memberId": "bi_support@pnj.com.vn",
            "identityProvider": "AzureAD"
          }
        ]
      },
      {
        "name": "PowerUser",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "PNJCORP\\toan.nb01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24224"
          },
          {
            "memberName": "PNJCORP\\trung.lnt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26770"
          },
          {
            "memberName": "PNJCORP\\loan.ttp01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1593"
          },
          {
            "memberName": "PNJCORP\\tuan.nm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14670"
          },
          {
            "memberName": "PNJCORP\\han.ltn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1585"
          },
          {
            "memberName": "PNJCORP\\tuyen.ptn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2863"
          },
          {
            "memberName": "PNJCORP\\danh.nv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3799"
          },
          {
            "memberName": "PNJCORP\\phong.tq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-21829"
          },
          {
            "memberName": "PNJCORP\\tien.tv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-21576"
          },
          {
            "memberName": "PNJCORP\\chi.dn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3160"
          },
          {
            "memberName": "PNJCORP\\trung.nv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3436"
          },
          {
            "memberName": "PNJCORP\\trung.nt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2850"
          },
          {
            "memberName": "PNJCORP\\anh.ph01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3999"
          },
          {
            "memberName": "PNJCORP\\thong.dv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3798"
          },
          {
            "memberName": "PNJCORP\\huy.hd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5514"
          },
          {
            "memberName": "PNJCORP\\dan.tv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1548"
          },
          {
            "memberName": "PNJCORP\\son.pn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3153"
          },
          {
            "memberName": "PNJCORP\\bi.ptkd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25208"
          },
          {
            "memberName": "PNJCORP\\trang.ntk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3810"
          },
          {
            "memberName": "PNJCORP\\khang.tq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3791"
          },
          {
            "memberName": "PNJCORP\\luan.nt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3916"
          },
          {
            "memberName": "PNJCORP\\tri.nl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-7331"
          },
          {
            "memberName": "PNJCORP\\anh.tt03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-21535"
          },
          {
            "memberName": "PNJCORP\\nha.lt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22126"
          },
          {
            "memberName": "PNJCORP\\vien.tm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3948"
          },
          {
            "memberName": "PNJCORP\\vinh.pt03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28384"
          },
          {
            "memberName": "PNJCORP\\tam.ptt03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3930"
          },
          {
            "memberName": "PNJCORP\\hoa.ch",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29423"
          },
          {
            "memberName": "PNJCORP\\bang.pny",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28652"
          },
          {
            "memberName": "PNJCORP\\hai.dx",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29405"
          },
          {
            "memberName": "PNJCORP\\phong.nv03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28655"
          },
          {
            "memberName": "PNJCORP\\huong.ntl01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22092"
          },
          {
            "memberName": "PNJCORP\\thuy.ntd02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24367"
          },
          {
            "memberName": "PNJCORP\\bao.tg01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22315"
          },
          {
            "memberName": "PNJCORP\\duy.ltq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3994"
          },
          {
            "memberName": "PNJCORP\\hoai.pt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-13769"
          },
          {
            "memberName": "PNJCORP\\thanh.lk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27607"
          },
          {
            "memberName": "PNJCORP\\cuong.pv01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2463"
          },
          {
            "memberName": "PNJCORP\\tam.tpt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-18726"
          },
          {
            "memberName": "PNJCORP\\dung.nth02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-16502"
          },
          {
            "memberName": "PNJCORP\\thuy.nt12",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-16659"
          },
          {
            "memberName": "PNJCORP\\nam.tl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28446"
          }
        ]
      },
      {
        "name": "StandardUser",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "PNJCORP\\thao.pt08",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24885"
          },
          {
            "memberName": "PNJCORP\\thong.nc",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1700"
          },
          {
            "memberName": "PNJCORP\\tri.pk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10305"
          },
          {
            "memberName": "PNJCORP\\giang.pv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28360"
          },
          {
            "memberName": "PNJCORP\\dung.ctn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2828"
          },
          {
            "memberName": "PNJCORP\\lien.htx",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14254"
          },
          {
            "memberName": "PNJCORP\\thong.lt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2846"
          },
          {
            "memberName": "PNJCORP\\huy.vh01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1680"
          },
          {
            "memberName": "PNJCORP\\chau.ltb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1686"
          },
          {
            "memberName": "PNJCORP\\tram.lth01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25965"
          },
          {
            "memberName": "PNJCORP\\duy.lnh",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27822"
          },
          {
            "memberName": "PNJCORP\\mai.tn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14116"
          },
          {
            "memberName": "PNJCORP\\duy.th01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28231"
          },
          {
            "memberName": "PNJCORP\\kiet.pq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23345"
          },
          {
            "memberName": "PNJCORP\\kien.dt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2795"
          },
          {
            "memberName": "PNJCORP\\huy.pd01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24102"
          },
          {
            "memberName": "PNJCORP\\duy.ln",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2798"
          },
          {
            "memberName": "PNJCORP\\tram.ltn03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29215"
          },
          {
            "memberName": "PNJCORP\\anh.pnh",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12167"
          },
          {
            "memberName": "PNJCORP\\toan.ns",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27626"
          },
          {
            "memberName": "PNJCORP\\tu.nm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12504"
          },
          {
            "memberName": "PNJCORP\\anh.nt02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2802"
          },
          {
            "memberName": "PNJCORP\\lai.dt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1505"
          },
          {
            "memberName": "PNJCORP\\hai.dq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1509"
          },
          {
            "memberName": "PNJCORP\\tuan.na01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3811"
          },
          {
            "memberName": "PNJCORP\\liem.nt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10131"
          },
          {
            "memberName": "PNJCORP\\trang.ntp",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1552"
          },
          {
            "memberName": "PNJCORP\\hanh.ptm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2841"
          },
          {
            "memberName": "PNJCORP\\hieu.ht",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5515"
          },
          {
            "memberName": "PNJCORP\\diep.bq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25537"
          },
          {
            "memberName": "PNJCORP\\ha.ttt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1675"
          },
          {
            "memberName": "PNJCORP\\cuong.tk01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1682"
          },
          {
            "memberName": "PNJCORP\\phuong.dd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2803"
          },
          {
            "memberName": "PNJCORP\\dung.pt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4013"
          },
          {
            "memberName": "PNJCORP\\dung.ln",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22191"
          },
          {
            "memberName": "PNJCORP\\tuan.hm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25263"
          },
          {
            "memberName": "PNJCORP\\trung.nb01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-21244"
          },
          {
            "memberName": "PNJCORP\\loi.lq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6263"
          },
          {
            "memberName": "PNJCORP\\huy.nn01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6304"
          },
          {
            "memberName": "PNJCORP\\giang.lt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6308"
          },
          {
            "memberName": "PNJCORP\\thanh.tq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5029"
          },
          {
            "memberName": "PNJCORP\\tien.ltt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5032"
          },
          {
            "memberName": "PNJCORP\\ha.ntt12",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24707"
          },
          {
            "memberName": "PNJCORP\\nha.tt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5484"
          },
          {
            "memberName": "PNJCORP\\thao.ttt07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24946"
          },
          {
            "memberName": "PNJCORP\\long.tnp",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22543"
          },
          {
            "memberName": "PNJCORP\\hien.ntl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2742"
          },
          {
            "memberName": "PNJCORP\\linh.nk03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28521"
          },
          {
            "memberName": "PNJCORP\\xuan.ntl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27511"
          },
          {
            "memberName": "PNJCORP\\anh.ntb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23523"
          },
          {
            "memberName": "PNJCORP\\ngan.ttk08",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26203"
          },
          {
            "memberName": "PNJCORP\\quynh.ntn06",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14672"
          },
          {
            "memberName": "PNJCORP\\phung.dbk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-21366"
          },
          {
            "memberName": "PNJCORP\\nhut.np",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24903"
          },
          {
            "memberName": "PNJCORP\\hien.bm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29247"
          },
          {
            "memberName": "PNJCORP\\tam.nt09",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25227"
          },
          {
            "memberName": "PNJCORP\\vu.dm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25099"
          },
          {
            "memberName": "PNJCORP\\dung.pdt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26295"
          },
          {
            "memberName": "PNJCORP\\truc.ns",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10289"
          },
          {
            "memberName": "PNJCORP\\phuong.ntl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10168"
          },
          {
            "memberName": "PNJCORP\\khoi.ntd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25352"
          },
          {
            "memberName": "PNJCORP\\quan.nnv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23383"
          },
          {
            "memberName": "PNJCORP\\ngoc.ntt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24498"
          },
          {
            "memberName": "PNJCORP\\anh.phn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1681"
          },
          {
            "memberName": "PNJCORP\\hieu.nv06",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26105"
          },
          {
            "memberName": "PNJCORP\\tram.nh",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28862"
          },
          {
            "memberName": "PNJCORP\\khoa.nvd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14649"
          },
          {
            "memberName": "PNJCORP\\cuc.nt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4178"
          },
          {
            "memberName": "PNJCORP\\suong.btt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-13057"
          },
          {
            "memberName": "PNJCORP\\yen.ltk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5265"
          },
          {
            "memberName": "PNJCORP\\an.tv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10284"
          },
          {
            "memberName": "PNJCORP\\hong.ntt02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6631"
          },
          {
            "memberName": "PNJCORP\\trang.tth",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5741"
          },
          {
            "memberName": "PNJCORP\\ngoc.nt04",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-9895"
          },
          {
            "memberName": "PNJCORP\\nguyet.ntm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4127"
          },
          {
            "memberName": "PNJCORP\\huong.ctm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4331"
          },
          {
            "memberName": "PNJCORP\\hieu.th",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-16275"
          },
          {
            "memberName": "PNJCORP\\diep.ntn04",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27213"
          },
          {
            "memberName": "PNJCORP\\suong.ltc",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5768"
          },
          {
            "memberName": "PNJCORP\\tran.lhb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5359"
          },
          {
            "memberName": "PNJCORP\\hung.nh02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5480"
          },
          {
            "memberName": "PNJCORP\\tam.ntb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5497"
          },
          {
            "memberName": "PNJCORP\\vu.nd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6510"
          },
          {
            "memberName": "PNJCORP\\quynh.tdt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2395"
          },
          {
            "memberName": "PNJCORP\\sang.lk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2536"
          },
          {
            "memberName": "PNJCORP\\an.nt06",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-20437"
          },
          {
            "memberName": "PNJCORP\\binh.ht01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12884"
          },
          {
            "memberName": "PNJCORP\\hau.nth",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2471"
          },
          {
            "memberName": "PNJCORP\\vy.nt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1767"
          },
          {
            "memberName": "PNJCORP\\khanh.dt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10171"
          },
          {
            "memberName": "PNJCORP\\dinh.hn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5223"
          },
          {
            "memberName": "PNJCORP\\truc.tn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1850"
          },
          {
            "memberName": "PNJCORP\\anh.nn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1852"
          },
          {
            "memberName": "PNJCORP\\tien.dm01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28081"
          },
          {
            "memberName": "PNJCORP\\huong.dtm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5650"
          },
          {
            "memberName": "PNJCORP\\trang.ntt07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2137"
          },
          {
            "memberName": "PNJCORP\\khang.da",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2277"
          },
          {
            "memberName": "PNJCORP\\ngoc.lnb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5033"
          },
          {
            "memberName": "PNJCORP\\phuong.ntm05",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14711"
          },
          {
            "memberName": "PNJCORP\\toan.ts",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14695"
          },
          {
            "memberName": "PNJCORP\\huong.pt02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-13699"
          },
          {
            "memberName": "PNJCORP\\tan.tq01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5718"
          },
          {
            "memberName": "PNJCORP\\phuong.dtd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1586"
          },
          {
            "memberName": "PNJCORP\\thuy.pt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4070"
          },
          {
            "memberName": "PNJCORP\\han.ltn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1585"
          },
          {
            "memberName": "PNJCORP\\loan.ttp01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1593"
          },
          {
            "memberName": "PNJCORP\\trung.lnt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26770"
          },
          {
            "memberName": "PNJCORP\\tuan.nm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14670"
          },
          {
            "memberName": "PNJCORP\\duong.pq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22098"
          },
          {
            "memberName": "PNJCORP\\that.hl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25106"
          },
          {
            "memberName": "PNJCORP\\lam.th01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27250"
          },
          {
            "memberName": "PNJCORP\\son.dtk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4104"
          },
          {
            "memberName": "PNJCORP\\vu.nvt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12566"
          },
          {
            "memberName": "PNJCORP\\uyen.hp",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1678"
          },
          {
            "memberName": "PNJCORP\\huy.qhn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1690"
          },
          {
            "memberName": "PNJCORP\\lam.lk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24119"
          },
          {
            "memberName": "PNJCORP\\tuan.ta03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23807"
          },
          {
            "memberName": "PNJCORP\\cuong.th01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25053"
          },
          {
            "memberName": "PNJCORP\\giang.l",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6309"
          },
          {
            "memberName": "PNJCORP\\binh.nlv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-15418"
          },
          {
            "memberName": "PNJCORP\\cong.lt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25324"
          },
          {
            "memberName": "PNJCORP\\trang.lm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4024"
          },
          {
            "memberName": "PNJCORP\\dung.lv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4023"
          },
          {
            "memberName": "PNJCORP\\nam.mt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-20963"
          },
          {
            "memberName": "PNJCORP\\thinh.vm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4029"
          },
          {
            "memberName": "PNJCORP\\thao.ndm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-16370"
          },
          {
            "memberName": "PNJCORP\\trung.nk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14589"
          },
          {
            "memberName": "PNJCORP\\phuc.nt02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6307"
          },
          {
            "memberName": "PNJCORP\\tho.tm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-19009"
          },
          {
            "memberName": "PNJCORP\\dung.pth01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-12692"
          },
          {
            "memberName": "PNJCORP\\hiep.tn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27467"
          },
          {
            "memberName": "PNJCORP\\hung.pv05",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28321"
          },
          {
            "memberName": "PNJCORP\\quyen.ndb",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28083"
          },
          {
            "memberName": "PNJCORP\\thanh.nt11",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26051"
          },
          {
            "memberName": "PNJCORP\\chuong.ph01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-15199"
          },
          {
            "memberName": "PNJCORP\\thai.lv",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2675"
          },
          {
            "memberName": "PNJCORP\\ngan.nn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-13066"
          },
          {
            "memberName": "PNJCORP\\nhan.vc",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25244"
          },
          {
            "memberName": "PNJCORP\\hai.dtt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4077"
          },
          {
            "memberName": "PNJCORP\\anh.ttn05",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27392"
          },
          {
            "memberName": "PNJCORP\\ngoc.pa",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28516"
          },
          {
            "memberName": "PNJCORP\\ngan.ntk02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6323"
          },
          {
            "memberName": "PNJCORP\\bi.ptkd",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25208"
          },
          {
            "memberName": "PNJCORP\\DTC",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27866"
          },
          {
            "memberName": "PNJCORP\\hoi.vx",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28963"
          },
          {
            "memberName": "PNJCORP\\an.pd01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26874"
          },
          {
            "memberName": "PNJCORP\\anh.nl02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24002"
          },
          {
            "memberName": "PNJCORP\\phuoc.nt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1873"
          },
          {
            "memberName": "PNJCORP\\tan.tq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-3197"
          },
          {
            "memberName": "PNJCORP\\ha.nt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-4015"
          },
          {
            "memberName": "PNJCORP\\ha.ntt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5034"
          },
          {
            "memberName": "PNJCORP\\loan.ntt01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6303"
          },
          {
            "memberName": "PNJCORP\\loan.tth01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10123"
          },
          {
            "memberName": "PNJCORP\\hien.htt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-5485"
          },
          {
            "memberName": "PNJCORP\\yen.bh",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-14673"
          },
          {
            "memberName": "PNJCORP\\toan.nv02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23217"
          },
          {
            "memberName": "PNJCORP\\vinh.t",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26338"
          },
          {
            "memberName": "PNJCORP\\quyen.ct",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28769"
          },
          {
            "memberName": "PNJCORP\\uyen.dp",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29293"
          },
          {
            "memberName": "PNJCORP\\nhu.lq",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-2761"
          },
          {
            "memberName": "PNJCORP\\truc.nht",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1589"
          },
          {
            "memberName": "PNJCORP\\trinh.ntt05",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-7493"
          },
          {
            "memberName": "PNJCORP\\yen.vn",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-18767"
          },
          {
            "memberName": "PNJCORP\\phuong.pt04",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23491"
          },
          {
            "memberName": "PNJCORP\\thao.ttt13",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29072"
          },
          {
            "memberName": "PNJCORP\\thuyen.nnm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28790"
          },
          {
            "memberName": "PNJCORP\\huyen.lm",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-10026"
          },
          {
            "memberName": "PNJCORP\\nhung.nh04",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29187"
          },
          {
            "memberName": "PNJCORP\\thao.tp07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-29089"
          },
          {
            "memberName": "PNJCORP\\linh.pth01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27346"
          },
          {
            "memberName": "PNJCORP\\nghiem.mbt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23341"
          },
          {
            "memberName": "PNJCORP\\thanh.vk01",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27478"
          },
          {
            "memberName": "PNJCORP\\linh.ttt07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24850"
          },
          {
            "memberName": "PNJCORP\\toan.nt04",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25692"
          },
          {
            "memberName": "PNJCORP\\biqtcl",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23430"
          }
        ],
        "tablePermissions": [
          {
            "name": "Dim - Plant",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid], 'Dim - Plant'[Row_Wid])"
          },
          {
            "name": "Dim - Authoring",
            "filterExpression": "False"
          },
          {
            "name": "Fact - All Sales Invoice Line",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'Fact - All Sales Invoice Line'[Plant_Wid])"
          },
          {
            "name": "Fact - Plan Data",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'Fact - Plan Data'[PLANT_WID])"
          },
          {
            "name": "Fact - Camera InStore",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'Fact - Camera InStore'[Plant_Wid])"
          },
          {
            "name": "CVR by Store by Date",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'CVR by Store by Date'[PLANT_WID])"
          },
          {
            "name": "Dim - Future Quater",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - RFM",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - Purchase Order Line",
            "filterExpression": "FALSE"
          },
          {
            "name": "Dim - Cluster",
            "filterExpression": "FALSE"
          },
          {
            "name": "Dim - NHVV_Error",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - Customer Visit",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - Shipment",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - NHVV",
            "filterExpression": "FALSE"
          },
          {
            "name": "Fact - Inventory Transaction",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'Fact - Inventory Transaction'[PLANT_WID])"
          },
          {
            "name": "Fact - Inventory Aging",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant_Wid],  'Fact - Inventory Aging'[PLANT_WID])"
          },
          {
            "name": "Fact - Inventory Quota",
            "filterExpression": "CONTAINS('Dim - Authoring', 'Dim - Authoring'[Email], USERPRINCIPALNAME(),'Dim - Authoring'[Plant Code],  'Fact - Inventory Quota'[Plant Code])"
          }
        ]
      },
      {
        "name": "Brands",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "PNJCORP\\ngoc.pth",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-17599"
          },
          {
            "memberName": "PNJCORP\\anh.bln",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25377"
          },
          {
            "memberName": "PNJCORP\\phuong.ntt07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-15122"
          },
          {
            "memberName": "PNJCORP\\ngoc.ntn03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-24158"
          },
          {
            "memberName": "PNJCORP\\trang.ntm07",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28688"
          },
          {
            "memberName": "PNJCORP\\ngan.ntk02",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-6323"
          },
          {
            "memberName": "PNJCORP\\ngoc.pa",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28516"
          },
          {
            "memberName": "PNJCORP\\nhan.vc",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25244"
          },
          {
            "memberName": "PNJCORP\\tho.la",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-23873"
          },
          {
            "memberName": "PNJCORP\\khang.dt",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28073"
          },
          {
            "memberName": "PNJCORP\\tu.ntc03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27488"
          },
          {
            "memberName": "PNJCORP\\khanh.pp",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-26080"
          },
          {
            "memberName": "PNJCORP\\huong.tt05",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-27216"
          },
          {
            "memberName": "PNJCORP\\hoa.ntm03",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-25844"
          },
          {
            "memberName": "PNJCORP\\hang.ntt11",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-22400"
          },
          {
            "memberName": "PNJCORP\\loan.lk",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-1677"
          },
          {
            "memberName": "PNJCORP\\gia.ch",
            "memberId": "S-1-5-21-3941070233-2248949771-1228141224-28863"
          }
        ],
        "tablePermissions": [
          {
            "name": "Dim - Product",
            "filterExpression": "CONTAINS('Dim - Authoring Brands', 'Dim - Authoring Brands'[Email], USERPRINCIPALNAME(),'Dim - Authoring Brands'[Brands], 'Dim - Product'[Co-Operate Brand])"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}